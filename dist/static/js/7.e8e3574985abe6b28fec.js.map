{"version":3,"sources":["webpack:///static/js/7.e8e3574985abe6b28fec.js","webpack:///./src/views/Postpost.vue","webpack:///./src/fetch/posts.js?8009**","webpack:///./src/fetch/qiniu.js","webpack:///./~/qiniu4js/qiniu4js.js","webpack:///Postpost.vue","webpack:///./~/simplemde/dist/simplemde.min.css","webpack:///./src/views/Postpost.vue?3c88","webpack:///./src/views/Postpost.vue?d367","webpack:///./src/views/Postpost.vue?7adc"],"names":["webpackJsonp","165","module","exports","__webpack_require__","Component","186","__webpack_exports__","toApproval","id","i","__WEBPACK_IMPORTED_MODULE_3__fetchWuan__","url","method","toCollection","params","data","post_id","console","log","showSinglePlanet","offset","limit","planetContent","postId","planetComment","postTop","postLock","postEdit","title","content","postDelete","postReply","comment","Comment","floor","postReplyDelete","postMyCollestion","searchPost","createPost","planetId","indexPosts","__WEBPACK_IMPORTED_MODULE_0_axios__","n","207","getQiniuToken","208","root","factory","this","modules","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Log","_enable","debug","error","warn","info","set","default","_interopRequireDefault","obj","_DirectTask","_DirectTask2","_ChunkTask","_UUID","_UUID2","_UploaderBuilder","_UploaderBuilder2","_Log","_Log2","_SimpleUploadListener","_SimpleUploadListener2","_DirectUploadPattern","_DirectUploadPattern2","_ChunkUploadPattern","_ChunkUploadPattern2","Uploader","builder","_this2","FILE_INPUT_EL_ID","_taskQueue","_tasking","_scale","_saveKey","handleFiles","fileInput","files","generateTask","isInterrupt","interceptedTasks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","taskQueue","Symbol","iterator","next","done","task","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","interceptors","interceptor","onIntercept","push","onInterrupt","err","return","w","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_task","index","indexOf","splice","listener","onReady","handleImages","then","auto","start","resolveUUID","re","test","replace","uuid","resolveImageInfo","blob","widthRe","heightRe","Promise","resolve","img","Image","src","URL","createObjectURL","onload","width","toString","height","onSaveKeyResolved","saveKey","_tokenShare","_retry","getRetry","_size","getSize","_chunk","getChunk","_auto","getAuto","_multiple","getMultiple","_accept","getAccept","_button","getButton","_buttonEventName","getButtonEventName","_compress","getCompress","getScale","getSaveKey","_tokenFunc","getTokenFunc","getTokenShare","_listener","assign","getListener","_interceptors","getInterceptors","_domain","getDomain","_fileInputId","Date","getTime","enable","getIsDebug","validateOptions","init","initFileInputEl","exist","document","getElementById","_fileInput","createElement","type","style","display","multiple","accept","acceptValue","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","endsWith","substring","body","appendChild","addEventListener","chooseFile","bind","_token","resetUploader","file","chunk","size","BLOCK_SIZE","ChunkTask","onTaskGetKey","_this3","promises","compress","scale","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","match","canvas","ctx","getContext","_this","imgW","imgH","scaleW","scaleH","drawImage","toBlob","isChunkTask","spliceFile2Block","all","Error","Array","tasking","onStart","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_task2","isDirectTask","upload","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","isFinish","click","_this4","token","_this5","resolveSaveKey","requestToken","reject","encodeURIComponent","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","status","response","uptoken","onabort","responseType","send","_this6","constructor","_Uploader","_Uploader2","_SimpleUploadInterceptor","_SimpleUploadInterceptor2","UploaderBuilder","UPLOAD_DOMAIN","_scheme","_isDebug","_interceptor","Math","min","max","MAX_CHUNK_SIZE","eventName","arguments","_tokenUrl","uploader","requestTaskToken","_debug","domain","scheme","protocol","window","location","http","https","BaseTask","_progress","_isSuccess","_isFinish","_file","_createDate","_startDate","_endDate","_result","_error","_key","SimpleUploadListener","SimpleUploadInterceptor","ChunkUploadPattern","getToken","startDate","uploadBlock","chain","blocks","totalChunkCount","forEach","block","blockIndex","chunks","chunkIndex","uploadChunk","concatChunks","isTaskQueueFinish","onFinish","catch","isSuccess","endDate","onTaskFail","isFirstChunkInBlock","prevChunk","getUploadBlockUrl","getUploadChunkUrl","host","setRequestHeader","onprogress","e","lengthComputable","progress","round","finishedBlocksSize","loaded","onTaskProgress","responseText","result","JSON","parse","processing","_chunkIndex","hasNextChunkInThisBlock","encodedKey","btoa","getMakeFileUrl","ctxListString","onTaskSuccess","retryTask","onTaskRetry","blockSize","fileSize","retry","DirectUploadPattern","uploadFile","formData","FormData","append","total","createFormData","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","Chunk","Block","_BaseTask2","_BaseTask3","_BaseTask","chunkSize","getPrototypeOf","_blocks","_blockSize","_chunkSize","blockCount","ceil","end","slice","array","count","_chunks","_processing","_data","_start","_end","spliceBlock2Chunk","chunkCount","_block","_host","_ctx","DirectTask","apply","UUID","r","random","source","HTMLCanvasElement","callback","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","String","_toString","search","string","stringLength","searchString","searchLength","pos","position","Number","224","__WEBPACK_IMPORTED_MODULE_0__fetch_posts__","__WEBPACK_IMPORTED_MODULE_1_qiniu4js__","__WEBPACK_IMPORTED_MODULE_2__vuex_store__","__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__","PostpostTitle","PostpostThings","postTitle","postContent","imgUrls","imgArr","methods","PostpostTitleF","pushPost","$router","$Message","success","addImgs","event","urlkey","tokenShare","tokenFunc","setToken","res","uploadToken","warning","tasks","imgsAdd","build","stopPropagation","watch","contents","ind","dispatch","mounted","$route","query","edit","state","postEditContent","238","version","sources","names","mappings","sourcesContent","sourceRoot","256","285","locals","314","render","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","attrs","placeholder","domProps","on","$event","input","composing","staticRenderFns"],"mappings":"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","file":"static/js/7.e8e3574985abe6b28fec.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 165:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(285)\n\nvar Component = __webpack_require__(62)(\n  /* script */\n  __webpack_require__(224),\n  /* template */\n  __webpack_require__(314),\n  /* scopeId */\n  \"data-v-5d3c8778\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 186:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = toApproval;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = toCollection;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = showSinglePlanet;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = planetContent;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = planetComment;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = postTop;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = postLock;\n/* harmony export (immutable) */ __webpack_exports__[\"n\"] = postEdit;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = postDelete;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = postReply;\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = postReplyDelete;\n/* harmony export (immutable) */ __webpack_exports__[\"m\"] = postMyCollestion;\n/* harmony export (immutable) */ __webpack_exports__[\"l\"] = searchPost;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createPost;\n/* harmony export (immutable) */ __webpack_exports__[\"o\"] = indexPosts;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetchWuan__ = __webpack_require__(64);\n\n\n\n\n\nfunction toApproval(id) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + id + '/approval',\n    method: 'post'\n  });\n}\n\nfunction toCollection(params) {\n  var data = {\n    post_id: params.post_id\n  };\n  console.log(data);\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/users/' + params.id + '/collections',\n    method: 'put',\n    data: {\n      post_id: params.post_id\n    }\n  });\n}\n\nfunction showSinglePlanet(params) {\n  var data = {\n    offset: params.offset,\n    limit: params.limit\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + params.id + '/posts',\n    method: 'get',\n    data: data\n  });\n}\n\nfunction planetContent(postId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + postId,\n    method: 'get'\n  });\n}\n\nfunction planetComment(params) {\n  var data = {\n    offset: params.offset,\n    limit: params.limit\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + params.postId + '/comments',\n    method: 'get',\n    data: data\n  });\n}\n\nfunction postTop(postId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + postId + '/tops',\n    method: 'put'\n  });\n}\n\nfunction postLock(postId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + postId + '/locks',\n    method: 'put'\n  });\n}\n\nfunction postEdit(params) {\n  var data = {\n    title: params.title,\n    content: params.content\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + params.postId,\n    method: 'put',\n    data: data\n  });\n}\n\nfunction postDelete(postId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + postId,\n    method: 'delete'\n  });\n}\n\nfunction postReply(params) {\n  var data = {\n    comment: params.Comment,\n    floor: params.floor\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + params.postId + '/comments',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction postReplyDelete(postId, floor) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts/' + postId + '/comments/' + floor,\n    method: 'delete'\n  });\n}\n\nfunction postMyCollestion(id, params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/users/' + id + '/collections?limit=' + params.limit + '&offset=' + params.offset,\n    method: 'get'\n  });\n}\n\nfunction searchPost(params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts',\n    method: 'get',\n    params: params\n  });\n}\n\nfunction createPost(planetId, params) {\n  var data = params;\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId + '/posts',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction indexPosts(params) {\n  var data = params;\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/posts',\n    method: 'get',\n    params: data\n  });\n}\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getQiniuToken;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetchWuan__ = __webpack_require__(64);\n\n\n\n\n\nfunction getQiniuToken() {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/qiniu/token',\n    method: 'get'\n  });\n}\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n/***/ }),\n\n/***/ 224:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__fetch_posts__ = __webpack_require__(186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_qiniu4js__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_qiniu4js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_qiniu4js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__ = __webpack_require__(207);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'postpost',\n  data: function data() {\n    return {\n      PostpostTitle: false,\n      PostpostThings: false,\n      postTitle: '',\n      postContent: '',\n      imgUrls: 'http://7xlx4u.com1.z0.glb.clouddn.com/',\n      imgArr: []\n    };\n  },\n\n  methods: {\n    PostpostTitleF: function PostpostTitleF(n) {\n      var self = this;\n      self.PostpostTitle = false;\n      self.PostpostThings = false;\n      switch (n) {\n        case 1:\n          self.PostpostTitle = true;\n          break;\n        case 2:\n          self.PostpostThings = true;\n          break;\n      }\n    },\n    pushPost: function pushPost() {\n      var _this = this;\n\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__fetch_posts__[\"a\" /* createPost */])(this.$router.params.postId, {\n        title: this.postTitle,\n        content: this.postContent\n      }).then(function (response) {\n        console.log(\"发帖成功，帖子ID: \" + response.id);\n        _this.$Message.success('发帖成功');\n      }).catch(function (error) {\n        console.log(\"发帖失败: \" + error);\n        _this.$Message.error('发帖失败' + error);\n      });\n    },\n    addImgs: function addImgs(event) {\n      var self = this;\n\n      var urlkey = '';\n      var uploader = new __WEBPACK_IMPORTED_MODULE_1_qiniu4js__[\"UploaderBuilder\"]().debug(false).domain({ http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\" }).retry(2).compress(0.5).scale([200, 0]).size(1024 * 1024).chunk(true).auto(true).multiple(false).accept(['.gif', '.png', '.jpg']).tokenShare(true).tokenFunc(function (setToken, task) {\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__[\"a\" /* getQiniuToken */])().then(function (res) {\n          setToken(res.uploadToken);\n        });\n      }).interceptor({\n        onIntercept: function onIntercept(task) {\n          return task.file.size > 4 * 1024 * 1024;\n        },\n\n        onInterrupt: function onInterrupt(task) {\n          if (this.onIntercept(task)) {\n            self.$Message.warning('请上传小于4m的文件');\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }).listener({\n        onReady: function onReady(tasks) {},\n        onStart: function onStart(tasks) {\n          console.log('upload start');\n        },\n        onTaskGetKey: function onTaskGetKey(task) {},\n        onTaskProgress: function onTaskProgress(task) {\n          console.log(task.progress);\n        }, onTaskSuccess: function onTaskSuccess(task) {\n          console.log(task.result.key);\n          urlkey = task.result.key;\n          self.imgsAdd(urlkey);\n        },\n        onTaskFail: function onTaskFail(task) {},\n        onTaskRetry: function onTaskRetry(task) {},\n        onFinish: function onFinish(tasks) {}\n      }).build();\n      uploader.chooseFile();\n      event.stopPropagation();\n    },\n    imgsAdd: function imgsAdd(urlkey) {\n      var self = this;\n      if (urlkey !== '') {\n        urlkey = \"http://7xlx4u.com1.z0.glb.clouddn.com/\" + urlkey;\n        if (urlkey !== 'http://7xlx4u.com1.z0.glb.clouddn.com/') {\n          if (urlkey !== this.imgUrls) {\n            self.postContent = self.postContent + \"[图片]\";\n            console.log(self.postContent);\n            self.imgArr.push(urlkey);\n            self.imgUrls = urlkey;\n          }\n        }\n        urlkey = \"\";\n      }\n    }\n  },\n  watch: {\n    postContent: function postContent() {\n      var contents = this.postContent;\n      var ind = contents.indexOf('[图片]');\n      var i = 0;\n      while (ind > -1) {\n        contents = contents.replace(/\\[图片\\]/, \"<img src='\" + this.imgArr[i] + \"' />\");\n        i++;\n        ind = contents.indexOf('[图片]');\n      }\n      __WEBPACK_IMPORTED_MODULE_2__vuex_store__[\"a\" /* default */].dispatch('setPostContent', {\n        title: this.postTitle,\n        content: contents\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (this.$route.query.edit == true) {\n      this.postTitle = __WEBPACK_IMPORTED_MODULE_2__vuex_store__[\"a\" /* default */].state.postEditContent.title;\n      this.postContent = __WEBPACK_IMPORTED_MODULE_2__vuex_store__[\"a\" /* default */].state.postEditContent.content;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 238:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(148)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".CodeMirror{color:#000}.CodeMirror-lines{padding:4px 0}.CodeMirror pre{padding:0 4px}.CodeMirror-gutter-filler,.CodeMirror-scrollbar-filler{background-color:#fff}.CodeMirror-gutters{border-right:1px solid #ddd;background-color:#f7f7f7;white-space:nowrap}.CodeMirror-linenumber{padding:0 3px 0 5px;min-width:20px;text-align:right;color:#999;white-space:nowrap}.CodeMirror-guttermarker{color:#000}.CodeMirror-guttermarker-subtle{color:#999}.CodeMirror-cursor{border-left:1px solid #000;border-right:none;width:0}.CodeMirror div.CodeMirror-secondarycursor{border-left:1px solid silver}.cm-fat-cursor .CodeMirror-cursor{width:auto;border:0!important;background:#7e7}.cm-fat-cursor div.CodeMirror-cursors{z-index:1}.cm-animate-fat-cursor{width:auto;border:0;-webkit-animation:blink 1.06s steps(1) infinite;-moz-animation:blink 1.06s steps(1) infinite;animation:blink 1.06s steps(1) infinite;background-color:#7e7}@-moz-keyframes blink{50%{background-color:transparent}}@-webkit-keyframes blink{50%{background-color:transparent}}@keyframes blink{50%{background-color:transparent}}.cm-tab{display:inline-block;text-decoration:inherit}.CodeMirror-ruler{border-left:1px solid #ccc;position:absolute}.cm-s-default .cm-header{color:#00f}.cm-s-default .cm-quote{color:#090}.cm-negative{color:#d44}.cm-positive{color:#292}.cm-header,.cm-strong{font-weight:700}.cm-em{font-style:italic}.cm-link{text-decoration:underline}.cm-strikethrough{text-decoration:line-through}.cm-s-default .cm-keyword{color:#708}.cm-s-default .cm-atom{color:#219}.cm-s-default .cm-number{color:#164}.cm-s-default .cm-def{color:#00f}.cm-s-default .cm-variable-2{color:#05a}.cm-s-default .cm-variable-3{color:#085}.cm-s-default .cm-comment{color:#a50}.cm-s-default .cm-string{color:#a11}.cm-s-default .cm-string-2{color:#f50}.cm-s-default .cm-meta,.cm-s-default .cm-qualifier{color:#555}.cm-s-default .cm-builtin{color:#30a}.cm-s-default .cm-bracket{color:#997}.cm-s-default .cm-tag{color:#170}.cm-s-default .cm-attribute{color:#00c}.cm-s-default .cm-hr{color:#999}.cm-s-default .cm-link{color:#00c}.cm-invalidchar,.cm-s-default .cm-error{color:red}.CodeMirror-composing{border-bottom:2px solid}div.CodeMirror span.CodeMirror-matchingbracket{color:#0f0}div.CodeMirror span.CodeMirror-nonmatchingbracket{color:#f22}.CodeMirror-matchingtag{background:rgba(255,150,0,.3)}.CodeMirror-activeline-background{background:#e8f2ff}.CodeMirror{position:relative;overflow:hidden;background:#fff}.CodeMirror-scroll{overflow:scroll!important;margin-bottom:-30px;margin-right:-30px;padding-bottom:30px;height:100%;outline:0;position:relative}.CodeMirror-sizer{position:relative;border-right:30px solid transparent}.CodeMirror-gutter-filler,.CodeMirror-hscrollbar,.CodeMirror-scrollbar-filler,.CodeMirror-vscrollbar{position:absolute;z-index:6;display:none}.CodeMirror-vscrollbar{right:0;top:0;overflow-x:hidden;overflow-y:scroll}.CodeMirror-hscrollbar{bottom:0;left:0;overflow-y:hidden;overflow-x:scroll}.CodeMirror-scrollbar-filler{right:0;bottom:0}.CodeMirror-gutter-filler{left:0;bottom:0}.CodeMirror-gutters{position:absolute;left:0;top:0;min-height:100%;z-index:3}.CodeMirror-gutter{white-space:normal;height:100%;display:inline-block;vertical-align:top;margin-bottom:-30px}.CodeMirror-gutter-wrapper{position:absolute;z-index:4;background:0 0!important;border:none!important;-webkit-user-select:none;-moz-user-select:none;user-select:none}.CodeMirror-gutter-background{position:absolute;top:0;bottom:0;z-index:4}.CodeMirror-gutter-elt{position:absolute;cursor:default;z-index:4}.CodeMirror-lines{cursor:text;min-height:1px}.CodeMirror pre{-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;border-width:0;background:0 0;font-family:inherit;font-size:inherit;margin:0;white-space:pre;word-wrap:normal;line-height:inherit;color:inherit;z-index:2;position:relative;overflow:visible;-webkit-tap-highlight-color:transparent;-webkit-font-variant-ligatures:none;font-variant-ligatures:none}.CodeMirror-wrap pre{word-wrap:break-word;white-space:pre-wrap;word-break:normal}.CodeMirror-linebackground{position:absolute;left:0;right:0;top:0;bottom:0;z-index:0}.CodeMirror-linewidget{position:relative;z-index:2;overflow:auto}.CodeMirror-code{outline:0}.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber,.CodeMirror-scroll,.CodeMirror-sizer{-moz-box-sizing:content-box;box-sizing:content-box}.CodeMirror-measure{position:absolute;width:100%;height:0;overflow:hidden;visibility:hidden}.CodeMirror-cursor{position:absolute}.CodeMirror-measure pre{position:static}div.CodeMirror-cursors{visibility:hidden;position:relative;z-index:3}.CodeMirror-focused div.CodeMirror-cursors,div.CodeMirror-dragcursors{visibility:visible}.CodeMirror-selected{background:#d9d9d9}.CodeMirror-focused .CodeMirror-selected,.CodeMirror-line::selection,.CodeMirror-line>span::selection,.CodeMirror-line>span>span::selection{background:#d7d4f0}.CodeMirror-crosshair{cursor:crosshair}.CodeMirror-line::-moz-selection,.CodeMirror-line>span::-moz-selection,.CodeMirror-line>span>span::-moz-selection{background:#d7d4f0}.cm-searching{background:#ffa;background:rgba(255,255,0,.4)}.cm-force-border{padding-right:.1px}@media print{.CodeMirror div.CodeMirror-cursors{visibility:hidden}}.cm-tab-wrap-hack:after{content:\\\"\\\"}span.CodeMirror-selectedtext{background:0 0}.CodeMirror{height:auto;border:1px solid #ddd;border-bottom-left-radius:4px;border-bottom-right-radius:4px;padding:10px;font:inherit;z-index:1}.CodeMirror,.CodeMirror-scroll{min-height:300px}.CodeMirror-fullscreen{background:#fff;position:fixed!important;top:50px;left:0;right:0;bottom:0;height:auto;z-index:9}.CodeMirror-sided{width:50%!important}.editor-toolbar{position:relative;opacity:.6;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;padding:0 10px;border-top:1px solid #bbb;border-left:1px solid #bbb;border-right:1px solid #bbb;border-top-left-radius:4px;border-top-right-radius:4px}.editor-toolbar:after,.editor-toolbar:before{display:block;content:\\\" \\\";height:1px}.editor-toolbar:before{margin-bottom:8px}.editor-toolbar:after{margin-top:8px}.editor-toolbar:hover,.editor-wrapper input.title:focus,.editor-wrapper input.title:hover{opacity:.8}.editor-toolbar.fullscreen{width:100%;height:50px;overflow-x:auto;overflow-y:hidden;white-space:nowrap;padding-top:10px;padding-bottom:10px;box-sizing:border-box;background:#fff;border:0;position:fixed;top:0;left:0;opacity:1;z-index:9}.editor-toolbar.fullscreen:before{width:20px;height:50px;background:-moz-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,#fff),color-stop(100%,hsla(0,0%,100%,0)));background:-webkit-linear-gradient(left,#fff,hsla(0,0%,100%,0));background:-o-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:-ms-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:linear-gradient(90deg,#fff 0,hsla(0,0%,100%,0));position:fixed;top:0;left:0;margin:0;padding:0}.editor-toolbar.fullscreen:after{width:20px;height:50px;background:-moz-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,hsla(0,0%,100%,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(left,hsla(0,0%,100%,0),#fff);background:-o-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:-ms-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:linear-gradient(90deg,hsla(0,0%,100%,0) 0,#fff);position:fixed;top:0;right:0;margin:0;padding:0}.editor-toolbar a{display:inline-block;text-align:center;text-decoration:none!important;color:#2c3e50!important;width:30px;height:30px;margin:0;border:1px solid transparent;border-radius:3px;cursor:pointer}.editor-toolbar a.active,.editor-toolbar a:hover{background:#fcfcfc;border-color:#95a5a6}.editor-toolbar a:before{line-height:30px}.editor-toolbar i.separator{display:inline-block;width:0;border-left:1px solid #d9d9d9;border-right:1px solid #fff;color:transparent;text-indent:-10px;margin:0 6px}.editor-toolbar a.fa-header-x:after{font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:65%;vertical-align:text-bottom;position:relative;top:2px}.editor-toolbar a.fa-header-1:after{content:\\\"1\\\"}.editor-toolbar a.fa-header-2:after{content:\\\"2\\\"}.editor-toolbar a.fa-header-3:after{content:\\\"3\\\"}.editor-toolbar a.fa-header-bigger:after{content:\\\"\\\\25B2\\\"}.editor-toolbar a.fa-header-smaller:after{content:\\\"\\\\25BC\\\"}.editor-toolbar.disabled-for-preview a:not(.no-disable){pointer-events:none;background:#fff;border-color:transparent;text-shadow:inherit}@media only screen and (max-width:700px){.editor-toolbar a.no-mobile{display:none}}.editor-statusbar{padding:8px 10px;font-size:12px;color:#959694;text-align:right}.editor-statusbar span{display:inline-block;min-width:4em;margin-left:1em}.editor-preview,.editor-preview-side{padding:10px;background:#fafafa;overflow:auto;display:none;box-sizing:border-box}.editor-statusbar .lines:before{content:\\\"lines: \\\"}.editor-statusbar .words:before{content:\\\"words: \\\"}.editor-statusbar .characters:before{content:\\\"characters: \\\"}.editor-preview{position:absolute;width:100%;height:100%;top:0;left:0;z-index:7}.editor-preview-side{position:fixed;bottom:0;width:50%;top:50px;right:0;z-index:9;border:1px solid #ddd}.editor-preview-active,.editor-preview-active-side{display:block}.editor-preview-side>p,.editor-preview>p{margin-top:0}.editor-preview-side pre,.editor-preview pre{background:#eee;margin-bottom:10px}.editor-preview-side table td,.editor-preview-side table th,.editor-preview table td,.editor-preview table th{border:1px solid #ddd;padding:5px}.CodeMirror .CodeMirror-code .cm-tag{color:#63a35c}.CodeMirror .CodeMirror-code .cm-attribute{color:#795da3}.CodeMirror .CodeMirror-code .cm-string{color:#183691}.CodeMirror .CodeMirror-selected{background:#d9d9d9}.CodeMirror .CodeMirror-code .cm-header-1{font-size:200%;line-height:200%}.CodeMirror .CodeMirror-code .cm-header-2{font-size:160%;line-height:160%}.CodeMirror .CodeMirror-code .cm-header-3{font-size:125%;line-height:125%}.CodeMirror .CodeMirror-code .cm-header-4{font-size:110%;line-height:110%}.CodeMirror .CodeMirror-code .cm-comment{background:rgba(0,0,0,.05);border-radius:2px}.CodeMirror .CodeMirror-code .cm-link{color:#7f8c8d}.CodeMirror .CodeMirror-code .cm-url{color:#aab2b3}.CodeMirror .CodeMirror-code .cm-strikethrough{text-decoration:line-through}.CodeMirror .CodeMirror-placeholder{opacity:.5}.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word){background:rgba(255,0,0,.15)}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/node_modules/simplemde/dist/simplemde.min.css\"],\"names\":[],\"mappings\":\"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\",\"file\":\"simplemde.min.css\",\"sourcesContent\":[\"/**\\n * simplemde v1.11.2\\n * Copyright Next Step Webs, Inc.\\n * @link https://github.com/NextStepWebs/simplemde-markdown-editor\\n * @license MIT\\n */\\n.CodeMirror{color:#000}.CodeMirror-lines{padding:4px 0}.CodeMirror pre{padding:0 4px}.CodeMirror-gutter-filler,.CodeMirror-scrollbar-filler{background-color:#fff}.CodeMirror-gutters{border-right:1px solid #ddd;background-color:#f7f7f7;white-space:nowrap}.CodeMirror-linenumber{padding:0 3px 0 5px;min-width:20px;text-align:right;color:#999;white-space:nowrap}.CodeMirror-guttermarker{color:#000}.CodeMirror-guttermarker-subtle{color:#999}.CodeMirror-cursor{border-left:1px solid #000;border-right:none;width:0}.CodeMirror div.CodeMirror-secondarycursor{border-left:1px solid silver}.cm-fat-cursor .CodeMirror-cursor{width:auto;border:0!important;background:#7e7}.cm-fat-cursor div.CodeMirror-cursors{z-index:1}.cm-animate-fat-cursor{width:auto;border:0;-webkit-animation:blink 1.06s steps(1) infinite;-moz-animation:blink 1.06s steps(1) infinite;animation:blink 1.06s steps(1) infinite;background-color:#7e7}@-moz-keyframes blink{50%{background-color:transparent}}@-webkit-keyframes blink{50%{background-color:transparent}}@keyframes blink{50%{background-color:transparent}}.cm-tab{display:inline-block;text-decoration:inherit}.CodeMirror-ruler{border-left:1px solid #ccc;position:absolute}.cm-s-default .cm-header{color:#00f}.cm-s-default .cm-quote{color:#090}.cm-negative{color:#d44}.cm-positive{color:#292}.cm-header,.cm-strong{font-weight:700}.cm-em{font-style:italic}.cm-link{text-decoration:underline}.cm-strikethrough{text-decoration:line-through}.cm-s-default .cm-keyword{color:#708}.cm-s-default .cm-atom{color:#219}.cm-s-default .cm-number{color:#164}.cm-s-default .cm-def{color:#00f}.cm-s-default .cm-variable-2{color:#05a}.cm-s-default .cm-variable-3{color:#085}.cm-s-default .cm-comment{color:#a50}.cm-s-default .cm-string{color:#a11}.cm-s-default .cm-string-2{color:#f50}.cm-s-default .cm-meta,.cm-s-default .cm-qualifier{color:#555}.cm-s-default .cm-builtin{color:#30a}.cm-s-default .cm-bracket{color:#997}.cm-s-default .cm-tag{color:#170}.cm-s-default .cm-attribute{color:#00c}.cm-s-default .cm-hr{color:#999}.cm-s-default .cm-link{color:#00c}.cm-invalidchar,.cm-s-default .cm-error{color:red}.CodeMirror-composing{border-bottom:2px solid}div.CodeMirror span.CodeMirror-matchingbracket{color:#0f0}div.CodeMirror span.CodeMirror-nonmatchingbracket{color:#f22}.CodeMirror-matchingtag{background:rgba(255,150,0,.3)}.CodeMirror-activeline-background{background:#e8f2ff}.CodeMirror{position:relative;overflow:hidden;background:#fff}.CodeMirror-scroll{overflow:scroll!important;margin-bottom:-30px;margin-right:-30px;padding-bottom:30px;height:100%;outline:0;position:relative}.CodeMirror-sizer{position:relative;border-right:30px solid transparent}.CodeMirror-gutter-filler,.CodeMirror-hscrollbar,.CodeMirror-scrollbar-filler,.CodeMirror-vscrollbar{position:absolute;z-index:6;display:none}.CodeMirror-vscrollbar{right:0;top:0;overflow-x:hidden;overflow-y:scroll}.CodeMirror-hscrollbar{bottom:0;left:0;overflow-y:hidden;overflow-x:scroll}.CodeMirror-scrollbar-filler{right:0;bottom:0}.CodeMirror-gutter-filler{left:0;bottom:0}.CodeMirror-gutters{position:absolute;left:0;top:0;min-height:100%;z-index:3}.CodeMirror-gutter{white-space:normal;height:100%;display:inline-block;vertical-align:top;margin-bottom:-30px}.CodeMirror-gutter-wrapper{position:absolute;z-index:4;background:0 0!important;border:none!important;-webkit-user-select:none;-moz-user-select:none;user-select:none}.CodeMirror-gutter-background{position:absolute;top:0;bottom:0;z-index:4}.CodeMirror-gutter-elt{position:absolute;cursor:default;z-index:4}.CodeMirror-lines{cursor:text;min-height:1px}.CodeMirror pre{-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;border-width:0;background:0 0;font-family:inherit;font-size:inherit;margin:0;white-space:pre;word-wrap:normal;line-height:inherit;color:inherit;z-index:2;position:relative;overflow:visible;-webkit-tap-highlight-color:transparent;-webkit-font-variant-ligatures:none;font-variant-ligatures:none}.CodeMirror-wrap pre{word-wrap:break-word;white-space:pre-wrap;word-break:normal}.CodeMirror-linebackground{position:absolute;left:0;right:0;top:0;bottom:0;z-index:0}.CodeMirror-linewidget{position:relative;z-index:2;overflow:auto}.CodeMirror-code{outline:0}.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber,.CodeMirror-scroll,.CodeMirror-sizer{-moz-box-sizing:content-box;box-sizing:content-box}.CodeMirror-measure{position:absolute;width:100%;height:0;overflow:hidden;visibility:hidden}.CodeMirror-cursor{position:absolute}.CodeMirror-measure pre{position:static}div.CodeMirror-cursors{visibility:hidden;position:relative;z-index:3}.CodeMirror-focused div.CodeMirror-cursors,div.CodeMirror-dragcursors{visibility:visible}.CodeMirror-selected{background:#d9d9d9}.CodeMirror-focused .CodeMirror-selected,.CodeMirror-line::selection,.CodeMirror-line>span::selection,.CodeMirror-line>span>span::selection{background:#d7d4f0}.CodeMirror-crosshair{cursor:crosshair}.CodeMirror-line::-moz-selection,.CodeMirror-line>span::-moz-selection,.CodeMirror-line>span>span::-moz-selection{background:#d7d4f0}.cm-searching{background:#ffa;background:rgba(255,255,0,.4)}.cm-force-border{padding-right:.1px}@media print{.CodeMirror div.CodeMirror-cursors{visibility:hidden}}.cm-tab-wrap-hack:after{content:''}span.CodeMirror-selectedtext{background:0 0}.CodeMirror{height:auto;min-height:300px;border:1px solid #ddd;border-bottom-left-radius:4px;border-bottom-right-radius:4px;padding:10px;font:inherit;z-index:1}.CodeMirror-scroll{min-height:300px}.CodeMirror-fullscreen{background:#fff;position:fixed!important;top:50px;left:0;right:0;bottom:0;height:auto;z-index:9}.CodeMirror-sided{width:50%!important}.editor-toolbar{position:relative;opacity:.6;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;padding:0 10px;border-top:1px solid #bbb;border-left:1px solid #bbb;border-right:1px solid #bbb;border-top-left-radius:4px;border-top-right-radius:4px}.editor-toolbar:after,.editor-toolbar:before{display:block;content:' ';height:1px}.editor-toolbar:before{margin-bottom:8px}.editor-toolbar:after{margin-top:8px}.editor-toolbar:hover,.editor-wrapper input.title:focus,.editor-wrapper input.title:hover{opacity:.8}.editor-toolbar.fullscreen{width:100%;height:50px;overflow-x:auto;overflow-y:hidden;white-space:nowrap;padding-top:10px;padding-bottom:10px;box-sizing:border-box;background:#fff;border:0;position:fixed;top:0;left:0;opacity:1;z-index:9}.editor-toolbar.fullscreen::before{width:20px;height:50px;background:-moz-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(255,255,255,1)),color-stop(100%,rgba(255,255,255,0)));background:-webkit-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-o-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-ms-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:linear-gradient(to right,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);position:fixed;top:0;left:0;margin:0;padding:0}.editor-toolbar.fullscreen::after{width:20px;height:50px;background:-moz-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(255,255,255,0)),color-stop(100%,rgba(255,255,255,1)));background:-webkit-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-o-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-ms-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:linear-gradient(to right,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);position:fixed;top:0;right:0;margin:0;padding:0}.editor-toolbar a{display:inline-block;text-align:center;text-decoration:none!important;color:#2c3e50!important;width:30px;height:30px;margin:0;border:1px solid transparent;border-radius:3px;cursor:pointer}.editor-toolbar a.active,.editor-toolbar a:hover{background:#fcfcfc;border-color:#95a5a6}.editor-toolbar a:before{line-height:30px}.editor-toolbar i.separator{display:inline-block;width:0;border-left:1px solid #d9d9d9;border-right:1px solid #fff;color:transparent;text-indent:-10px;margin:0 6px}.editor-toolbar a.fa-header-x:after{font-family:Arial,\\\"Helvetica Neue\\\",Helvetica,sans-serif;font-size:65%;vertical-align:text-bottom;position:relative;top:2px}.editor-toolbar a.fa-header-1:after{content:\\\"1\\\"}.editor-toolbar a.fa-header-2:after{content:\\\"2\\\"}.editor-toolbar a.fa-header-3:after{content:\\\"3\\\"}.editor-toolbar a.fa-header-bigger:after{content:\\\"▲\\\"}.editor-toolbar a.fa-header-smaller:after{content:\\\"▼\\\"}.editor-toolbar.disabled-for-preview a:not(.no-disable){pointer-events:none;background:#fff;border-color:transparent;text-shadow:inherit}@media only screen and (max-width:700px){.editor-toolbar a.no-mobile{display:none}}.editor-statusbar{padding:8px 10px;font-size:12px;color:#959694;text-align:right}.editor-statusbar span{display:inline-block;min-width:4em;margin-left:1em}.editor-preview,.editor-preview-side{padding:10px;background:#fafafa;overflow:auto;display:none;box-sizing:border-box}.editor-statusbar .lines:before{content:'lines: '}.editor-statusbar .words:before{content:'words: '}.editor-statusbar .characters:before{content:'characters: '}.editor-preview{position:absolute;width:100%;height:100%;top:0;left:0;z-index:7}.editor-preview-side{position:fixed;bottom:0;width:50%;top:50px;right:0;z-index:9;border:1px solid #ddd}.editor-preview-active,.editor-preview-active-side{display:block}.editor-preview-side>p,.editor-preview>p{margin-top:0}.editor-preview pre,.editor-preview-side pre{background:#eee;margin-bottom:10px}.editor-preview table td,.editor-preview table th,.editor-preview-side table td,.editor-preview-side table th{border:1px solid #ddd;padding:5px}.CodeMirror .CodeMirror-code .cm-tag{color:#63a35c}.CodeMirror .CodeMirror-code .cm-attribute{color:#795da3}.CodeMirror .CodeMirror-code .cm-string{color:#183691}.CodeMirror .CodeMirror-selected{background:#d9d9d9}.CodeMirror .CodeMirror-code .cm-header-1{font-size:200%;line-height:200%}.CodeMirror .CodeMirror-code .cm-header-2{font-size:160%;line-height:160%}.CodeMirror .CodeMirror-code .cm-header-3{font-size:125%;line-height:125%}.CodeMirror .CodeMirror-code .cm-header-4{font-size:110%;line-height:110%}.CodeMirror .CodeMirror-code .cm-comment{background:rgba(0,0,0,.05);border-radius:2px}.CodeMirror .CodeMirror-code .cm-link{color:#7f8c8d}.CodeMirror .CodeMirror-code .cm-url{color:#aab2b3}.CodeMirror .CodeMirror-code .cm-strikethrough{text-decoration:line-through}.CodeMirror .CodeMirror-placeholder{opacity:.5}.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word){background:rgba(255,0,0,.15)}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 256:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(148)(true);\n// imports\nexports.i(__webpack_require__(238), \"\");\n\n// module\nexports.push([module.i, \".Postpost[data-v-5d3c8778]{padding:.2rem .466667rem 0}.Postpost>span[data-v-5d3c8778]{display:block;width:100%;height:.22rem;font-size:.16rem;line-height:.22rem;text-align:left;padding-left:.106667rem;color:rgba(86,119,252,.87)}.Postpost input[data-v-5d3c8778]{font-size:.213333rem;line-height:.3rem;color:rgba(0,0,0,.87);width:100%;padding:.106667rem;margin-bottom:.226667rem;box-sizing:border-box;border:none;outline:none;border-bottom:.006667rem solid rgba(86,119,252,.54)}.Postpost input[data-v-5d3c8778]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.Postpost input[data-v-5d3c8778]:focus{border-bottom:.026667rem solid rgba(86,119,252,.87)}.Postpost textarea[data-v-5d3c8778]{box-sizing:border-box;background:#fafafa;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24);border-radius:.026667rem;width:100%;height:60vh;resize:none;margin-top:.12rem;margin-bottom:.16rem;padding:.186667rem .106667rem 0;font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.87);letter-spacing:.006667rem;outline:none}.Postpost textarea[data-v-5d3c8778]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.Postpost>div[data-v-5d3c8778]{width:100%;text-align:left;box-sizing:border-box;font-size:.186667rem}.Postpost i[data-v-5d3c8778]{color:#5677fc;display:block;margin-left:.106667rem;text-align:left}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/Postpost.vue\"],\"names\":[],\"mappings\":\"AAEA,2BACE,0BAA0C,CAC3C,AAED,gCACE,cAAe,AACf,WAAY,AACZ,cAAgB,AAChB,iBAAmB,AACnB,mBAAqB,AACrB,gBAAiB,AACjB,wBAA0B,AAC1B,0BAAgC,CACjC,AAED,iCACE,qBAAuB,AACvB,kBAAoB,AACpB,sBAA2B,AAC3B,WAAY,AACZ,mBAAiC,AACjC,yBAA2B,AAC3B,sBAAuB,AACvB,YAAa,AACb,aAAc,AACd,mDAA0D,CAC3D,AAED,4DACE,qBAA2B,CAC5B,AAED,uCACE,mDAA0D,CAC3D,AAED,oCACE,sBAAuB,AACvB,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,WAAY,AACZ,YAAa,AACb,YAAa,AACb,kBAAoB,AACpB,qBAAuB,AACvB,gCAA+C,AAC/C,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,0BAA4B,AAC5B,YAAc,CACf,AAED,+DACE,qBAA2B,CAC5B,AAED,+BACE,WAAY,AACZ,gBAAiB,AACjB,sBAAuB,AACvB,oBAAuB,CACxB,AAED,6BACE,cAAe,AACf,cAAe,AACf,uBAAyB,AACzB,eAAiB,CAClB\",\"file\":\"Postpost.vue\",\"sourcesContent\":[\"@import url(~simplemde/dist/simplemde.min.css);\\n\\n.Postpost[data-v-5d3c8778] {\\n  padding: 0.2rem 0.466667rem 0 0.466667rem;\\n}\\n\\n.Postpost > span[data-v-5d3c8778] {\\n  display: block;\\n  width: 100%;\\n  height: 0.22rem;\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  text-align: left;\\n  padding-left: 0.106667rem;\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.Postpost input[data-v-5d3c8778] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  width: 100%;\\n  padding: 0.106667rem 0.106667rem;\\n  margin-bottom: 0.226667rem;\\n  box-sizing: border-box;\\n  border: none;\\n  outline: none;\\n  border-bottom: 0.006667rem solid rgba(86, 119, 252, 0.54);\\n}\\n\\n.Postpost input[data-v-5d3c8778]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.Postpost input[data-v-5d3c8778]:focus {\\n  border-bottom: 0.026667rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.Postpost textarea[data-v-5d3c8778] {\\n  box-sizing: border-box;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  width: 100%;\\n  height: 60vh;\\n  resize: none;\\n  margin-top: 0.12rem;\\n  margin-bottom: 0.16rem;\\n  padding: 0.186667rem 0.106667rem 0 0.106667rem;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  letter-spacing: 0.006667rem;\\n  outline: none;\\n}\\n\\n.Postpost textarea[data-v-5d3c8778]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.Postpost > div[data-v-5d3c8778] {\\n  width: 100%;\\n  text-align: left;\\n  box-sizing: border-box;\\n  font-size: 0.186667rem;\\n}\\n\\n.Postpost i[data-v-5d3c8778] {\\n  color: #5677FC;\\n  display: block;\\n  margin-left: 0.106667rem;\\n  text-align: left;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(256);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(149)(\"83bfb152\", content, true);\n\n/***/ }),\n\n/***/ 314:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"Postpost\"\n  }, [(_vm.PostpostTitle) ? _c('span', [_vm._v(\"帖子标题\")]) : _c('span'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.postTitle),\n      expression: \"postTitle\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"帖子标题\"\n    },\n    domProps: {\n      \"value\": (_vm.postTitle)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.PostpostTitleF(1)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.postTitle = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), (_vm.PostpostThings) ? _c('span', [_vm._v(\"在这里写下你的故事\")]) : _c('span'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.postContent),\n      expression: \"postContent\"\n    }],\n    attrs: {\n      \"placeholder\": \"在这里写下你的故事\"\n    },\n    domProps: {\n      \"value\": (_vm.postContent)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.PostpostTitleF(2)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.postContent = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('i', {\n    staticClass: \"iconfont icon-picture\",\n    on: {\n      \"click\": _vm.addImgs\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.e8e3574985abe6b28fec.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-5d3c8778\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Postpost.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Postpost.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5d3c8778\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Postpost.vue\"),\n  /* scopeId */\n  \"data-v-5d3c8778\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/Postpost.vue\n// module id = 165\n// module chunks = 7","import axios from 'axios'\r\nimport util from '../util'\r\nimport store from '../vuex/store'\r\nimport fetchWuan from './fetchWuan'\r\n\r\n//帖子点赞\r\nexport function toApproval (id) {\r\n  return fetchWuan({\r\n    url: `/posts/${id}/approval`,\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n//帖子收藏\r\nexport function toCollection (params) {\r\n  const data = {\r\n    post_id: params.post_id\r\n  }\r\n  console.log(data)\r\n  return fetchWuan({\r\n    url: `/users/${params.id}/collections`,\r\n    method: 'put',\r\n    data: {\r\n      post_id: params.post_id\r\n    }\r\n  })\r\n}\r\n\r\n//单个星球的帖子展示\r\nexport function showSinglePlanet (params) {\r\n  const data = {\r\n    offset: params.offset,\r\n    limit: params.limit\r\n  }\r\n  return fetchWuan({\r\n    url: `/groups/${params.id}/posts`,\r\n    method: 'get',\r\n    data: data\r\n  })\r\n}\r\n\r\n//帖子详情(不包含评论)\r\nexport function planetContent (postId) {\r\n  return fetchWuan({\r\n    url: `/posts/${postId}`,\r\n    method: 'get',\r\n  })\r\n}\r\n\r\n//帖子详情(评论内容)\r\nexport function planetComment (params) {\r\n  const data = {\r\n    offset: params.offset,\r\n    limit: params.limit\r\n  }\r\n  return fetchWuan({\r\n    url: `/posts/${params.postId}/comments`,\r\n    method: 'get',\r\n    data: data\r\n  })\r\n}\r\n\r\n//置顶\r\nexport function postTop (postId) {\r\n  return fetchWuan({\r\n    url: `/posts/${postId}/tops`,\r\n    method: 'put',\r\n  })\r\n}\r\n\r\n//锁定\r\nexport function postLock (postId) {\r\n  return fetchWuan({\r\n    url: `/posts/${postId}/locks`,\r\n    method: 'put',\r\n  })\r\n}\r\n\r\n//编辑\r\nexport function postEdit (params) {\r\n  const data = {\r\n    title: params.title,\r\n    content: params.content\r\n  }\r\n  return fetchWuan({\r\n    url: `/posts/${params.postId}`,\r\n    method: 'put',\r\n    data: data\r\n  })\r\n}\r\n\r\n//删除\r\nexport function postDelete (postId) {\r\n  return fetchWuan({\r\n    url: `/posts/${postId}`,\r\n    method: 'delete',\r\n  })\r\n}\r\n\r\n//帖子回复\r\nexport function postReply (params) {\r\n  const data = {\r\n    comment: params.Comment,\r\n    floor: params.floor\r\n  }\r\n  return fetchWuan({\r\n    url: `/posts/${params.postId}/comments`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n//删除帖子回复\r\nexport function postReplyDelete (postId, floor) {\r\n  return fetchWuan({\r\n    url: `/posts/${postId}/comments/${floor}`,\r\n    method: 'delete'\r\n  })\r\n}\r\n\r\n//我的收藏帖子展示\r\nexport function postMyCollestion (id,params) {\r\n  return fetchWuan({\r\n    url: `/users/${id}/collections?limit=${params.limit}&offset=${params.offset}`,\r\n    method: 'get',\r\n  })\r\n}\r\n\r\n//搜索帖子\r\nexport function searchPost (params) {\r\n  return fetchWuan({\r\n    url: `/posts`,\r\n    method: 'get',\r\n    params: params\r\n  })\r\n}\r\n\r\n//发表帖子\r\nexport function createPost (planetId, params) {\r\n  const data = params\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}/posts`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n//首页帖子\r\nexport function indexPosts (params) {\r\n  const data = params\r\n  return fetchWuan({\r\n    url: `/posts`,\r\n    method: 'get',\r\n    params: data\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/fetch/posts.js","import axios from 'axios'\r\nimport util from '../util'\r\nimport store from '../vuex/store'\r\nimport fetchWuan from './fetchWuan'\r\n\r\nexport function getQiniuToken () {\r\n  return fetchWuan({\r\n    url: `/qiniu/token`,\r\n    method: 'get'\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/fetch/qiniu.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qiniu4js/qiniu4js.js\n// module id = 208\n// module chunks = 7 8 9","<template>\r\n<div class=\"Postpost\">\n  <span v-if=\"PostpostTitle\">帖子标题</span>\r\n  <span v-else></span>\r\n  <input type=\"text\" placeholder=\"帖子标题\" @click=\"PostpostTitleF(1)\" v-model=\"postTitle\" />\r\n  <span v-if=\"PostpostThings\">在这里写下你的故事</span>\r\n  <span v-else></span>\r\n  <textarea placeholder=\"在这里写下你的故事\" @click=\"PostpostTitleF(2)\" v-model=\"postContent\"></textarea>\r\n  <i @click=\"addImgs\" class=\"iconfont icon-picture\"></i>\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { createPost } from '../fetch/posts'\r\nimport { UploaderBuilder, Uploader } from 'qiniu4js'\r\nimport store from '../vuex/store'\r\nimport { getQiniuToken } from '../fetch/qiniu'\r\n\r\nexport default {\r\n  name: 'postpost',\r\n  data () {\r\n    return {\r\n      PostpostTitle: false,\r\n      PostpostThings: false,\r\n      postTitle: '',\r\n      postContent: '',\r\n      imgUrls: 'http://7xlx4u.com1.z0.glb.clouddn.com/',\r\n      imgArr: []\r\n    }\r\n  },\r\n  methods: {\r\n    PostpostTitleF (n) {\r\n      let self = this;\r\n      self.PostpostTitle = false;\r\n      self.PostpostThings = false;\r\n      switch (n){\n        case 1:\r\n          self.PostpostTitle = true;\n          break;\r\n        case 2:\r\n          self.PostpostThings = true;\r\n          break;\n      }\r\n    },\r\n    pushPost () {\r\n      createPost(this.$router.params.postId, {\r\n        title: this.postTitle,\r\n        content: this.postContent\r\n      }).then(response => {\r\n        console.log(\"发帖成功，帖子ID: \"+response.id)\r\n        this.$Message.success('发帖成功')\r\n      }).catch(error => {\r\n        console.log(\"发帖失败: \"+error)\r\n        this.$Message.error('发帖失败'+error)\r\n      })\r\n    },\r\n    addImgs (event) {\r\n      var self = this;\r\n      // qiniu4js uploader object\r\n  var urlkey='';\r\n  var uploader = new UploaderBuilder()\r\n    .debug(false)//开启debug，默认false\r\n    .domain({http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\"})\r\n    .retry(2)//设置重传次数，默认0，不重传\r\n    .compress(0.5)//默认为1,范围0-1\r\n    .scale([200,0])  //第一个参数是宽度，第二个是高度,[200,0],限定高度，宽度等比缩放.[0,100]限定宽度,高度等比缩放.[200,100]固定长宽\r\n    .size(1024*1024)\r\n    .chunk(true)\r\n    .auto(true)\r\n    .multiple(false)\r\n    .accept(['.gif','.png','.jpg'])//过滤文件，默认无，详细配置见http://www.w3schools.com/tags/\r\n    .tokenShare(true)\r\n    .tokenFunc(function (setToken,task) {\r\n      getQiniuToken().then(res => {\r\n        setToken(res.uploadToken);\r\n      })\r\n    })\r\n    //任务拦截器\r\n    .interceptor({\r\n        //拦截任务,返回true，任务将会从任务队列中剔除，不会被上传\r\n      onIntercept: function (task) {\r\n        return task.file.size > 4 * 1024 * 1024;\r\n      },\r\n      //中断任务，返回true，任务队列将会在这里中断，不会执行上传操作。\r\n      onInterrupt: function (task) {\r\n        if (this.onIntercept(task)) {\r\n          self.$Message.warning('请上传小于4m的文件')\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }\r\n    }) \r\n    .listener({\r\n      onReady(tasks) {\r\n          //该回调函数在图片处理前执行,也就是说task.file中的图片都是没有处理过的\r\n        //选择上传文件确定后,该生命周期函数会被回调。\r\n        \r\n      },onStart(tasks){\r\n          //所有内部图片任务处理后执行\r\n        //开始上传\r\n        console.log('upload start')\r\n        \r\n      },onTaskGetKey(task){\r\n        \r\n      },onTaskProgress: function (task) {\r\n          //每一个任务的上传进度,通过`task.progress`获取\r\n        console.log(task.progress);\r\n        \r\n      },onTaskSuccess(task){\r\n        //一个任务上传成功后回调\r\n        console.log(task.result.key);//文件的key\r\n        urlkey=task.result.key;\r\n        self.imgsAdd(urlkey)\r\n      },onTaskFail(task) {\r\n        //一个任务在经历重传后依然失败后回调此函数\r\n        \r\n      },onTaskRetry(task) {\r\n        //开始重传\r\n        \r\n      },onFinish(tasks){\r\n          //所有任务结束后回调，注意，结束不等于都成功，该函数会在所有HTTP上传请求响应后回调(包括重传请求)。\r\n              \r\n      }\r\n    }).build();\r\n      uploader.chooseFile();\r\n      event.stopPropagation();\r\n    },\r\n    imgsAdd (urlkey) {\r\n      var self = this\r\n      if (urlkey !== '') {\r\n          urlkey = \"http://7xlx4u.com1.z0.glb.clouddn.com/\" + urlkey;\r\n          if (urlkey !== 'http://7xlx4u.com1.z0.glb.clouddn.com/') {\r\n            if (urlkey !== this.imgUrls) {\r\n              self.postContent = self.postContent + \"[图片]\"\r\n              console.log(self.postContent)\r\n              self.imgArr.push(urlkey)\r\n              self.imgUrls = urlkey\r\n            }\r\n          }\r\n          urlkey = \"\"\r\n        }\r\n    }\r\n  },\r\n  watch: {\r\n    postContent: function () {\r\n      var contents = this.postContent\r\n      var ind = contents.indexOf('[图片]')\r\n      var i = 0\r\n      while (ind > -1){\r\n      \tcontents = contents.replace(/\\[图片\\]/, \"<img src='\" + this.imgArr[i] + \"' />\")\r\n      \ti++\r\n      \tind = contents.indexOf('[图片]')\n      }\r\n      store.dispatch('setPostContent', {\r\n        title: this.postTitle,\r\n        content: contents\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.$route.query.edit == true) {\r\n      this.postTitle = store.state.postEditContent.title\r\n      this.postContent = store.state.postEditContent.content\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~simplemde/dist/simplemde.min.css';\r\n.Postpost{\r\n  padding: 15px 35px 0 35px;\r\n  > span{\r\n    display: block;\r\n    width: 100%;\r\n    height: 16.5px;\r\n    font-size: 12px;\r\n    line-height: 16.5px;\r\n    text-align: left;\r\n    padding-left: 8px;\r\n    color: rgba(86,119,252,0.87);\r\n  }\r\n  input{\r\n    font-size: 16px;\r\n    line-height: 22.5px;\r\n    color: rgba(0,0,0,0.87);\r\n    width: 100%;\r\n    padding: 8px 8px;\r\n    margin-bottom: 17px;\r\n    box-sizing: border-box;\r\n    border: none;\r\n    outline: none;\r\n    border-bottom: 0.5px solid rgba(86,119,252,0.54);\r\n    &::-webkit-input-placeholder{\r\n      color: rgba(0,0,0,0.38);\r\n    }\r\n    &:focus{\r\n      border-bottom: 2px solid rgba(86,119,252,0.87);\r\n    }\r\n  }\r\n  textarea{\r\n    box-sizing: border-box;\r\n    background: #FAFAFA;\r\n    box-shadow: 0 0 1px 0 rgba(0,0,0,0.12), 0 1px 1px 0 rgba(0,0,0,0.24);\r\n    border-radius: 2px;\r\n    width: 100%;\r\n    height: 60vh;\r\n    resize: none;\r\n    margin-top: 9px;\r\n    margin-bottom: 12px;\r\n    padding: 14px 8px 0 8px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: rgba(0,0,0,0.87);\r\n    letter-spacing: 0.5px;\r\n    outline: none;\r\n    &::-webkit-input-placeholder{\r\n      color: rgba(0,0,0,0.38);\r\n    }\r\n  }\r\n  > div{\r\n    width: 100%;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    font-size: 14px;\r\n  }\r\n  i{\r\n    color: #5677FC;\r\n    display: block;\r\n    margin-left: 8px;\r\n    text-align: left;\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// Postpost.vue?f158d952","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".CodeMirror{color:#000}.CodeMirror-lines{padding:4px 0}.CodeMirror pre{padding:0 4px}.CodeMirror-gutter-filler,.CodeMirror-scrollbar-filler{background-color:#fff}.CodeMirror-gutters{border-right:1px solid #ddd;background-color:#f7f7f7;white-space:nowrap}.CodeMirror-linenumber{padding:0 3px 0 5px;min-width:20px;text-align:right;color:#999;white-space:nowrap}.CodeMirror-guttermarker{color:#000}.CodeMirror-guttermarker-subtle{color:#999}.CodeMirror-cursor{border-left:1px solid #000;border-right:none;width:0}.CodeMirror div.CodeMirror-secondarycursor{border-left:1px solid silver}.cm-fat-cursor .CodeMirror-cursor{width:auto;border:0!important;background:#7e7}.cm-fat-cursor div.CodeMirror-cursors{z-index:1}.cm-animate-fat-cursor{width:auto;border:0;-webkit-animation:blink 1.06s steps(1) infinite;-moz-animation:blink 1.06s steps(1) infinite;animation:blink 1.06s steps(1) infinite;background-color:#7e7}@-moz-keyframes blink{50%{background-color:transparent}}@-webkit-keyframes blink{50%{background-color:transparent}}@keyframes blink{50%{background-color:transparent}}.cm-tab{display:inline-block;text-decoration:inherit}.CodeMirror-ruler{border-left:1px solid #ccc;position:absolute}.cm-s-default .cm-header{color:#00f}.cm-s-default .cm-quote{color:#090}.cm-negative{color:#d44}.cm-positive{color:#292}.cm-header,.cm-strong{font-weight:700}.cm-em{font-style:italic}.cm-link{text-decoration:underline}.cm-strikethrough{text-decoration:line-through}.cm-s-default .cm-keyword{color:#708}.cm-s-default .cm-atom{color:#219}.cm-s-default .cm-number{color:#164}.cm-s-default .cm-def{color:#00f}.cm-s-default .cm-variable-2{color:#05a}.cm-s-default .cm-variable-3{color:#085}.cm-s-default .cm-comment{color:#a50}.cm-s-default .cm-string{color:#a11}.cm-s-default .cm-string-2{color:#f50}.cm-s-default .cm-meta,.cm-s-default .cm-qualifier{color:#555}.cm-s-default .cm-builtin{color:#30a}.cm-s-default .cm-bracket{color:#997}.cm-s-default .cm-tag{color:#170}.cm-s-default .cm-attribute{color:#00c}.cm-s-default .cm-hr{color:#999}.cm-s-default .cm-link{color:#00c}.cm-invalidchar,.cm-s-default .cm-error{color:red}.CodeMirror-composing{border-bottom:2px solid}div.CodeMirror span.CodeMirror-matchingbracket{color:#0f0}div.CodeMirror span.CodeMirror-nonmatchingbracket{color:#f22}.CodeMirror-matchingtag{background:rgba(255,150,0,.3)}.CodeMirror-activeline-background{background:#e8f2ff}.CodeMirror{position:relative;overflow:hidden;background:#fff}.CodeMirror-scroll{overflow:scroll!important;margin-bottom:-30px;margin-right:-30px;padding-bottom:30px;height:100%;outline:0;position:relative}.CodeMirror-sizer{position:relative;border-right:30px solid transparent}.CodeMirror-gutter-filler,.CodeMirror-hscrollbar,.CodeMirror-scrollbar-filler,.CodeMirror-vscrollbar{position:absolute;z-index:6;display:none}.CodeMirror-vscrollbar{right:0;top:0;overflow-x:hidden;overflow-y:scroll}.CodeMirror-hscrollbar{bottom:0;left:0;overflow-y:hidden;overflow-x:scroll}.CodeMirror-scrollbar-filler{right:0;bottom:0}.CodeMirror-gutter-filler{left:0;bottom:0}.CodeMirror-gutters{position:absolute;left:0;top:0;min-height:100%;z-index:3}.CodeMirror-gutter{white-space:normal;height:100%;display:inline-block;vertical-align:top;margin-bottom:-30px}.CodeMirror-gutter-wrapper{position:absolute;z-index:4;background:0 0!important;border:none!important;-webkit-user-select:none;-moz-user-select:none;user-select:none}.CodeMirror-gutter-background{position:absolute;top:0;bottom:0;z-index:4}.CodeMirror-gutter-elt{position:absolute;cursor:default;z-index:4}.CodeMirror-lines{cursor:text;min-height:1px}.CodeMirror pre{-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;border-width:0;background:0 0;font-family:inherit;font-size:inherit;margin:0;white-space:pre;word-wrap:normal;line-height:inherit;color:inherit;z-index:2;position:relative;overflow:visible;-webkit-tap-highlight-color:transparent;-webkit-font-variant-ligatures:none;font-variant-ligatures:none}.CodeMirror-wrap pre{word-wrap:break-word;white-space:pre-wrap;word-break:normal}.CodeMirror-linebackground{position:absolute;left:0;right:0;top:0;bottom:0;z-index:0}.CodeMirror-linewidget{position:relative;z-index:2;overflow:auto}.CodeMirror-code{outline:0}.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber,.CodeMirror-scroll,.CodeMirror-sizer{-moz-box-sizing:content-box;box-sizing:content-box}.CodeMirror-measure{position:absolute;width:100%;height:0;overflow:hidden;visibility:hidden}.CodeMirror-cursor{position:absolute}.CodeMirror-measure pre{position:static}div.CodeMirror-cursors{visibility:hidden;position:relative;z-index:3}.CodeMirror-focused div.CodeMirror-cursors,div.CodeMirror-dragcursors{visibility:visible}.CodeMirror-selected{background:#d9d9d9}.CodeMirror-focused .CodeMirror-selected,.CodeMirror-line::selection,.CodeMirror-line>span::selection,.CodeMirror-line>span>span::selection{background:#d7d4f0}.CodeMirror-crosshair{cursor:crosshair}.CodeMirror-line::-moz-selection,.CodeMirror-line>span::-moz-selection,.CodeMirror-line>span>span::-moz-selection{background:#d7d4f0}.cm-searching{background:#ffa;background:rgba(255,255,0,.4)}.cm-force-border{padding-right:.1px}@media print{.CodeMirror div.CodeMirror-cursors{visibility:hidden}}.cm-tab-wrap-hack:after{content:\\\"\\\"}span.CodeMirror-selectedtext{background:0 0}.CodeMirror{height:auto;border:1px solid #ddd;border-bottom-left-radius:4px;border-bottom-right-radius:4px;padding:10px;font:inherit;z-index:1}.CodeMirror,.CodeMirror-scroll{min-height:300px}.CodeMirror-fullscreen{background:#fff;position:fixed!important;top:50px;left:0;right:0;bottom:0;height:auto;z-index:9}.CodeMirror-sided{width:50%!important}.editor-toolbar{position:relative;opacity:.6;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;padding:0 10px;border-top:1px solid #bbb;border-left:1px solid #bbb;border-right:1px solid #bbb;border-top-left-radius:4px;border-top-right-radius:4px}.editor-toolbar:after,.editor-toolbar:before{display:block;content:\\\" \\\";height:1px}.editor-toolbar:before{margin-bottom:8px}.editor-toolbar:after{margin-top:8px}.editor-toolbar:hover,.editor-wrapper input.title:focus,.editor-wrapper input.title:hover{opacity:.8}.editor-toolbar.fullscreen{width:100%;height:50px;overflow-x:auto;overflow-y:hidden;white-space:nowrap;padding-top:10px;padding-bottom:10px;box-sizing:border-box;background:#fff;border:0;position:fixed;top:0;left:0;opacity:1;z-index:9}.editor-toolbar.fullscreen:before{width:20px;height:50px;background:-moz-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,#fff),color-stop(100%,hsla(0,0%,100%,0)));background:-webkit-linear-gradient(left,#fff,hsla(0,0%,100%,0));background:-o-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:-ms-linear-gradient(left,#fff 0,hsla(0,0%,100%,0) 100%);background:linear-gradient(90deg,#fff 0,hsla(0,0%,100%,0));position:fixed;top:0;left:0;margin:0;padding:0}.editor-toolbar.fullscreen:after{width:20px;height:50px;background:-moz-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,hsla(0,0%,100%,0)),color-stop(100%,#fff));background:-webkit-linear-gradient(left,hsla(0,0%,100%,0),#fff);background:-o-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:-ms-linear-gradient(left,hsla(0,0%,100%,0) 0,#fff 100%);background:linear-gradient(90deg,hsla(0,0%,100%,0) 0,#fff);position:fixed;top:0;right:0;margin:0;padding:0}.editor-toolbar a{display:inline-block;text-align:center;text-decoration:none!important;color:#2c3e50!important;width:30px;height:30px;margin:0;border:1px solid transparent;border-radius:3px;cursor:pointer}.editor-toolbar a.active,.editor-toolbar a:hover{background:#fcfcfc;border-color:#95a5a6}.editor-toolbar a:before{line-height:30px}.editor-toolbar i.separator{display:inline-block;width:0;border-left:1px solid #d9d9d9;border-right:1px solid #fff;color:transparent;text-indent:-10px;margin:0 6px}.editor-toolbar a.fa-header-x:after{font-family:Arial,Helvetica Neue,Helvetica,sans-serif;font-size:65%;vertical-align:text-bottom;position:relative;top:2px}.editor-toolbar a.fa-header-1:after{content:\\\"1\\\"}.editor-toolbar a.fa-header-2:after{content:\\\"2\\\"}.editor-toolbar a.fa-header-3:after{content:\\\"3\\\"}.editor-toolbar a.fa-header-bigger:after{content:\\\"\\\\25B2\\\"}.editor-toolbar a.fa-header-smaller:after{content:\\\"\\\\25BC\\\"}.editor-toolbar.disabled-for-preview a:not(.no-disable){pointer-events:none;background:#fff;border-color:transparent;text-shadow:inherit}@media only screen and (max-width:700px){.editor-toolbar a.no-mobile{display:none}}.editor-statusbar{padding:8px 10px;font-size:12px;color:#959694;text-align:right}.editor-statusbar span{display:inline-block;min-width:4em;margin-left:1em}.editor-preview,.editor-preview-side{padding:10px;background:#fafafa;overflow:auto;display:none;box-sizing:border-box}.editor-statusbar .lines:before{content:\\\"lines: \\\"}.editor-statusbar .words:before{content:\\\"words: \\\"}.editor-statusbar .characters:before{content:\\\"characters: \\\"}.editor-preview{position:absolute;width:100%;height:100%;top:0;left:0;z-index:7}.editor-preview-side{position:fixed;bottom:0;width:50%;top:50px;right:0;z-index:9;border:1px solid #ddd}.editor-preview-active,.editor-preview-active-side{display:block}.editor-preview-side>p,.editor-preview>p{margin-top:0}.editor-preview-side pre,.editor-preview pre{background:#eee;margin-bottom:10px}.editor-preview-side table td,.editor-preview-side table th,.editor-preview table td,.editor-preview table th{border:1px solid #ddd;padding:5px}.CodeMirror .CodeMirror-code .cm-tag{color:#63a35c}.CodeMirror .CodeMirror-code .cm-attribute{color:#795da3}.CodeMirror .CodeMirror-code .cm-string{color:#183691}.CodeMirror .CodeMirror-selected{background:#d9d9d9}.CodeMirror .CodeMirror-code .cm-header-1{font-size:200%;line-height:200%}.CodeMirror .CodeMirror-code .cm-header-2{font-size:160%;line-height:160%}.CodeMirror .CodeMirror-code .cm-header-3{font-size:125%;line-height:125%}.CodeMirror .CodeMirror-code .cm-header-4{font-size:110%;line-height:110%}.CodeMirror .CodeMirror-code .cm-comment{background:rgba(0,0,0,.05);border-radius:2px}.CodeMirror .CodeMirror-code .cm-link{color:#7f8c8d}.CodeMirror .CodeMirror-code .cm-url{color:#aab2b3}.CodeMirror .CodeMirror-code .cm-strikethrough{text-decoration:line-through}.CodeMirror .CodeMirror-placeholder{opacity:.5}.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word){background:rgba(255,0,0,.15)}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/node_modules/simplemde/dist/simplemde.min.css\"],\"names\":[],\"mappings\":\"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\",\"file\":\"simplemde.min.css\",\"sourcesContent\":[\"/**\\n * simplemde v1.11.2\\n * Copyright Next Step Webs, Inc.\\n * @link https://github.com/NextStepWebs/simplemde-markdown-editor\\n * @license MIT\\n */\\n.CodeMirror{color:#000}.CodeMirror-lines{padding:4px 0}.CodeMirror pre{padding:0 4px}.CodeMirror-gutter-filler,.CodeMirror-scrollbar-filler{background-color:#fff}.CodeMirror-gutters{border-right:1px solid #ddd;background-color:#f7f7f7;white-space:nowrap}.CodeMirror-linenumber{padding:0 3px 0 5px;min-width:20px;text-align:right;color:#999;white-space:nowrap}.CodeMirror-guttermarker{color:#000}.CodeMirror-guttermarker-subtle{color:#999}.CodeMirror-cursor{border-left:1px solid #000;border-right:none;width:0}.CodeMirror div.CodeMirror-secondarycursor{border-left:1px solid silver}.cm-fat-cursor .CodeMirror-cursor{width:auto;border:0!important;background:#7e7}.cm-fat-cursor div.CodeMirror-cursors{z-index:1}.cm-animate-fat-cursor{width:auto;border:0;-webkit-animation:blink 1.06s steps(1) infinite;-moz-animation:blink 1.06s steps(1) infinite;animation:blink 1.06s steps(1) infinite;background-color:#7e7}@-moz-keyframes blink{50%{background-color:transparent}}@-webkit-keyframes blink{50%{background-color:transparent}}@keyframes blink{50%{background-color:transparent}}.cm-tab{display:inline-block;text-decoration:inherit}.CodeMirror-ruler{border-left:1px solid #ccc;position:absolute}.cm-s-default .cm-header{color:#00f}.cm-s-default .cm-quote{color:#090}.cm-negative{color:#d44}.cm-positive{color:#292}.cm-header,.cm-strong{font-weight:700}.cm-em{font-style:italic}.cm-link{text-decoration:underline}.cm-strikethrough{text-decoration:line-through}.cm-s-default .cm-keyword{color:#708}.cm-s-default .cm-atom{color:#219}.cm-s-default .cm-number{color:#164}.cm-s-default .cm-def{color:#00f}.cm-s-default .cm-variable-2{color:#05a}.cm-s-default .cm-variable-3{color:#085}.cm-s-default .cm-comment{color:#a50}.cm-s-default .cm-string{color:#a11}.cm-s-default .cm-string-2{color:#f50}.cm-s-default .cm-meta,.cm-s-default .cm-qualifier{color:#555}.cm-s-default .cm-builtin{color:#30a}.cm-s-default .cm-bracket{color:#997}.cm-s-default .cm-tag{color:#170}.cm-s-default .cm-attribute{color:#00c}.cm-s-default .cm-hr{color:#999}.cm-s-default .cm-link{color:#00c}.cm-invalidchar,.cm-s-default .cm-error{color:red}.CodeMirror-composing{border-bottom:2px solid}div.CodeMirror span.CodeMirror-matchingbracket{color:#0f0}div.CodeMirror span.CodeMirror-nonmatchingbracket{color:#f22}.CodeMirror-matchingtag{background:rgba(255,150,0,.3)}.CodeMirror-activeline-background{background:#e8f2ff}.CodeMirror{position:relative;overflow:hidden;background:#fff}.CodeMirror-scroll{overflow:scroll!important;margin-bottom:-30px;margin-right:-30px;padding-bottom:30px;height:100%;outline:0;position:relative}.CodeMirror-sizer{position:relative;border-right:30px solid transparent}.CodeMirror-gutter-filler,.CodeMirror-hscrollbar,.CodeMirror-scrollbar-filler,.CodeMirror-vscrollbar{position:absolute;z-index:6;display:none}.CodeMirror-vscrollbar{right:0;top:0;overflow-x:hidden;overflow-y:scroll}.CodeMirror-hscrollbar{bottom:0;left:0;overflow-y:hidden;overflow-x:scroll}.CodeMirror-scrollbar-filler{right:0;bottom:0}.CodeMirror-gutter-filler{left:0;bottom:0}.CodeMirror-gutters{position:absolute;left:0;top:0;min-height:100%;z-index:3}.CodeMirror-gutter{white-space:normal;height:100%;display:inline-block;vertical-align:top;margin-bottom:-30px}.CodeMirror-gutter-wrapper{position:absolute;z-index:4;background:0 0!important;border:none!important;-webkit-user-select:none;-moz-user-select:none;user-select:none}.CodeMirror-gutter-background{position:absolute;top:0;bottom:0;z-index:4}.CodeMirror-gutter-elt{position:absolute;cursor:default;z-index:4}.CodeMirror-lines{cursor:text;min-height:1px}.CodeMirror pre{-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;border-width:0;background:0 0;font-family:inherit;font-size:inherit;margin:0;white-space:pre;word-wrap:normal;line-height:inherit;color:inherit;z-index:2;position:relative;overflow:visible;-webkit-tap-highlight-color:transparent;-webkit-font-variant-ligatures:none;font-variant-ligatures:none}.CodeMirror-wrap pre{word-wrap:break-word;white-space:pre-wrap;word-break:normal}.CodeMirror-linebackground{position:absolute;left:0;right:0;top:0;bottom:0;z-index:0}.CodeMirror-linewidget{position:relative;z-index:2;overflow:auto}.CodeMirror-code{outline:0}.CodeMirror-gutter,.CodeMirror-gutters,.CodeMirror-linenumber,.CodeMirror-scroll,.CodeMirror-sizer{-moz-box-sizing:content-box;box-sizing:content-box}.CodeMirror-measure{position:absolute;width:100%;height:0;overflow:hidden;visibility:hidden}.CodeMirror-cursor{position:absolute}.CodeMirror-measure pre{position:static}div.CodeMirror-cursors{visibility:hidden;position:relative;z-index:3}.CodeMirror-focused div.CodeMirror-cursors,div.CodeMirror-dragcursors{visibility:visible}.CodeMirror-selected{background:#d9d9d9}.CodeMirror-focused .CodeMirror-selected,.CodeMirror-line::selection,.CodeMirror-line>span::selection,.CodeMirror-line>span>span::selection{background:#d7d4f0}.CodeMirror-crosshair{cursor:crosshair}.CodeMirror-line::-moz-selection,.CodeMirror-line>span::-moz-selection,.CodeMirror-line>span>span::-moz-selection{background:#d7d4f0}.cm-searching{background:#ffa;background:rgba(255,255,0,.4)}.cm-force-border{padding-right:.1px}@media print{.CodeMirror div.CodeMirror-cursors{visibility:hidden}}.cm-tab-wrap-hack:after{content:''}span.CodeMirror-selectedtext{background:0 0}.CodeMirror{height:auto;min-height:300px;border:1px solid #ddd;border-bottom-left-radius:4px;border-bottom-right-radius:4px;padding:10px;font:inherit;z-index:1}.CodeMirror-scroll{min-height:300px}.CodeMirror-fullscreen{background:#fff;position:fixed!important;top:50px;left:0;right:0;bottom:0;height:auto;z-index:9}.CodeMirror-sided{width:50%!important}.editor-toolbar{position:relative;opacity:.6;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;padding:0 10px;border-top:1px solid #bbb;border-left:1px solid #bbb;border-right:1px solid #bbb;border-top-left-radius:4px;border-top-right-radius:4px}.editor-toolbar:after,.editor-toolbar:before{display:block;content:' ';height:1px}.editor-toolbar:before{margin-bottom:8px}.editor-toolbar:after{margin-top:8px}.editor-toolbar:hover,.editor-wrapper input.title:focus,.editor-wrapper input.title:hover{opacity:.8}.editor-toolbar.fullscreen{width:100%;height:50px;overflow-x:auto;overflow-y:hidden;white-space:nowrap;padding-top:10px;padding-bottom:10px;box-sizing:border-box;background:#fff;border:0;position:fixed;top:0;left:0;opacity:1;z-index:9}.editor-toolbar.fullscreen::before{width:20px;height:50px;background:-moz-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(255,255,255,1)),color-stop(100%,rgba(255,255,255,0)));background:-webkit-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-o-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:-ms-linear-gradient(left,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);background:linear-gradient(to right,rgba(255,255,255,1) 0,rgba(255,255,255,0) 100%);position:fixed;top:0;left:0;margin:0;padding:0}.editor-toolbar.fullscreen::after{width:20px;height:50px;background:-moz-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(255,255,255,0)),color-stop(100%,rgba(255,255,255,1)));background:-webkit-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-o-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:-ms-linear-gradient(left,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);background:linear-gradient(to right,rgba(255,255,255,0) 0,rgba(255,255,255,1) 100%);position:fixed;top:0;right:0;margin:0;padding:0}.editor-toolbar a{display:inline-block;text-align:center;text-decoration:none!important;color:#2c3e50!important;width:30px;height:30px;margin:0;border:1px solid transparent;border-radius:3px;cursor:pointer}.editor-toolbar a.active,.editor-toolbar a:hover{background:#fcfcfc;border-color:#95a5a6}.editor-toolbar a:before{line-height:30px}.editor-toolbar i.separator{display:inline-block;width:0;border-left:1px solid #d9d9d9;border-right:1px solid #fff;color:transparent;text-indent:-10px;margin:0 6px}.editor-toolbar a.fa-header-x:after{font-family:Arial,\\\"Helvetica Neue\\\",Helvetica,sans-serif;font-size:65%;vertical-align:text-bottom;position:relative;top:2px}.editor-toolbar a.fa-header-1:after{content:\\\"1\\\"}.editor-toolbar a.fa-header-2:after{content:\\\"2\\\"}.editor-toolbar a.fa-header-3:after{content:\\\"3\\\"}.editor-toolbar a.fa-header-bigger:after{content:\\\"▲\\\"}.editor-toolbar a.fa-header-smaller:after{content:\\\"▼\\\"}.editor-toolbar.disabled-for-preview a:not(.no-disable){pointer-events:none;background:#fff;border-color:transparent;text-shadow:inherit}@media only screen and (max-width:700px){.editor-toolbar a.no-mobile{display:none}}.editor-statusbar{padding:8px 10px;font-size:12px;color:#959694;text-align:right}.editor-statusbar span{display:inline-block;min-width:4em;margin-left:1em}.editor-preview,.editor-preview-side{padding:10px;background:#fafafa;overflow:auto;display:none;box-sizing:border-box}.editor-statusbar .lines:before{content:'lines: '}.editor-statusbar .words:before{content:'words: '}.editor-statusbar .characters:before{content:'characters: '}.editor-preview{position:absolute;width:100%;height:100%;top:0;left:0;z-index:7}.editor-preview-side{position:fixed;bottom:0;width:50%;top:50px;right:0;z-index:9;border:1px solid #ddd}.editor-preview-active,.editor-preview-active-side{display:block}.editor-preview-side>p,.editor-preview>p{margin-top:0}.editor-preview pre,.editor-preview-side pre{background:#eee;margin-bottom:10px}.editor-preview table td,.editor-preview table th,.editor-preview-side table td,.editor-preview-side table th{border:1px solid #ddd;padding:5px}.CodeMirror .CodeMirror-code .cm-tag{color:#63a35c}.CodeMirror .CodeMirror-code .cm-attribute{color:#795da3}.CodeMirror .CodeMirror-code .cm-string{color:#183691}.CodeMirror .CodeMirror-selected{background:#d9d9d9}.CodeMirror .CodeMirror-code .cm-header-1{font-size:200%;line-height:200%}.CodeMirror .CodeMirror-code .cm-header-2{font-size:160%;line-height:160%}.CodeMirror .CodeMirror-code .cm-header-3{font-size:125%;line-height:125%}.CodeMirror .CodeMirror-code .cm-header-4{font-size:110%;line-height:110%}.CodeMirror .CodeMirror-code .cm-comment{background:rgba(0,0,0,.05);border-radius:2px}.CodeMirror .CodeMirror-code .cm-link{color:#7f8c8d}.CodeMirror .CodeMirror-code .cm-url{color:#aab2b3}.CodeMirror .CodeMirror-code .cm-strikethrough{text-decoration:line-through}.CodeMirror .CodeMirror-placeholder{opacity:.5}.CodeMirror .cm-spell-error:not(.cm-url):not(.cm-comment):not(.cm-tag):not(.cm-word){background:rgba(255,0,0,.15)}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/simplemde/dist/simplemde.min.css\n// module id = 238\n// module chunks = 7","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!simplemde/dist/simplemde.min.css\"), \"\");\n\n// module\nexports.push([module.id, \".Postpost[data-v-5d3c8778]{padding:.2rem .466667rem 0}.Postpost>span[data-v-5d3c8778]{display:block;width:100%;height:.22rem;font-size:.16rem;line-height:.22rem;text-align:left;padding-left:.106667rem;color:rgba(86,119,252,.87)}.Postpost input[data-v-5d3c8778]{font-size:.213333rem;line-height:.3rem;color:rgba(0,0,0,.87);width:100%;padding:.106667rem;margin-bottom:.226667rem;box-sizing:border-box;border:none;outline:none;border-bottom:.006667rem solid rgba(86,119,252,.54)}.Postpost input[data-v-5d3c8778]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.Postpost input[data-v-5d3c8778]:focus{border-bottom:.026667rem solid rgba(86,119,252,.87)}.Postpost textarea[data-v-5d3c8778]{box-sizing:border-box;background:#fafafa;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24);border-radius:.026667rem;width:100%;height:60vh;resize:none;margin-top:.12rem;margin-bottom:.16rem;padding:.186667rem .106667rem 0;font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.87);letter-spacing:.006667rem;outline:none}.Postpost textarea[data-v-5d3c8778]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.Postpost>div[data-v-5d3c8778]{width:100%;text-align:left;box-sizing:border-box;font-size:.186667rem}.Postpost i[data-v-5d3c8778]{color:#5677fc;display:block;margin-left:.106667rem;text-align:left}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/Postpost.vue\"],\"names\":[],\"mappings\":\"AAEA,2BACE,0BAA0C,CAC3C,AAED,gCACE,cAAe,AACf,WAAY,AACZ,cAAgB,AAChB,iBAAmB,AACnB,mBAAqB,AACrB,gBAAiB,AACjB,wBAA0B,AAC1B,0BAAgC,CACjC,AAED,iCACE,qBAAuB,AACvB,kBAAoB,AACpB,sBAA2B,AAC3B,WAAY,AACZ,mBAAiC,AACjC,yBAA2B,AAC3B,sBAAuB,AACvB,YAAa,AACb,aAAc,AACd,mDAA0D,CAC3D,AAED,4DACE,qBAA2B,CAC5B,AAED,uCACE,mDAA0D,CAC3D,AAED,oCACE,sBAAuB,AACvB,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,WAAY,AACZ,YAAa,AACb,YAAa,AACb,kBAAoB,AACpB,qBAAuB,AACvB,gCAA+C,AAC/C,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,0BAA4B,AAC5B,YAAc,CACf,AAED,+DACE,qBAA2B,CAC5B,AAED,+BACE,WAAY,AACZ,gBAAiB,AACjB,sBAAuB,AACvB,oBAAuB,CACxB,AAED,6BACE,cAAe,AACf,cAAe,AACf,uBAAyB,AACzB,eAAiB,CAClB\",\"file\":\"Postpost.vue\",\"sourcesContent\":[\"@import url(~simplemde/dist/simplemde.min.css);\\n\\n.Postpost[data-v-5d3c8778] {\\n  padding: 0.2rem 0.466667rem 0 0.466667rem;\\n}\\n\\n.Postpost > span[data-v-5d3c8778] {\\n  display: block;\\n  width: 100%;\\n  height: 0.22rem;\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  text-align: left;\\n  padding-left: 0.106667rem;\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.Postpost input[data-v-5d3c8778] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  width: 100%;\\n  padding: 0.106667rem 0.106667rem;\\n  margin-bottom: 0.226667rem;\\n  box-sizing: border-box;\\n  border: none;\\n  outline: none;\\n  border-bottom: 0.006667rem solid rgba(86, 119, 252, 0.54);\\n}\\n\\n.Postpost input[data-v-5d3c8778]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.Postpost input[data-v-5d3c8778]:focus {\\n  border-bottom: 0.026667rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.Postpost textarea[data-v-5d3c8778] {\\n  box-sizing: border-box;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  width: 100%;\\n  height: 60vh;\\n  resize: none;\\n  margin-top: 0.12rem;\\n  margin-bottom: 0.16rem;\\n  padding: 0.186667rem 0.106667rem 0 0.106667rem;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  letter-spacing: 0.006667rem;\\n  outline: none;\\n}\\n\\n.Postpost textarea[data-v-5d3c8778]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.Postpost > div[data-v-5d3c8778] {\\n  width: 100%;\\n  text-align: left;\\n  box-sizing: border-box;\\n  font-size: 0.186667rem;\\n}\\n\\n.Postpost i[data-v-5d3c8778] {\\n  color: #5677FC;\\n  display: block;\\n  margin-left: 0.106667rem;\\n  text-align: left;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5d3c8778\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/Postpost.vue\n// module id = 256\n// module chunks = 7","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-5d3c8778\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Postpost.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"83bfb152\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5d3c8778\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/Postpost.vue\n// module id = 285\n// module chunks = 7","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"Postpost\"\n  }, [(_vm.PostpostTitle) ? _c('span', [_vm._v(\"帖子标题\")]) : _c('span'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.postTitle),\n      expression: \"postTitle\"\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"帖子标题\"\n    },\n    domProps: {\n      \"value\": (_vm.postTitle)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.PostpostTitleF(1)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.postTitle = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), (_vm.PostpostThings) ? _c('span', [_vm._v(\"在这里写下你的故事\")]) : _c('span'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.postContent),\n      expression: \"postContent\"\n    }],\n    attrs: {\n      \"placeholder\": \"在这里写下你的故事\"\n    },\n    domProps: {\n      \"value\": (_vm.postContent)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.PostpostTitleF(2)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.postContent = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('i', {\n    staticClass: \"iconfont icon-picture\",\n    on: {\n      \"click\": _vm.addImgs\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5d3c8778\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/Postpost.vue\n// module id = 314\n// module chunks = 7"],"sourceRoot":""}