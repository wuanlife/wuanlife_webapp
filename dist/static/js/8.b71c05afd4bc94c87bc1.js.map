{"version":3,"sources":["webpack:///static/js/8.b71c05afd4bc94c87bc1.js","webpack:///./src/views/creatPlanet.vue","webpack:///./src/fetch/groups.js?bed8*","webpack:///./src/fetch/qiniu.js?d234","webpack:///./~/qiniu4js/qiniu4js.js?5a22","webpack:///creatPlanet.vue","webpack:///./src/views/creatPlanet.vue?4343","webpack:///./src/views/creatPlanet.vue?e018","webpack:///./src/views/creatPlanet.vue?7a2d"],"names":["webpackJsonp","172","module","exports","__webpack_require__","Component","185","__webpack_exports__","groupsList","offset","limit","i","__WEBPACK_IMPORTED_MODULE_3__fetchWuan__","url","method","getSinglePlanet","planetId","joinPlanet","applyJoinPlanet","message","data","text","quitPlanet","searchGroup","params","createGroup","name","planetName","image_url","img_url","introduction","planetIntroduction","private","selected","userJoinPlanet","user_id","id","__WEBPACK_IMPORTED_MODULE_0_axios__","n","207","getQiniuToken","208","root","factory","this","modules","moduleId","installedModules","l","call","m","c","value","d","getter","o","Object","defineProperty","configurable","enumerable","get","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Log","_enable","console","debug","log","error","warn","info","set","default","_interopRequireDefault","obj","_DirectTask","_DirectTask2","_ChunkTask","_UUID","_UUID2","_UploaderBuilder","_UploaderBuilder2","_Log","_Log2","_SimpleUploadListener","_SimpleUploadListener2","_DirectUploadPattern","_DirectUploadPattern2","_ChunkUploadPattern","_ChunkUploadPattern2","Uploader","builder","_this2","FILE_INPUT_EL_ID","_taskQueue","_tasking","_scale","_saveKey","handleFiles","fileInput","files","generateTask","isInterrupt","interceptedTasks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","taskQueue","Symbol","iterator","next","done","task","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","interceptors","interceptor","onIntercept","push","onInterrupt","err","return","w","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_task","index","indexOf","splice","listener","onReady","handleImages","then","auto","start","resolveUUID","re","test","replace","uuid","resolveImageInfo","blob","widthRe","heightRe","Promise","resolve","img","Image","src","URL","createObjectURL","onload","width","toString","height","onSaveKeyResolved","saveKey","_tokenShare","_retry","getRetry","_size","getSize","_chunk","getChunk","_auto","getAuto","_multiple","getMultiple","_accept","getAccept","_button","getButton","_buttonEventName","getButtonEventName","_compress","getCompress","getScale","getSaveKey","_tokenFunc","getTokenFunc","getTokenShare","_listener","assign","getListener","_interceptors","getInterceptors","_domain","getDomain","_fileInputId","Date","getTime","enable","getIsDebug","validateOptions","init","initFileInputEl","exist","document","getElementById","_fileInput","createElement","type","style","display","multiple","accept","acceptValue","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","endsWith","substring","body","appendChild","addEventListener","chooseFile","bind","_token","resetUploader","file","chunk","size","BLOCK_SIZE","ChunkTask","onTaskGetKey","_this3","promises","compress","scale","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","match","canvas","ctx","getContext","_this","imgW","imgH","scaleW","scaleH","drawImage","toBlob","isChunkTask","spliceFile2Block","all","Error","Array","tasking","onStart","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_task2","isDirectTask","upload","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","isFinish","click","_this4","token","_this5","resolveSaveKey","requestToken","reject","encodeURIComponent","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","status","response","uptoken","onabort","responseType","send","_this6","constructor","_Uploader","_Uploader2","_SimpleUploadInterceptor","_SimpleUploadInterceptor2","UploaderBuilder","UPLOAD_DOMAIN","_scheme","_isDebug","_interceptor","Math","min","max","MAX_CHUNK_SIZE","eventName","arguments","_tokenUrl","uploader","requestTaskToken","_debug","domain","scheme","protocol","window","location","http","https","BaseTask","_progress","_isSuccess","_isFinish","_file","_createDate","_startDate","_endDate","_result","_error","_key","SimpleUploadListener","SimpleUploadInterceptor","ChunkUploadPattern","getToken","startDate","uploadBlock","chain","blocks","totalChunkCount","forEach","block","blockIndex","chunks","chunkIndex","uploadChunk","concatChunks","isTaskQueueFinish","onFinish","catch","isSuccess","endDate","onTaskFail","isFirstChunkInBlock","prevChunk","getUploadBlockUrl","getUploadChunkUrl","host","setRequestHeader","onprogress","e","lengthComputable","progress","round","finishedBlocksSize","loaded","onTaskProgress","responseText","result","JSON","parse","processing","_chunkIndex","hasNextChunkInThisBlock","encodedKey","btoa","getMakeFileUrl","ctxListString","onTaskSuccess","retryTask","onTaskRetry","blockSize","fileSize","retry","DirectUploadPattern","uploadFile","formData","FormData","append","total","createFormData","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","Chunk","Block","_BaseTask2","_BaseTask3","_BaseTask","chunkSize","getPrototypeOf","_blocks","_blockSize","_chunkSize","blockCount","ceil","end","slice","array","count","_chunks","_processing","_data","_start","_end","spliceBlock2Chunk","chunkCount","_block","_host","_ctx","DirectTask","apply","UUID","r","random","floor","source","HTMLCanvasElement","callback","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","String","_toString","search","string","stringLength","searchString","searchLength","pos","position","Number","231","__WEBPACK_IMPORTED_MODULE_0__fetch_groups__","__WEBPACK_IMPORTED_MODULE_1_qiniu4js__","__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__","urlkey","tokenShare","tokenFunc","setToken","res","uploadToken","build","creatPlanetForm","creatPlanetNameTitle","planetIntroductionTitle","imgShow","computed","isSelect","methods","creatPlanetNameTitleF","focusStyleF","getElementsByTagName","className","isImgUrl","pushImg","createPlanet","$Message","success","$router","path","query","event","259","version","sources","names","mappings","sourcesContent","sourceRoot","288","content","locals","317","render","_vm","_h","$createElement","_c","_self","staticClass","_v","directives","rawName","expression","modifiers","lazy","attrs","placeholder","domProps","on","$event","change","model","$$v","input","composing","$$selectedVal","filter","options","map","_value","disabled","staticRenderFns"],"mappings":"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","file":"static/js/8.b71c05afd4bc94c87bc1.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 172:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(288)\n\nvar Component = __webpack_require__(62)(\n  /* script */\n  __webpack_require__(231),\n  /* template */\n  __webpack_require__(317),\n  /* scopeId */\n  \"data-v-70c7b466\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = groupsList;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getSinglePlanet;\n/* unused harmony export toCollection */\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = joinPlanet;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = applyJoinPlanet;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = quitPlanet;\n/* unused harmony export isJoinPlanet */\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = searchGroup;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createGroup;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = userJoinPlanet;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetchWuan__ = __webpack_require__(64);\n\n\n\n\n\nfunction groupsList(offset, limit) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups?offset=' + offset + '&limit=' + limit,\n    method: 'get'\n  });\n}\n\nfunction getSinglePlanet(planetId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId,\n    method: 'get'\n  });\n}\n\nfunction toCollection(params) {\n  var data = {\n    post_id: params.post_id\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/users/' + params.id + '/collections',\n    method: 'put',\n    data: data\n  });\n}\n\nfunction joinPlanet(planetId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId + '/members',\n    method: 'post'\n  });\n}\n\nfunction applyJoinPlanet(planetId, message) {\n  var data = {\n    text: message\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId + '/private',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction quitPlanet(planetId) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId + '/members',\n    method: 'delete'\n  });\n}\n\nfunction isJoinPlanet(planetId, mid) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups/' + planetId + '/members/' + mid,\n    method: 'get'\n  });\n}\n\nfunction searchGroup(params) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups',\n    method: 'get',\n    params: params\n  });\n}\n\nfunction createGroup(params) {\n  var data = {\n    name: params.planetName,\n    image_url: params.img_url,\n    introduction: params.planetIntroduction,\n    private: params.selected\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups',\n    method: 'post',\n    data: data\n  });\n}\n\nfunction userJoinPlanet(params) {\n  var data = {\n    offset: params.offset,\n    limit: params.limit,\n    user_id: params.id\n  };\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/groups',\n    method: 'get',\n    params: data\n  });\n}\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getQiniuToken;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetchWuan__ = __webpack_require__(64);\n\n\n\n\n\nfunction getQiniuToken() {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/qiniu/token',\n    method: 'get'\n  });\n}\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__fetch_groups__ = __webpack_require__(185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_qiniu4js__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_qiniu4js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_qiniu4js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__ = __webpack_require__(207);\n\n\n\n\n\n\n\nvar urlkey = '';\nvar uploader = new __WEBPACK_IMPORTED_MODULE_1_qiniu4js__[\"UploaderBuilder\"]().debug(false).domain({ http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\" }).retry(2).compress(0.5).scale([200, 0]).size(1024 * 1024).chunk(true).auto(true).multiple(false).accept(['.gif', '.png', '.jpg']).tokenShare(true).tokenFunc(function (setToken, task) {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__[\"a\" /* getQiniuToken */])().then(function (res) {\n    setToken(res.uploadToken);\n  });\n}).interceptor({\n  onIntercept: function onIntercept(task) {\n    return task.file.size > 4 * 1024 * 1024;\n  },\n\n  onInterrupt: function onInterrupt(task) {\n    if (this.onIntercept(task)) {\n      console.log('请上传小于4m的文件');\n      return true;\n    } else {\n      return false;\n    }\n  }\n}).listener({\n  onTaskProgress: function onTaskProgress(task) {\n    console.log(task.progress);\n  }, onTaskSuccess: function onTaskSuccess(task) {\n    console.log(task.result.key);\n    urlkey = task.result.key;\n    document.getElementById(\"ImgUrl\").src = \"http://7xlx4u.com1.z0.glb.clouddn.com/\" + urlkey;\n  }\n}).build();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'creatPlanet',\n  data: function data() {\n    return {\n      creatPlanetForm: {\n        selected: '',\n        planetName: '',\n        img_url: 'http://7xlx4u.com1.z0.glb.clouddn.com/' + urlkey,\n        planetIntroduction: ''\n      },\n      creatPlanetNameTitle: false,\n      planetIntroductionTitle: false,\n      imgShow: true\n    };\n  },\n\n  computed: {\n    isSelect: function isSelect() {\n      if (this.creatPlanetForm.selected == '允许任何人加入') {\n        return false;\n      }\n      if (this.creatPlanetForm.selected == '验证水电费') {\n        return true;\n      }\n    }\n  },\n  methods: {\n    creatPlanetNameTitleF: function creatPlanetNameTitleF(n) {\n      var self = this;\n      self.creatPlanetNameTitle = false;\n      self.planetIntroductionTitle = false;\n      switch (n) {\n        case 1:\n          self.creatPlanetNameTitle = true;\n          break;\n        case 2:\n          self.planetIntroductionTitle = true;\n          break;\n      }\n    },\n    focusStyleF: function focusStyleF() {\n      document.getElementsByTagName(\"label\")[0].className = \"focusStyle\";\n      this.isImgUrl = false;\n      this.pushImg();\n    },\n    createPlanet: function createPlanet() {\n      var _this = this;\n\n      var self = this;\n      this.creatPlanetForm.img_url = 'http://7xlx4u.com1.z0.glb.clouddn.com/' + urlkey;\n      this.creatPlanetForm.selected = this.isSelect;\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__fetch_groups__[\"b\" /* createGroup */])(this.creatPlanetForm).then(function (response) {\n        console.log(\"星球创建成功： id = \" + response.id);\n        _this.$Message.success('星球创建成功');\n        _this.$router.push({ path: '/planet/' + response.id, query: { name: '' + self.creatPlanetForm.planetName } });\n      }).catch(function (error) {\n        console.log(error);\n        _this.$Message.error(error);\n      });\n    },\n    pushImg: function pushImg(event) {\n      var self = this;\n      this.imgShow = false;\n      uploader.chooseFile();\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 259:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(148)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".creatPlanet[data-v-70c7b466]{padding:0 .48rem}.creatPlanet form>span[data-v-70c7b466]{width:100%;height:.22rem;display:block;font-size:.16rem;line-height:.22rem;color:rgba(86,119,252,.87);margin-bottom:.026667rem;padding-left:.106667rem;text-align:left;box-sizing:border-box}.creatPlanet form .creatPlanetName[data-v-70c7b466]{font-size:.213333rem;line-height:.3rem;border:none;box-sizing:border-box;display:block;padding:.106667rem;width:100%;color:rgba(0,0,0,.87);border-bottom:.013333rem solid rgba(86,119,252,.54);outline:none}.creatPlanet form .creatPlanetName[data-v-70c7b466]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.creatPlanet form .creatPlanetName[data-v-70c7b466]:focus{border-bottom:.026667rem solid rgba(86,119,252,.87)}.creatPlanet form label[data-v-70c7b466]{font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.38);display:block;margin-top:.333333rem;text-align:left;padding-left:.106667rem}.creatPlanet form label.focusStyle[data-v-70c7b466]{font-size:.16rem;line-height:.22rem;color:rgba(86,119,252,.87)}.creatPlanet form .val[data-v-70c7b466]{width:100%;position:relative}.creatPlanet form .val>.addImg[data-v-70c7b466],.creatPlanet form .val img[data-v-70c7b466]{width:.933333rem;height:.933333rem;border-radius:100%;display:block;margin:.2rem auto .24rem;background:#fafafa;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24)}.creatPlanet form .val>.addImg[data-v-70c7b466]{position:absolute;top:-.2rem;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.creatPlanet form .val>.addImg i[data-v-70c7b466]{color:#5677fc}.creatPlanet form textarea[data-v-70c7b466]{width:100%;height:20vh;padding:.186667rem .106667rem;box-sizing:border-box;font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.87);background:#fafafa;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24);border-radius:.026667rem;outline:none;resize:none}.creatPlanet form textarea[data-v-70c7b466]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.creatPlanet form .creatPlanetSelect[data-v-70c7b466]{width:100%;box-sizing:border-box;position:relative;margin-top:.4rem;margin-bottom:.426667rem}.creatPlanet form .creatPlanetSelect select[data-v-70c7b466]{width:100%;height:.64rem;box-sizing:border-box;border:none;background:#fafafa;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24);border-radius:.026667rem;outline:none;font-size:.186667rem;line-height:.266667rem;padding-left:.106667rem;color:rgba(0,0,0,.87);-webkit-appearance:none;-moz-appearance:none;appearance:none}.creatPlanet form .creatPlanetSelect>div[data-v-70c7b466]{width:0;height:0;border-left:.186667rem solid rgba(0,0,0,.54);border-radius:.04rem;border-top:.093333rem solid transparent;border-bottom:.093333rem solid transparent;position:absolute;top:50%;right:.346667rem;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.creatPlanet form .creatPlanetSelect>div.creatPlanetSelectAinmate[data-v-70c7b466]{-webkit-animation:selectMove 2s;animation:selectMove 2s;border-top:.186667rem solid rgba(0,0,0,.54);border-left:.093333rem solid transparent;border-right:.093333rem solid transparent;border-bottom:none}@-webkit-keyframes selectMove{0%{border-left:14px solid rgba(0,0,0,.54);border-top:7px solid transparent;border-bottom:7px solid transparent}50%{border:7px solid rgba(0,0,0,.54)}to{border-top:14px solid rgba(0,0,0,.54);border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:none}}@keyframes selectMove{0%{border-left:14px solid rgba(0,0,0,.54);border-top:7px solid transparent;border-bottom:7px solid transparent}50%{border:7px solid rgba(0,0,0,.54)}to{border-top:14px solid rgba(0,0,0,.54);border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:none}}.creatPlanet button[data-v-70c7b466]{background:#5677fc;border-radius:.053333rem;width:100%;font-size:.213333rem;line-height:.3rem;color:hsla(0,0%,100%,.87);height:.586667rem;border:none;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24)}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/creatPlanet.vue\"],\"names\":[],\"mappings\":\"AAAA,8BACE,gBAAmB,CACpB,AAED,wCACE,WAAY,AACZ,cAAgB,AAChB,cAAe,AACf,iBAAmB,AACnB,mBAAqB,AACrB,2BAAgC,AAChC,yBAA2B,AAC3B,wBAA0B,AAC1B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,oDACE,qBAAuB,AACvB,kBAAoB,AACpB,YAAa,AACb,sBAAuB,AACvB,cAAe,AACf,mBAAiC,AACjC,WAAY,AACZ,sBAA2B,AAC3B,oDAA0D,AAC1D,YAAc,CACf,AAED,+EACE,qBAA2B,CAC5B,AAED,0DACE,mDAA0D,CAC3D,AAED,yCACE,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,cAAe,AACf,sBAAwB,AACxB,gBAAiB,AACjB,uBAA0B,CAC3B,AAED,oDACE,iBAAmB,AACnB,mBAAqB,AACrB,0BAAgC,CACjC,AAED,wCACE,WAAY,AACZ,iBAAmB,CACpB,AAED,4FAEE,iBAAmB,AACnB,kBAAoB,AACpB,mBAAoB,AACpB,cAAe,AACf,yBAAiC,AACjC,mBAAoB,AACpB,qFAAmG,CACpG,AAED,gDACE,kBAAmB,AACnB,WAAa,AACb,SAAU,AACV,mCAAoC,AAC5B,2BAA4B,AACpC,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,wBAAyB,AACrB,qBAAsB,AAClB,uBAAwB,AAChC,yBAA0B,AACtB,sBAAuB,AACnB,kBAAoB,CAC7B,AAED,kDACE,aAAe,CAChB,AAED,4CACE,WAAY,AACZ,YAAa,AACb,8BAAiC,AACjC,sBAAuB,AACvB,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,aAAc,AACd,WAAa,CACd,AAED,uEACE,qBAA2B,CAC5B,AAED,sDACE,WAAY,AACZ,sBAAuB,AACvB,kBAAmB,AACnB,iBAAmB,AACnB,wBAA2B,CAC5B,AAED,6DACE,WAAY,AACZ,cAAgB,AAChB,sBAAuB,AACvB,YAAa,AACb,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,aAAc,AACd,qBAAuB,AACvB,uBAAyB,AACzB,wBAA0B,AAC1B,sBAA2B,AAC3B,wBAAyB,AACtB,qBAAsB,AACjB,eAAiB,CAC1B,AAED,0DACE,QAAS,AACT,SAAU,AACV,6CAAmD,AACnD,qBAAuB,AACvB,wCAA0C,AAC1C,2CAA6C,AAC7C,kBAAmB,AACnB,QAAS,AACT,iBAAmB,AACnB,mCAAoC,AAC5B,0BAA4B,CACrC,AAED,mFACE,gCAAiC,AACzB,wBAAyB,AACjC,4CAAkD,AAClD,yCAA2C,AAC3C,0CAA4C,AAC5C,kBAAoB,CACrB,AAED,8BACE,GACE,uCAA4C,AAC5C,iCAAkC,AAClC,mCAAqC,CACtC,AAED,IACE,gCAA2C,CAI5C,AAED,GACE,sCAA2C,AAC3C,kCAAmC,AACnC,mCAAoC,AACpC,kBAAoB,CACrB,CACF,AAED,sBACE,GACE,uCAA4C,AAC5C,iCAAkC,AAClC,mCAAqC,CACtC,AAED,IACE,gCAA2C,CAI5C,AAED,GACE,sCAA2C,AAC3C,kCAAmC,AACnC,mCAAoC,AACpC,kBAAoB,CACrB,CACF,AAED,qCACE,mBAAoB,AACpB,yBAA2B,AAC3B,WAAY,AACZ,qBAAuB,AACvB,kBAAoB,AACpB,0BAAiC,AACjC,kBAAoB,AACpB,YAAa,AACb,qFAAmG,CACpG\",\"file\":\"creatPlanet.vue\",\"sourcesContent\":[\".creatPlanet[data-v-70c7b466] {\\n  padding: 0 0.48rem;\\n}\\n\\n.creatPlanet form > span[data-v-70c7b466] {\\n  width: 100%;\\n  height: 0.22rem;\\n  display: block;\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  color: rgba(86, 119, 252, 0.87);\\n  margin-bottom: 0.026667rem;\\n  padding-left: 0.106667rem;\\n  text-align: left;\\n  box-sizing: border-box;\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  border: none;\\n  box-sizing: border-box;\\n  display: block;\\n  padding: 0.106667rem 0.106667rem;\\n  width: 100%;\\n  color: rgba(0, 0, 0, 0.87);\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.54);\\n  outline: none;\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466]:focus {\\n  border-bottom: 0.026667rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.creatPlanet form label[data-v-70c7b466] {\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.38);\\n  display: block;\\n  margin-top: 0.333333rem;\\n  text-align: left;\\n  padding-left: 0.106667rem;\\n}\\n\\n.creatPlanet form label.focusStyle[data-v-70c7b466] {\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.creatPlanet form .val[data-v-70c7b466] {\\n  width: 100%;\\n  position: relative;\\n}\\n\\n.creatPlanet form .val > .addImg[data-v-70c7b466],\\n.creatPlanet form .val img[data-v-70c7b466] {\\n  width: 0.933333rem;\\n  height: 0.933333rem;\\n  border-radius: 100%;\\n  display: block;\\n  margin: 0.2rem auto 0.24rem auto;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n}\\n\\n.creatPlanet form .val > .addImg[data-v-70c7b466] {\\n  position: absolute;\\n  top: -0.2rem;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n\\n.creatPlanet form .val > .addImg i[data-v-70c7b466] {\\n  color: #5677FC;\\n}\\n\\n.creatPlanet form textarea[data-v-70c7b466] {\\n  width: 100%;\\n  height: 20vh;\\n  padding: 0.186667rem 0.106667rem;\\n  box-sizing: border-box;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.creatPlanet form textarea[data-v-70c7b466]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.creatPlanet form .creatPlanetSelect[data-v-70c7b466] {\\n  width: 100%;\\n  box-sizing: border-box;\\n  position: relative;\\n  margin-top: 0.4rem;\\n  margin-bottom: 0.426667rem;\\n}\\n\\n.creatPlanet form .creatPlanetSelect select[data-v-70c7b466] {\\n  width: 100%;\\n  height: 0.64rem;\\n  box-sizing: border-box;\\n  border: none;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  outline: none;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  padding-left: 0.106667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n}\\n\\n.creatPlanet form .creatPlanetSelect > div[data-v-70c7b466] {\\n  width: 0;\\n  height: 0;\\n  border-left: 0.186667rem solid rgba(0, 0, 0, 0.54);\\n  border-radius: 0.04rem;\\n  border-top: 0.093333rem solid transparent;\\n  border-bottom: 0.093333rem solid transparent;\\n  position: absolute;\\n  top: 50%;\\n  right: 0.346667rem;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n\\n.creatPlanet form .creatPlanetSelect > div.creatPlanetSelectAinmate[data-v-70c7b466] {\\n  -webkit-animation: selectMove 2s;\\n          animation: selectMove 2s;\\n  border-top: 0.186667rem solid rgba(0, 0, 0, 0.54);\\n  border-left: 0.093333rem solid transparent;\\n  border-right: 0.093333rem solid transparent;\\n  border-bottom: none;\\n}\\n\\n@-webkit-keyframes selectMove {\\n  0% {\\n    border-left: 14px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid transparent;\\n    border-bottom: 7px solid transparent;\\n  }\\n\\n  50% {\\n    border-left: 7px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid rgba(0, 0, 0, 0.54);\\n    border-bottom: 7px solid rgba(0, 0, 0, 0.54);\\n    border-right: 7px solid rgba(0, 0, 0, 0.54);\\n  }\\n\\n  100% {\\n    border-top: 14px solid rgba(0, 0, 0, 0.54);\\n    border-left: 7px solid transparent;\\n    border-right: 7px solid transparent;\\n    border-bottom: none;\\n  }\\n}\\n\\n@keyframes selectMove {\\n  0% {\\n    border-left: 14px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid transparent;\\n    border-bottom: 7px solid transparent;\\n  }\\n\\n  50% {\\n    border-left: 7px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid rgba(0, 0, 0, 0.54);\\n    border-bottom: 7px solid rgba(0, 0, 0, 0.54);\\n    border-right: 7px solid rgba(0, 0, 0, 0.54);\\n  }\\n\\n  100% {\\n    border-top: 14px solid rgba(0, 0, 0, 0.54);\\n    border-left: 7px solid transparent;\\n    border-right: 7px solid transparent;\\n    border-bottom: none;\\n  }\\n}\\n\\n.creatPlanet button[data-v-70c7b466] {\\n  background: #5677FC;\\n  border-radius: 0.053333rem;\\n  width: 100%;\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(255, 255, 255, 0.87);\\n  height: 0.586667rem;\\n  border: none;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 288:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(259);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(149)(\"5509ddfc\", content, true);\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"creatPlanet\"\n  }, [_c('form', [(_vm.creatPlanetNameTitle) ? _c('span', [_vm._v(\"星球名称\")]) : _c('span'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (_vm.creatPlanetForm.planetName),\n      expression: \"creatPlanetForm.planetName\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    staticClass: \"creatPlanetName\",\n    attrs: {\n      \"placeholder\": \"星球名称\"\n    },\n    domProps: {\n      \"value\": (_vm.creatPlanetForm.planetName)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.creatPlanetNameTitleF(1)\n      },\n      \"change\": function($event) {\n        _vm.creatPlanetForm.planetName = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"星球头像（选填）\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"val\"\n  }, [_c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.imgShow),\n      expression: \"imgShow\"\n    }],\n    staticClass: \"addImg\",\n    on: {\n      \"click\": function($event) {\n        _vm.focusStyleF()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"iconfont icon-cross\"\n  })]), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"id\": \"ImgUrl\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.focusStyleF()\n      }\n    },\n    model: {\n      value: (_vm.creatPlanetForm.img_url),\n      callback: function($$v) {\n        _vm.creatPlanetForm.img_url = $$v\n      },\n      expression: \"creatPlanetForm.img_url\"\n    }\n  })]), _vm._v(\" \"), (_vm.planetIntroductionTitle) ? _c('span', [_vm._v(\"星球介绍（选填）\")]) : _c('span'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.creatPlanetForm.planetIntroduction),\n      expression: \"creatPlanetForm.planetIntroduction\"\n    }],\n    attrs: {\n      \"placeholder\": \"星球介绍（选填）\"\n    },\n    domProps: {\n      \"value\": (_vm.creatPlanetForm.planetIntroduction)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.creatPlanetNameTitleF(2)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.creatPlanetForm.planetIntroduction = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"creatPlanetSelect\"\n  }, [_c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (_vm.creatPlanetForm.selected),\n      expression: \"creatPlanetForm.selected\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.creatPlanetForm.selected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', {\n    attrs: {\n      \"disabled\": \"\",\n      \"value\": \"\"\n    }\n  }, [_vm._v(\"加入星球的方式\")]), _vm._v(\" \"), _c('option', [_vm._v(\"允许任何人加入\")]), _vm._v(\" \"), _c('option', [_vm._v(\"验证水电费\")])]), _vm._v(\" \"), _c('div')])]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": _vm.createPlanet\n    }\n  }, [_vm._v(\"创建星球\")])])\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.b71c05afd4bc94c87bc1.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-70c7b466\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./creatPlanet.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./creatPlanet.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-70c7b466\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./creatPlanet.vue\"),\n  /* scopeId */\n  \"data-v-70c7b466\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/creatPlanet.vue\n// module id = 172\n// module chunks = 8","import axios from 'axios'\r\nimport util from '../util'\r\nimport store from '../vuex/store'\r\nimport fetchWuan from './fetchWuan'\r\n\r\n//星球列表\r\nexport function groupsList (offset, limit) {\r\n  return fetchWuan({\r\n    url: `/groups?offset=${offset}&limit=${limit}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n//获取单个星球信息\r\nexport function getSinglePlanet (planetId) {\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n//帖子收藏\r\nexport function toCollection (params) {\r\n  const data = {\r\n    post_id: params.post_id\r\n  }\r\n  return fetchWuan({\r\n    url: `/users/${params.id}/collections`,\r\n    method: 'put',\r\n    data: data\r\n  })\r\n}\r\n\r\n//加入星球\r\nexport function joinPlanet (planetId) {\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}/members`,\r\n    method: 'post',\r\n  })\r\n}\r\n\r\n//申请加入私密星球\r\nexport function applyJoinPlanet (planetId, message) {\r\n  const data = {\r\n    text: message\r\n  }\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}/private`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n//退出星球\r\nexport function quitPlanet (planetId) {\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}/members`,\r\n    method: 'delete',\r\n  })\r\n}\r\n\r\n//判断是否加入星球\r\nexport function isJoinPlanet (planetId, mid) {\r\n  return fetchWuan({\r\n    url: `/groups/${planetId}/members/${mid}`,\r\n    method: 'get',\r\n  })\r\n}\r\n\r\n//搜索星球\r\nexport function searchGroup (params) {\r\n  return fetchWuan({\r\n    url: `/groups`,\r\n    method: 'get',\r\n    params: params\r\n  })\r\n}\r\n\r\n//创建星球\r\nexport function createGroup (params) {\r\n  const data = {\r\n    name: params.planetName,\r\n    image_url: params.img_url,\r\n    introduction: params.planetIntroduction,\r\n    private: params.selected,\r\n  }\r\n  return fetchWuan({\r\n    url: `/groups`,\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\n//获取用户加入的星球\r\nexport function userJoinPlanet (params) {\r\n  const data = {\r\n      offset: params.offset,\r\n      limit: params.limit,\r\n      user_id: params.id\r\n  }\r\n  return fetchWuan({\r\n    url: '/groups',\r\n    method: 'get',\r\n    params: data\r\n  })\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/fetch/groups.js","import axios from 'axios'\r\nimport util from '../util'\r\nimport store from '../vuex/store'\r\nimport fetchWuan from './fetchWuan'\r\n\r\nexport function getQiniuToken () {\r\n  return fetchWuan({\r\n    url: `/qiniu/token`,\r\n    method: 'get'\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/fetch/qiniu.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qiniu4js/qiniu4js.js\n// module id = 208\n// module chunks = 7 8 9","<template>\r\n<div class=\"creatPlanet\">\n  <form>\r\n    <span v-if=\"creatPlanetNameTitle\">星球名称</span>\r\n    <span v-else></span>\r\n    <input class=\"creatPlanetName\" v-model.lazy=\"creatPlanetForm.planetName\" placeholder=\"星球名称\" @click=\"creatPlanetNameTitleF(1)\" />\r\n    <label>星球头像（选填）</label>\r\n    <div class=\"val\">\r\n      <div v-show=\"imgShow\" class=\"addImg\" @click=\"focusStyleF()\">\n        <i class=\"iconfont icon-cross\"></i>\n      </div>\r\n      <img id=\"ImgUrl\" v-model.lazy=\"creatPlanetForm.img_url\"  @click=\"focusStyleF()\"/>\r\n    </div>\r\n    <span v-if=\"planetIntroductionTitle\">星球介绍（选填）</span>\r\n    <span v-else></span>\r\n    <textarea v-model=\"creatPlanetForm.planetIntroduction\" placeholder=\"星球介绍（选填）\"  @click=\"creatPlanetNameTitleF(2)\"></textarea>\r\n    <div class=\"creatPlanetSelect\">\n      <select v-model.lazy=\"creatPlanetForm.selected\">\r\n    \t  <option disabled value=\"\">加入星球的方式</option>\r\n    \t  <option>允许任何人加入</option>\r\n    \t  <option>验证水电费</option>\n      </select>\r\n      <div></div>\n    </div>\r\n  </form>\r\n  <button @click=\"createPlanet\">创建星球</button>\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { createGroup } from '../fetch/groups'\r\nimport { UploaderBuilder, Uploader } from 'qiniu4js'\r\nimport store from '../vuex/store'\r\nimport { getQiniuToken } from '../fetch/qiniu'\r\n\r\n// qiniu4js uploader object\r\n  var urlkey='';\r\n  var uploader = new UploaderBuilder()\r\n    .debug(false)//开启debug，默认false\r\n    .domain({http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\"})\r\n    .retry(2)//设置重传次数，默认0，不重传\r\n    .compress(0.5)//默认为1,范围0-1\r\n    .scale([200,0])  //第一个参数是宽度，第二个是高度,[200,0],限定高度，宽度等比缩放.[0,100]限定宽度,高度等比缩放.[200,100]固定长宽\r\n    .size(1024*1024)\r\n    .chunk(true)\r\n    .auto(true)\r\n    .multiple(false)\r\n    .accept(['.gif','.png','.jpg'])//过滤文件，默认无，详细配置见http://www.w3schools.com/tags/\r\n    .tokenShare(true)\r\n    .tokenFunc(function (setToken,task) {\r\n      getQiniuToken().then(res => {\r\n        setToken(res.uploadToken);\r\n      })\r\n    })\r\n    //任务拦截器\r\n    .interceptor({\r\n        //拦截任务,返回true，任务将会从任务队列中剔除，不会被上传\r\n      onIntercept: function (task) {\r\n        return task.file.size > 4 * 1024 * 1024;\r\n      },\r\n      //中断任务，返回true，任务队列将会在这里中断，不会执行上传操作。\r\n      onInterrupt: function (task) {\r\n        if (this.onIntercept(task)) {\r\n          console.log('请上传小于4m的文件');\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }\r\n    }) \r\n    .listener({\r\n      onTaskProgress: function (task) {\r\n          //每一个任务的上传进度,通过`task.progress`获取\r\n        console.log(task.progress);\r\n        \r\n      },onTaskSuccess(task){\r\n        //一个任务上传成功后回调\r\n        console.log(task.result.key);//文件的key\r\n        urlkey=task.result.key;\r\n        document.getElementById(\"ImgUrl\").src = \"http://7xlx4u.com1.z0.glb.clouddn.com/\"+urlkey;\r\n      },\r\n    }).build();\r\n\r\nexport default {\r\n  name: 'creatPlanet',\r\n  data () {\r\n    return {\r\n      creatPlanetForm: {\r\n        selected: '',\r\n        planetName: '',\r\n        img_url: 'http://7xlx4u.com1.z0.glb.clouddn.com/'+urlkey,\r\n        planetIntroduction: '',\r\n      },\r\n      creatPlanetNameTitle: false,\r\n      planetIntroductionTitle: false,\r\n      imgShow: true,\r\n    }\r\n  },\r\n  computed: {\r\n    isSelect: function () {\r\n      if (this.creatPlanetForm.selected == '允许任何人加入') {\r\n        return false\r\n      }\r\n      if (this.creatPlanetForm.selected == '验证水电费') {\r\n        return true\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    creatPlanetNameTitleF (n) {\r\n      var self = this;\r\n      self.creatPlanetNameTitle = false;\r\n      self.planetIntroductionTitle = false;\r\n      switch (n){\n        case 1:\r\n          self.creatPlanetNameTitle = true;\n          break;\n        case 2:\r\n          self.planetIntroductionTitle = true;\n          break;\n      }\r\n    },\r\n    focusStyleF () {\r\n      document.getElementsByTagName(\"label\")[0].className = \"focusStyle\";\r\n      this.isImgUrl = false;\r\n      this.pushImg();\r\n    },\r\n    createPlanet () {\r\n      var self = this\r\n      this.creatPlanetForm.img_url = 'http://7xlx4u.com1.z0.glb.clouddn.com/'+urlkey\r\n      this.creatPlanetForm.selected = this.isSelect\r\n      createGroup(this.creatPlanetForm).then(response => {\r\n        console.log(\"星球创建成功： id = \"+ response.id)\r\n        this.$Message.success('星球创建成功')\r\n        this.$router.push({path: `/planet/${response.id}`, query: {name: `${self.creatPlanetForm.planetName}`}})\r\n      }).catch(error => {\r\n        console.log(error)\r\n        this.$Message.error(error)\r\n      })\r\n    },\r\n    pushImg (event) {\r\n      var self = this;\r\n      this.imgShow = false;\r\n      uploader.chooseFile();\r\n      //event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.creatPlanet{\r\n  padding: 0 36px;\r\n  form{\r\n    > span{\r\n      width: 100%;\r\n      height: 16.5px;\r\n      display: block;\r\n      font-size: 12px;\r\n      line-height: 16.5px;\r\n      color: rgba(86,119,252,0.87);\r\n      margin-bottom: 2px;\r\n      padding-left: 8px;\r\n      text-align: left;\r\n      box-sizing: border-box;\r\n    }\r\n    .creatPlanetName{\r\n      font-size: 16px;\r\n      line-height: 22.5px;\r\n      border: none;\r\n      box-sizing: border-box;\r\n      display: block;\r\n      padding: 8px 8px;\r\n      width: 100%;\r\n      color: rgba(0,0,0,0.87);\r\n      &::-webkit-input-placeholder{\r\n        color: rgba(0,0,0,0.38);\r\n      }\r\n      border-bottom: 1px solid rgba(86,119,252,0.54);\r\n      outline: none;\r\n      &:focus{\r\n        border-bottom: 2px solid rgba(86,119,252,0.87);\r\n      }\r\n    }\r\n    label{\r\n      font-size: 14px;\r\n      line-height: 20px;\r\n      color: rgba(0,0,0,0.38);\r\n      display: block;\r\n      margin-top: 25px;\r\n      text-align: left;\r\n      padding-left: 8px;\r\n      &.focusStyle{\r\n        font-size: 12px;\r\n        line-height: 16.5px;\r\n        color: rgba(86,119,252,0.87);\r\n      }\r\n    }\r\n    .val{\r\n      width: 100%;\r\n      position: relative;\r\n      > .addImg, img{\r\n      width: 70px;\r\n      height: 70px;\r\n      border-radius: 100%;\r\n      display: block;\r\n      margin: 15px auto 18px auto;\r\n      background: #FAFAFA;\r\n      box-shadow: 0 0 1px 0 rgba(0,0,0,0.12), 0 1px 1px 0 rgba(0,0,0,0.24);\r\n    }\r\n    > .addImg{\r\n      position: absolute;\r\n      top: -15px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      i{\r\n        color: #5677FC;\r\n      }\r\n    }\r\n    }\r\n    textarea{\r\n      width: 100%;\r\n      height: 20vh;\r\n      padding: 14px 8px;\r\n      box-sizing: border-box;\r\n      font-size: 14px;\r\n      line-height: 20px;\r\n      color: rgba(0,0,0,0.87);\r\n      background: #FAFAFA;\r\n      box-shadow: 0 0 2px 0 rgba(0,0,0,0.12), 0 2px 2px 0 rgba(0,0,0,0.24);\r\n      border-radius: 2px;\r\n      outline: none;\r\n      resize: none;\r\n      &::-webkit-input-placeholder{\r\n        color: rgba(0,0,0,0.38);\r\n      }\r\n    }\r\n    .creatPlanetSelect{\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      position: relative;\r\n      margin-top: 30px;\r\n      margin-bottom: 32px;\r\n      select{\r\n      width: 100%;\r\n      height: 48px;\r\n      box-sizing: border-box;\r\n      border: none;\r\n      background: #FAFAFA;\r\n      box-shadow: 0 0 2px 0 rgba(0,0,0,0.12), 0 2px 2px 0 rgba(0,0,0,0.24);\r\n      border-radius: 2px;\r\n      outline: none;\r\n      font-size: 14px;\r\n      line-height: 20px;\r\n      padding-left: 8px;\r\n      color: rgba(0,0,0,0.87);\r\n      appearance: none;\r\n      }\r\n      > div{\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 14px solid rgba(0,0,0,0.54);\r\n        border-radius: 3px;\r\n        border-top:  7px solid transparent;\r\n        border-bottom:  7px solid transparent;\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 26px;\r\n        transform: translateY(-50%);\r\n      }\r\n      > div.creatPlanetSelectAinmate{\r\n        animation: selectMove 2s;\r\n        border-top: 14px solid rgba(0,0,0,0.54);\r\n        border-left:  7px solid transparent;\r\n        border-right:  7px solid transparent;\r\n        border-bottom: none;\r\n      }\r\n      @keyframes selectMove{\n      \t0%{\r\n      \t  border-left: 14px solid rgba(0,0,0,0.54);\r\n      \t  border-top:  7px solid transparent;\r\n          border-bottom:  7px solid transparent;\r\n      \t}\r\n      \t50%{\r\n          border-left: 7px solid rgba(0,0,0,0.54);\r\n          border-top:  7px solid rgba(0,0,0,0.54);\r\n          border-bottom:  7px solid rgba(0,0,0,0.54);\r\n          border-right:  7px solid rgba(0,0,0,0.54);\r\n        }\n      \t100%{\r\n      \t  border-top: 14px solid rgba(0,0,0,0.54);\r\n          border-left:  7px solid transparent;\r\n          border-right:  7px solid transparent;\r\n          border-bottom: none;\r\n      \t}\n      }\r\n    }\r\n  }\r\n  button{\r\n    background: #5677FC;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    font-size: 16px;\r\n    line-height: 22.5px;\r\n    color: rgba(255,255,255,0.87);\r\n    height: 44px;\r\n    border: none;\r\n    box-shadow: 0 0 2px 0 rgba(0,0,0,0.12), 0 2px 2px 0 rgba(0,0,0,0.24);\r\n  }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// creatPlanet.vue?8cffba4e","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".creatPlanet[data-v-70c7b466]{padding:0 .48rem}.creatPlanet form>span[data-v-70c7b466]{width:100%;height:.22rem;display:block;font-size:.16rem;line-height:.22rem;color:rgba(86,119,252,.87);margin-bottom:.026667rem;padding-left:.106667rem;text-align:left;box-sizing:border-box}.creatPlanet form .creatPlanetName[data-v-70c7b466]{font-size:.213333rem;line-height:.3rem;border:none;box-sizing:border-box;display:block;padding:.106667rem;width:100%;color:rgba(0,0,0,.87);border-bottom:.013333rem solid rgba(86,119,252,.54);outline:none}.creatPlanet form .creatPlanetName[data-v-70c7b466]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.creatPlanet form .creatPlanetName[data-v-70c7b466]:focus{border-bottom:.026667rem solid rgba(86,119,252,.87)}.creatPlanet form label[data-v-70c7b466]{font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.38);display:block;margin-top:.333333rem;text-align:left;padding-left:.106667rem}.creatPlanet form label.focusStyle[data-v-70c7b466]{font-size:.16rem;line-height:.22rem;color:rgba(86,119,252,.87)}.creatPlanet form .val[data-v-70c7b466]{width:100%;position:relative}.creatPlanet form .val>.addImg[data-v-70c7b466],.creatPlanet form .val img[data-v-70c7b466]{width:.933333rem;height:.933333rem;border-radius:100%;display:block;margin:.2rem auto .24rem;background:#fafafa;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24)}.creatPlanet form .val>.addImg[data-v-70c7b466]{position:absolute;top:-.2rem;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.creatPlanet form .val>.addImg i[data-v-70c7b466]{color:#5677fc}.creatPlanet form textarea[data-v-70c7b466]{width:100%;height:20vh;padding:.186667rem .106667rem;box-sizing:border-box;font-size:.186667rem;line-height:.266667rem;color:rgba(0,0,0,.87);background:#fafafa;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24);border-radius:.026667rem;outline:none;resize:none}.creatPlanet form textarea[data-v-70c7b466]::-webkit-input-placeholder{color:rgba(0,0,0,.38)}.creatPlanet form .creatPlanetSelect[data-v-70c7b466]{width:100%;box-sizing:border-box;position:relative;margin-top:.4rem;margin-bottom:.426667rem}.creatPlanet form .creatPlanetSelect select[data-v-70c7b466]{width:100%;height:.64rem;box-sizing:border-box;border:none;background:#fafafa;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24);border-radius:.026667rem;outline:none;font-size:.186667rem;line-height:.266667rem;padding-left:.106667rem;color:rgba(0,0,0,.87);-webkit-appearance:none;-moz-appearance:none;appearance:none}.creatPlanet form .creatPlanetSelect>div[data-v-70c7b466]{width:0;height:0;border-left:.186667rem solid rgba(0,0,0,.54);border-radius:.04rem;border-top:.093333rem solid transparent;border-bottom:.093333rem solid transparent;position:absolute;top:50%;right:.346667rem;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.creatPlanet form .creatPlanetSelect>div.creatPlanetSelectAinmate[data-v-70c7b466]{-webkit-animation:selectMove 2s;animation:selectMove 2s;border-top:.186667rem solid rgba(0,0,0,.54);border-left:.093333rem solid transparent;border-right:.093333rem solid transparent;border-bottom:none}@-webkit-keyframes selectMove{0%{border-left:14px solid rgba(0,0,0,.54);border-top:7px solid transparent;border-bottom:7px solid transparent}50%{border:7px solid rgba(0,0,0,.54)}to{border-top:14px solid rgba(0,0,0,.54);border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:none}}@keyframes selectMove{0%{border-left:14px solid rgba(0,0,0,.54);border-top:7px solid transparent;border-bottom:7px solid transparent}50%{border:7px solid rgba(0,0,0,.54)}to{border-top:14px solid rgba(0,0,0,.54);border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:none}}.creatPlanet button[data-v-70c7b466]{background:#5677fc;border-radius:.053333rem;width:100%;font-size:.213333rem;line-height:.3rem;color:hsla(0,0%,100%,.87);height:.586667rem;border:none;box-shadow:0 0 .026667rem 0 rgba(0,0,0,.12),0 .026667rem .026667rem 0 rgba(0,0,0,.24)}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/creatPlanet.vue\"],\"names\":[],\"mappings\":\"AAAA,8BACE,gBAAmB,CACpB,AAED,wCACE,WAAY,AACZ,cAAgB,AAChB,cAAe,AACf,iBAAmB,AACnB,mBAAqB,AACrB,2BAAgC,AAChC,yBAA2B,AAC3B,wBAA0B,AAC1B,gBAAiB,AACjB,qBAAuB,CACxB,AAED,oDACE,qBAAuB,AACvB,kBAAoB,AACpB,YAAa,AACb,sBAAuB,AACvB,cAAe,AACf,mBAAiC,AACjC,WAAY,AACZ,sBAA2B,AAC3B,oDAA0D,AAC1D,YAAc,CACf,AAED,+EACE,qBAA2B,CAC5B,AAED,0DACE,mDAA0D,CAC3D,AAED,yCACE,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,cAAe,AACf,sBAAwB,AACxB,gBAAiB,AACjB,uBAA0B,CAC3B,AAED,oDACE,iBAAmB,AACnB,mBAAqB,AACrB,0BAAgC,CACjC,AAED,wCACE,WAAY,AACZ,iBAAmB,CACpB,AAED,4FAEE,iBAAmB,AACnB,kBAAoB,AACpB,mBAAoB,AACpB,cAAe,AACf,yBAAiC,AACjC,mBAAoB,AACpB,qFAAmG,CACpG,AAED,gDACE,kBAAmB,AACnB,WAAa,AACb,SAAU,AACV,mCAAoC,AAC5B,2BAA4B,AACpC,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,wBAAyB,AACrB,qBAAsB,AAClB,uBAAwB,AAChC,yBAA0B,AACtB,sBAAuB,AACnB,kBAAoB,CAC7B,AAED,kDACE,aAAe,CAChB,AAED,4CACE,WAAY,AACZ,YAAa,AACb,8BAAiC,AACjC,sBAAuB,AACvB,qBAAuB,AACvB,uBAAyB,AACzB,sBAA2B,AAC3B,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,aAAc,AACd,WAAa,CACd,AAED,uEACE,qBAA2B,CAC5B,AAED,sDACE,WAAY,AACZ,sBAAuB,AACvB,kBAAmB,AACnB,iBAAmB,AACnB,wBAA2B,CAC5B,AAED,6DACE,WAAY,AACZ,cAAgB,AAChB,sBAAuB,AACvB,YAAa,AACb,mBAAoB,AACpB,sFAAmG,AACnG,yBAA2B,AAC3B,aAAc,AACd,qBAAuB,AACvB,uBAAyB,AACzB,wBAA0B,AAC1B,sBAA2B,AAC3B,wBAAyB,AACtB,qBAAsB,AACjB,eAAiB,CAC1B,AAED,0DACE,QAAS,AACT,SAAU,AACV,6CAAmD,AACnD,qBAAuB,AACvB,wCAA0C,AAC1C,2CAA6C,AAC7C,kBAAmB,AACnB,QAAS,AACT,iBAAmB,AACnB,mCAAoC,AAC5B,0BAA4B,CACrC,AAED,mFACE,gCAAiC,AACzB,wBAAyB,AACjC,4CAAkD,AAClD,yCAA2C,AAC3C,0CAA4C,AAC5C,kBAAoB,CACrB,AAED,8BACE,GACE,uCAA4C,AAC5C,iCAAkC,AAClC,mCAAqC,CACtC,AAED,IACE,gCAA2C,CAI5C,AAED,GACE,sCAA2C,AAC3C,kCAAmC,AACnC,mCAAoC,AACpC,kBAAoB,CACrB,CACF,AAED,sBACE,GACE,uCAA4C,AAC5C,iCAAkC,AAClC,mCAAqC,CACtC,AAED,IACE,gCAA2C,CAI5C,AAED,GACE,sCAA2C,AAC3C,kCAAmC,AACnC,mCAAoC,AACpC,kBAAoB,CACrB,CACF,AAED,qCACE,mBAAoB,AACpB,yBAA2B,AAC3B,WAAY,AACZ,qBAAuB,AACvB,kBAAoB,AACpB,0BAAiC,AACjC,kBAAoB,AACpB,YAAa,AACb,qFAAmG,CACpG\",\"file\":\"creatPlanet.vue\",\"sourcesContent\":[\".creatPlanet[data-v-70c7b466] {\\n  padding: 0 0.48rem;\\n}\\n\\n.creatPlanet form > span[data-v-70c7b466] {\\n  width: 100%;\\n  height: 0.22rem;\\n  display: block;\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  color: rgba(86, 119, 252, 0.87);\\n  margin-bottom: 0.026667rem;\\n  padding-left: 0.106667rem;\\n  text-align: left;\\n  box-sizing: border-box;\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  border: none;\\n  box-sizing: border-box;\\n  display: block;\\n  padding: 0.106667rem 0.106667rem;\\n  width: 100%;\\n  color: rgba(0, 0, 0, 0.87);\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.54);\\n  outline: none;\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.creatPlanet form .creatPlanetName[data-v-70c7b466]:focus {\\n  border-bottom: 0.026667rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.creatPlanet form label[data-v-70c7b466] {\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.38);\\n  display: block;\\n  margin-top: 0.333333rem;\\n  text-align: left;\\n  padding-left: 0.106667rem;\\n}\\n\\n.creatPlanet form label.focusStyle[data-v-70c7b466] {\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.creatPlanet form .val[data-v-70c7b466] {\\n  width: 100%;\\n  position: relative;\\n}\\n\\n.creatPlanet form .val > .addImg[data-v-70c7b466],\\n.creatPlanet form .val img[data-v-70c7b466] {\\n  width: 0.933333rem;\\n  height: 0.933333rem;\\n  border-radius: 100%;\\n  display: block;\\n  margin: 0.2rem auto 0.24rem auto;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n}\\n\\n.creatPlanet form .val > .addImg[data-v-70c7b466] {\\n  position: absolute;\\n  top: -0.2rem;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n\\n.creatPlanet form .val > .addImg i[data-v-70c7b466] {\\n  color: #5677FC;\\n}\\n\\n.creatPlanet form textarea[data-v-70c7b466] {\\n  width: 100%;\\n  height: 20vh;\\n  padding: 0.186667rem 0.106667rem;\\n  box-sizing: border-box;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  outline: none;\\n  resize: none;\\n}\\n\\n.creatPlanet form textarea[data-v-70c7b466]::-webkit-input-placeholder {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\n.creatPlanet form .creatPlanetSelect[data-v-70c7b466] {\\n  width: 100%;\\n  box-sizing: border-box;\\n  position: relative;\\n  margin-top: 0.4rem;\\n  margin-bottom: 0.426667rem;\\n}\\n\\n.creatPlanet form .creatPlanetSelect select[data-v-70c7b466] {\\n  width: 100%;\\n  height: 0.64rem;\\n  box-sizing: border-box;\\n  border: none;\\n  background: #FAFAFA;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n  border-radius: 0.026667rem;\\n  outline: none;\\n  font-size: 0.186667rem;\\n  line-height: 0.266667rem;\\n  padding-left: 0.106667rem;\\n  color: rgba(0, 0, 0, 0.87);\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n}\\n\\n.creatPlanet form .creatPlanetSelect > div[data-v-70c7b466] {\\n  width: 0;\\n  height: 0;\\n  border-left: 0.186667rem solid rgba(0, 0, 0, 0.54);\\n  border-radius: 0.04rem;\\n  border-top: 0.093333rem solid transparent;\\n  border-bottom: 0.093333rem solid transparent;\\n  position: absolute;\\n  top: 50%;\\n  right: 0.346667rem;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n\\n.creatPlanet form .creatPlanetSelect > div.creatPlanetSelectAinmate[data-v-70c7b466] {\\n  -webkit-animation: selectMove 2s;\\n          animation: selectMove 2s;\\n  border-top: 0.186667rem solid rgba(0, 0, 0, 0.54);\\n  border-left: 0.093333rem solid transparent;\\n  border-right: 0.093333rem solid transparent;\\n  border-bottom: none;\\n}\\n\\n@-webkit-keyframes selectMove {\\n  0% {\\n    border-left: 14px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid transparent;\\n    border-bottom: 7px solid transparent;\\n  }\\n\\n  50% {\\n    border-left: 7px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid rgba(0, 0, 0, 0.54);\\n    border-bottom: 7px solid rgba(0, 0, 0, 0.54);\\n    border-right: 7px solid rgba(0, 0, 0, 0.54);\\n  }\\n\\n  100% {\\n    border-top: 14px solid rgba(0, 0, 0, 0.54);\\n    border-left: 7px solid transparent;\\n    border-right: 7px solid transparent;\\n    border-bottom: none;\\n  }\\n}\\n\\n@keyframes selectMove {\\n  0% {\\n    border-left: 14px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid transparent;\\n    border-bottom: 7px solid transparent;\\n  }\\n\\n  50% {\\n    border-left: 7px solid rgba(0, 0, 0, 0.54);\\n    border-top: 7px solid rgba(0, 0, 0, 0.54);\\n    border-bottom: 7px solid rgba(0, 0, 0, 0.54);\\n    border-right: 7px solid rgba(0, 0, 0, 0.54);\\n  }\\n\\n  100% {\\n    border-top: 14px solid rgba(0, 0, 0, 0.54);\\n    border-left: 7px solid transparent;\\n    border-right: 7px solid transparent;\\n    border-bottom: none;\\n  }\\n}\\n\\n.creatPlanet button[data-v-70c7b466] {\\n  background: #5677FC;\\n  border-radius: 0.053333rem;\\n  width: 100%;\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(255, 255, 255, 0.87);\\n  height: 0.586667rem;\\n  border: none;\\n  box-shadow: 0 0 0.026667rem 0 rgba(0, 0, 0, 0.12), 0 0.026667rem 0.026667rem 0 rgba(0, 0, 0, 0.24);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-70c7b466\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/creatPlanet.vue\n// module id = 259\n// module chunks = 8","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-70c7b466\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./creatPlanet.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5509ddfc\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-70c7b466\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/creatPlanet.vue\n// module id = 288\n// module chunks = 8","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"creatPlanet\"\n  }, [_c('form', [(_vm.creatPlanetNameTitle) ? _c('span', [_vm._v(\"星球名称\")]) : _c('span'), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (_vm.creatPlanetForm.planetName),\n      expression: \"creatPlanetForm.planetName\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    staticClass: \"creatPlanetName\",\n    attrs: {\n      \"placeholder\": \"星球名称\"\n    },\n    domProps: {\n      \"value\": (_vm.creatPlanetForm.planetName)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.creatPlanetNameTitleF(1)\n      },\n      \"change\": function($event) {\n        _vm.creatPlanetForm.planetName = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('label', [_vm._v(\"星球头像（选填）\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"val\"\n  }, [_c('div', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.imgShow),\n      expression: \"imgShow\"\n    }],\n    staticClass: \"addImg\",\n    on: {\n      \"click\": function($event) {\n        _vm.focusStyleF()\n      }\n    }\n  }, [_c('i', {\n    staticClass: \"iconfont icon-cross\"\n  })]), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"id\": \"ImgUrl\"\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.focusStyleF()\n      }\n    },\n    model: {\n      value: (_vm.creatPlanetForm.img_url),\n      callback: function($$v) {\n        _vm.creatPlanetForm.img_url = $$v\n      },\n      expression: \"creatPlanetForm.img_url\"\n    }\n  })]), _vm._v(\" \"), (_vm.planetIntroductionTitle) ? _c('span', [_vm._v(\"星球介绍（选填）\")]) : _c('span'), _vm._v(\" \"), _c('textarea', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.creatPlanetForm.planetIntroduction),\n      expression: \"creatPlanetForm.planetIntroduction\"\n    }],\n    attrs: {\n      \"placeholder\": \"星球介绍（选填）\"\n    },\n    domProps: {\n      \"value\": (_vm.creatPlanetForm.planetIntroduction)\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.creatPlanetNameTitleF(2)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.creatPlanetForm.planetIntroduction = $event.target.value\n      }\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"creatPlanetSelect\"\n  }, [_c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (_vm.creatPlanetForm.selected),\n      expression: \"creatPlanetForm.selected\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.creatPlanetForm.selected = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', {\n    attrs: {\n      \"disabled\": \"\",\n      \"value\": \"\"\n    }\n  }, [_vm._v(\"加入星球的方式\")]), _vm._v(\" \"), _c('option', [_vm._v(\"允许任何人加入\")]), _vm._v(\" \"), _c('option', [_vm._v(\"验证水电费\")])]), _vm._v(\" \"), _c('div')])]), _vm._v(\" \"), _c('button', {\n    on: {\n      \"click\": _vm.createPlanet\n    }\n  }, [_vm._v(\"创建星球\")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-70c7b466\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/creatPlanet.vue\n// module id = 317\n// module chunks = 8"],"sourceRoot":""}