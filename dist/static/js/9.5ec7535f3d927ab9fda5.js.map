{"version":3,"sources":["webpack:///static/js/9.5ec7535f3d927ab9fda5.js","webpack:///./src/views/myInfo.vue","webpack:///./src/fetch/qiniu.js?d234*","webpack:///./~/qiniu4js/qiniu4js.js?5a22*","webpack:///myInfo.vue","webpack:///./src/views/myInfo.vue?e57b","webpack:///./src/views/myInfo.vue?c341","webpack:///./src/views/myInfo.vue?cb41"],"names":["webpackJsonp","174","module","exports","__webpack_require__","Component","206","__webpack_exports__","getQiniuToken","i","__WEBPACK_IMPORTED_MODULE_3__fetchWuan__","url","method","__WEBPACK_IMPORTED_MODULE_0_axios__","n","207","root","factory","this","modules","moduleId","installedModules","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Log","_enable","console","debug","log","error","warn","info","set","default","_interopRequireDefault","obj","_DirectTask","_DirectTask2","_ChunkTask","_UUID","_UUID2","_UploaderBuilder","_UploaderBuilder2","_Log","_Log2","_SimpleUploadListener","_SimpleUploadListener2","_DirectUploadPattern","_DirectUploadPattern2","_ChunkUploadPattern","_ChunkUploadPattern2","Uploader","builder","_this2","FILE_INPUT_EL_ID","_taskQueue","_tasking","_scale","_saveKey","handleFiles","fileInput","files","generateTask","isInterrupt","interceptedTasks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","taskQueue","Symbol","iterator","next","done","task","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","interceptors","interceptor","onIntercept","push","onInterrupt","err","return","w","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_task","index","indexOf","splice","listener","onReady","handleImages","then","auto","start","resolveUUID","re","test","replace","uuid","resolveImageInfo","blob","widthRe","heightRe","Promise","resolve","img","Image","src","URL","createObjectURL","onload","width","toString","height","onSaveKeyResolved","saveKey","_tokenShare","_retry","getRetry","_size","getSize","_chunk","getChunk","_auto","getAuto","_multiple","getMultiple","_accept","getAccept","_button","getButton","_buttonEventName","getButtonEventName","_compress","getCompress","getScale","getSaveKey","_tokenFunc","getTokenFunc","getTokenShare","_listener","assign","getListener","_interceptors","getInterceptors","_domain","getDomain","_fileInputId","Date","getTime","enable","getIsDebug","validateOptions","init","initFileInputEl","exist","document","getElementById","_fileInput","createElement","type","id","style","display","multiple","accept","acceptValue","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","endsWith","substring","body","appendChild","addEventListener","chooseFile","bind","_token","resetUploader","file","chunk","size","BLOCK_SIZE","ChunkTask","onTaskGetKey","_this3","promises","compress","scale","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","match","canvas","ctx","getContext","_this","imgW","imgH","scaleW","scaleH","drawImage","toBlob","isChunkTask","spliceFile2Block","all","Error","Array","tasking","onStart","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_task2","isDirectTask","upload","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","isFinish","click","_this4","token","_this5","resolveSaveKey","requestToken","reject","encodeURIComponent","xhr","XMLHttpRequest","open","onreadystatechange","readyState","DONE","status","response","uptoken","onabort","responseType","send","_this6","constructor","_Uploader","_Uploader2","_SimpleUploadInterceptor","_SimpleUploadInterceptor2","UploaderBuilder","UPLOAD_DOMAIN","_scheme","_isDebug","_interceptor","Math","min","max","MAX_CHUNK_SIZE","eventName","arguments","_tokenUrl","uploader","requestTaskToken","_debug","domain","scheme","protocol","window","location","http","https","BaseTask","_progress","_isSuccess","_isFinish","_file","_createDate","_startDate","_endDate","_result","_error","_key","SimpleUploadListener","SimpleUploadInterceptor","ChunkUploadPattern","getToken","startDate","uploadBlock","chain","blocks","totalChunkCount","forEach","block","blockIndex","chunks","chunkIndex","uploadChunk","concatChunks","isTaskQueueFinish","onFinish","catch","isSuccess","endDate","onTaskFail","isFirstChunkInBlock","prevChunk","getUploadBlockUrl","data","getUploadChunkUrl","host","setRequestHeader","onprogress","e","lengthComputable","progress","round","finishedBlocksSize","loaded","onTaskProgress","responseText","result","JSON","parse","processing","_chunkIndex","hasNextChunkInThisBlock","encodedKey","btoa","getMakeFileUrl","ctxListString","onTaskSuccess","retryTask","onTaskRetry","blockSize","fileSize","retry","DirectUploadPattern","uploadFile","formData","FormData","append","total","createFormData","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","Chunk","Block","_BaseTask2","_BaseTask3","_BaseTask","chunkSize","getPrototypeOf","_blocks","_blockSize","_chunkSize","blockCount","ceil","end","slice","array","count","_chunks","_processing","_data","_start","_end","spliceBlock2Chunk","chunkCount","_block","_host","_ctx","DirectTask","apply","UUID","r","random","floor","source","HTMLCanvasElement","callback","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","String","_toString","search","string","stringLength","searchString","searchLength","pos","position","Number","232","__WEBPACK_IMPORTED_MODULE_0__fetch_users__","__WEBPACK_IMPORTED_MODULE_1__vuex_store__","__WEBPACK_IMPORTED_MODULE_2_qiniu4js__","__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__","urlkey","issuccess","tokenShare","tokenFunc","setToken","res","uploadToken","$Message","warning","tasks","getElementsByTagName","build","backMyInfo","value3","year","mouth","day","saveInfos","avatar_url","sex","birthday","isChecked1","isChecked2","isChecked3","mounted","localStorage","getItem","state","userInfo","setSexF","methods","sexF","isSex","handleClick","handleChange","date","handleClear","handleOk","saveInfo","success","pushImg","event","imgShow","stopPropagation","244","version","sources","names","mappings","sourcesContent","sourceRoot","272","content","locals","300","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","_v","_s","mail","directives","rawName","expression","modifiers","lazy","domProps","change","$event","checked","for","confirm","placement","on-change","on-clear","on-ok","staticStyle","opacity","href","staticRenderFns"],"mappings":"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","file":"static/js/9.5ec7535f3d927ab9fda5.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(272)\n\nvar Component = __webpack_require__(62)(\n  /* script */\n  __webpack_require__(232),\n  /* template */\n  __webpack_require__(300),\n  /* scopeId */\n  \"data-v-21dda544\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 206:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getQiniuToken;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetchWuan__ = __webpack_require__(64);\n\n\n\n\n\nfunction getQiniuToken() {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetchWuan__[\"a\" /* default */])({\n    url: '/qiniu/token',\n    method: 'get'\n  });\n}\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__fetch_users__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__vuex_store__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qiniu4js__ = __webpack_require__(207);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_qiniu4js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_qiniu4js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__ = __webpack_require__(206);\n\n\n\n\n\n\n\nvar urlkey = '';\nvar issuccess = false;\nvar uploader = new __WEBPACK_IMPORTED_MODULE_2_qiniu4js__[\"UploaderBuilder\"]().debug(false).domain({ http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\" }).retry(2).compress(0.5).scale([200, 0]).size(1024 * 1024).chunk(true).auto(true).multiple(false).accept(['.gif', '.png', '.jpg']).tokenShare(true).tokenFunc(function (setToken, task) {\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__fetch_qiniu__[\"a\" /* getQiniuToken */])().then(function (res) {\n    setToken(res.uploadToken);\n  });\n}).interceptor({\n  onIntercept: function onIntercept(task) {\n    return task.file.size > 4 * 1024 * 1024;\n  },\n\n  onInterrupt: function onInterrupt(task) {\n    if (this.onIntercept(task)) {\n      this.$Message.warning('请上传小于4m的文件');\n      return true;\n    } else {\n      return false;\n    }\n  }\n}).listener({\n  onReady: function onReady(tasks) {},\n  onStart: function onStart(tasks) {\n    console.log('upload start');\n  },\n  onTaskGetKey: function onTaskGetKey(task) {},\n  onTaskProgress: function onTaskProgress(task) {\n    console.log(task.progress);\n  }, onTaskSuccess: function onTaskSuccess(task) {\n    console.log(task.result.key);\n    urlkey = task.result.key;\n    issuccess = true;\n    document.getElementsByTagName(\"img\")[0].src = \"http://7xlx4u.com1.z0.glb.clouddn.com/\" + urlkey;\n  },\n  onTaskFail: function onTaskFail(task) {},\n  onTaskRetry: function onTaskRetry(task) {},\n  onFinish: function onFinish(tasks) {}\n}).build();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'myInfo',\n  data: function data() {\n    return {\n      backMyInfo: {},\n      open: false,\n      value3: '',\n      year: '',\n      mouth: '',\n      day: '',\n      saveInfos: {\n        name: '',\n        avatar_url: '',\n        sex: '',\n        birthday: ''\n      },\n      isChecked1: false,\n      isChecked2: false,\n      isChecked3: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var id = JSON.parse(localStorage.getItem(\"user\")).id || __WEBPACK_IMPORTED_MODULE_1__vuex_store__[\"a\" /* default */].state.userInfo.id;\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__fetch_users__[\"f\" /* getSingleUser */])(id).then(function (response) {\n      _this.backMyInfo = response;\n      _this.saveInfos.name = response.name;\n      _this.saveInfos.avatar_url = response.avatar_url;\n      _this.saveInfos.sex = response.sex;\n      _this.saveInfos.birthday = response.birthday;\n      _this.year = response.birthday.slice(0, 4);\n      _this.mouth = response.birthday.slice(5, 7);\n      _this.day = response.birthday.slice(8, 10);\n      _this.setSexF(response.sex);\n    }).catch(function (error) {\n      _this.$Message.error(error);\n    });\n  },\n\n  methods: {\n    sexF: function sexF(n) {\n      this.isChecked1 = false;\n      this.isChecked2 = false;\n      this.isChecked3 = false;\n      switch (n) {\n        case 1:\n          this.saveInfos.sex = \"man\";\n          this.isChecked1 = true;\n          break;\n        case 2:\n          this.saveInfos.sex = \"woman\";\n          this.isChecked2 = true;\n          break;\n        case 3:\n          this.saveInfos.sex = \"secret\";\n          this.isChecked3 = true;\n          break;\n        default:\n          this.saveInfos.sex = \"man\";\n          this.isChecked1 = true;\n          break;\n      }\n    },\n    setSexF: function setSexF(isSex) {\n      this.isChecked1 = false;\n      this.isChecked2 = false;\n      this.isChecked3 = false;\n      switch (isSex) {\n        case \"man\":\n          this.isChecked1 = true;\n          break;\n        case \"woman\":\n          this.isChecked2 = true;\n          break;\n        case \"secret\":\n          this.isChecked3 = true;\n          break;\n        default:\n          this.isChecked1 = true;\n          break;\n      }\n    },\n    handleClick: function handleClick() {\n      this.open = !this.open;\n    },\n    handleChange: function handleChange(date) {\n      this.value3 = date;\n    },\n    handleClear: function handleClear() {\n      this.open = false;\n    },\n    handleOk: function handleOk() {\n      this.open = false;\n      this.year = this.value3.slice(0, 4);\n      this.mouth = this.value3.slice(5, 7);\n      this.day = this.value3.slice(8);\n      this.saveInfos.birthday = this.value3;\n    },\n    saveInfo: function saveInfo() {\n      var _this2 = this;\n\n      var id = JSON.parse(localStorage.getItem(\"user\")).id || __WEBPACK_IMPORTED_MODULE_1__vuex_store__[\"a\" /* default */].state.userInfo.id;\n      if (issuccess) {\n        this.saveInfos.avatar_url = \"http://7xlx4u.com1.z0.glb.clouddn.com/\" + urlkey;\n      }\n      console.log(this.saveInfos);\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__fetch_users__[\"g\" /* changeUserInfo */])(id, this.saveInfos).then(function (response) {\n        _this2.$Message.success(response.success);\n      }).catch(function (error) {\n        console.log(error);\n        _this2.$Message.error('保存失败' + error);\n      });\n    },\n    pushImg: function pushImg(event) {\n      var self = this;\n      this.imgShow = false;\n      uploader.chooseFile();\n      event.stopPropagation();\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 244:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(148)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"button[data-v-21dda544],input[data-v-21dda544],select[data-v-21dda544]{outline:none}.myInfo img[data-v-21dda544]{width:.933333rem;height:.933333rem;border-radius:100%;margin-top:.346667rem;margin-bottom:.286667rem}.myInfo form .myInfoFormList[data-v-21dda544]{width:4.053333rem;margin:0 auto;margin-bottom:.28rem;padding-left:.233333rem;box-sizing:border-box;text-align:left}.myInfo form .myInfoFormList>div.datas[data-v-21dda544]{width:100%;border:none;margin-left:-.22rem}.myInfo form .myInfoFormList>div.datas>span[data-v-21dda544]{font-size:.213333rem;line-height:.3rem;height:.3rem;display:inline-block;color:#212121;border-bottom:.013333rem solid rgba(86,119,252,.87);padding:0 .22rem;margin-right:.2rem}.myInfo form .myInfoFormList .fontSizeOne[data-v-21dda544]{display:block}.myInfo form .myInfoFormList .myInfoEmail[data-v-21dda544]{color:rgba(0,0,0,.56)}.myInfo form .myInfoFormList>button.emailBtn[data-v-21dda544]{width:.84rem;height:.333333rem;border:none;border-radius:.053333rem;background:#5677fc;color:#fff;float:right}.myInfo form .myInfoFormList .myInfoName[data-v-21dda544]{color:rgba(0,0,0,.87);border:none}.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]{width:.133333rem;height:.133333rem;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;position:relative;border:.026667rem solid #9a9a9a;border-radius:100%}.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]:checked{border:.046667rem solid #6c89fc;border-radius:100%}.myInfo form .myInfoFormList .myInfoSex[data-v-21dda544]{display:inline-block;margin-right:.54rem}.myInfo form div[data-v-21dda544]:nth-child(2){border-bottom:.013333rem solid rgba(86,119,252,.87)}.myInfo>button[data-v-21dda544]{width:4.053333rem;border:none;background-color:#5677fc;font-size:.213333rem;line-height:.3rem;color:hsla(0,0%,100%,.87);padding:.146667rem 1.813333rem;box-sizing:border-box;border-radius:.053333rem;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24);margin-top:.586667rem}.fontSizeOne[data-v-21dda544],.fontSizeThere[data-v-21dda544]{font-size:.16rem;line-height:.22rem}.fontSizeOne[data-v-21dda544]{margin-bottom:.08rem}.fontSizeTwo[data-v-21dda544]{font-size:.213333rem;line-height:.366667rem}.textColorOne[data-v-21dda544]{color:rgba(86,119,252,.87)}.textColorTwo[data-v-21dda544]{color:rgba(0,0,0,.38)}select[data-v-21dda544]{border:none;border-bottom:.013333rem solid rgba(86,119,252,.87);-webkit-appearance:none;-moz-appearance:none;appearance:none;margin-right:.2rem}select[data-v-21dda544]:first-of-type{width:1.2rem;box-sizing:border-box;padding-left:.22rem;margin-left:-.22rem}select[data-v-21dda544]:nth-of-type(2),select[data-v-21dda544]:nth-of-type(3){width:.8rem;box-sizing:border-box;padding-left:.18rem}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/myInfo.vue\"],\"names\":[],\"mappings\":\"AAAA,uEAGE,YAAc,CACf,AAED,6BACE,iBAAmB,AACnB,kBAAoB,AACpB,mBAAoB,AACpB,sBAAwB,AACxB,wBAA2B,CAC5B,AAED,8CACE,kBAAmB,AACnB,cAAe,AACf,qBAAuB,AACvB,wBAA0B,AAC1B,sBAAuB,AACvB,eAAiB,CAClB,AAED,wDACE,WAAY,AACZ,YAAa,AACb,mBAAsB,CACvB,AAED,6DACE,qBAAuB,AACvB,kBAAoB,AACpB,aAAe,AACf,qBAAsB,AACtB,cAAe,AACf,oDAA0D,AAC1D,iBAAmB,AACnB,kBAAqB,CACtB,AAED,2DACE,aAAe,CAChB,AAED,2DACE,qBAA2B,CAC5B,AAED,8DACE,aAAe,AACf,kBAAoB,AACpB,YAAa,AACb,yBAA2B,AAC3B,mBAAoB,AACpB,WAAe,AACf,WAAa,CACd,AAED,0DACE,sBAA2B,AAC3B,WAAa,CACd,AAED,+DACE,iBAAmB,AACnB,kBAAoB,AACpB,sBAAuB,AACvB,wBAAyB,AACtB,qBAAsB,AACjB,gBAAiB,AACzB,kBAAmB,AACnB,gCAAkC,AAClC,kBAAoB,CACrB,AAED,uEACE,gCAAkC,AAClC,kBAAoB,CACrB,AAED,yDACE,qBAAsB,AACtB,mBAAsB,CACvB,AAED,+CACE,mDAA0D,CAC3D,AAED,gCACE,kBAAmB,AACnB,YAAa,AACb,yBAA0B,AAC1B,qBAAuB,AACvB,kBAAoB,AACpB,0BAAiC,AACjC,+BAAiC,AACjC,sBAAuB,AACvB,yBAA2B,AAC3B,sFAAmG,AACnG,qBAAwB,CACzB,AAED,8DAEE,iBAAmB,AACnB,kBAAqB,CACtB,AAED,8BACE,oBAAuB,CACxB,AAED,8BACE,qBAAuB,AACvB,sBAAyB,CAC1B,AAED,+BACE,0BAAgC,CACjC,AAED,+BACE,qBAA2B,CAC5B,AAED,wBACE,YAAa,AACb,oDAA0D,AAC1D,wBAAyB,AACzB,qBAAsB,AACjB,gBAAiB,AACtB,kBAAqB,CACtB,AAED,sCACE,aAAc,AACd,sBAAuB,AACvB,oBAAsB,AACtB,mBAAsB,CACvB,AAED,8EAEE,YAAc,AACd,sBAAuB,AACvB,mBAAsB,CACvB\",\"file\":\"myInfo.vue\",\"sourcesContent\":[\"button[data-v-21dda544],\\ninput[data-v-21dda544],\\nselect[data-v-21dda544] {\\n  outline: none;\\n}\\n\\n.myInfo img[data-v-21dda544] {\\n  width: 0.933333rem;\\n  height: 0.933333rem;\\n  border-radius: 100%;\\n  margin-top: 0.346667rem;\\n  margin-bottom: 0.286667rem;\\n}\\n\\n.myInfo form .myInfoFormList[data-v-21dda544] {\\n  width: 4.053333rem;\\n  margin: 0 auto;\\n  margin-bottom: 0.28rem;\\n  padding-left: 0.233333rem;\\n  box-sizing: border-box;\\n  text-align: left;\\n}\\n\\n.myInfo form .myInfoFormList > div.datas[data-v-21dda544] {\\n  width: 100%;\\n  border: none;\\n  margin-left: -0.22rem;\\n}\\n\\n.myInfo form .myInfoFormList > div.datas > span[data-v-21dda544] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  height: 0.3rem;\\n  display: inline-block;\\n  color: #212121;\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n  padding: 0 0.22rem;\\n  margin-right: 0.2rem;\\n}\\n\\n.myInfo form .myInfoFormList .fontSizeOne[data-v-21dda544] {\\n  display: block;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoEmail[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.56);\\n}\\n\\n.myInfo form .myInfoFormList > button.emailBtn[data-v-21dda544] {\\n  width: 0.84rem;\\n  height: 0.333333rem;\\n  border: none;\\n  border-radius: 0.053333rem;\\n  background: #5677FC;\\n  color: #FFFFFF;\\n  float: right;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoName[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.87);\\n  border: none;\\n}\\n\\n.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544] {\\n  width: 0.133333rem;\\n  height: 0.133333rem;\\n  box-sizing: border-box;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  position: relative;\\n  border: 0.026667rem solid #9a9a9a;\\n  border-radius: 100%;\\n}\\n\\n.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]:checked {\\n  border: 0.046667rem solid #6c89fc;\\n  border-radius: 100%;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoSex[data-v-21dda544] {\\n  display: inline-block;\\n  margin-right: 0.54rem;\\n}\\n\\n.myInfo form div[data-v-21dda544]:nth-child(2) {\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.myInfo > button[data-v-21dda544] {\\n  width: 4.053333rem;\\n  border: none;\\n  background-color: #5677FC;\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(255, 255, 255, 0.87);\\n  padding: 0.146667rem 1.813333rem;\\n  box-sizing: border-box;\\n  border-radius: 0.053333rem;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n  margin-top: 0.586667rem;\\n}\\n\\n.fontSizeOne[data-v-21dda544],\\n.fontSizeThere[data-v-21dda544] {\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n}\\n\\n.fontSizeOne[data-v-21dda544] {\\n  margin-bottom: 0.08rem;\\n}\\n\\n.fontSizeTwo[data-v-21dda544] {\\n  font-size: 0.213333rem;\\n  line-height: 0.366667rem;\\n}\\n\\n.textColorOne[data-v-21dda544] {\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.textColorTwo[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\nselect[data-v-21dda544] {\\n  border: none;\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n       appearance: none;\\n  margin-right: 0.2rem;\\n}\\n\\nselect[data-v-21dda544]:nth-of-type(1) {\\n  width: 1.2rem;\\n  box-sizing: border-box;\\n  padding-left: 0.22rem;\\n  margin-left: -0.22rem;\\n}\\n\\nselect[data-v-21dda544]:nth-of-type(2),\\nselect[data-v-21dda544]:nth-of-type(3) {\\n  width: 0.8rem;\\n  box-sizing: border-box;\\n  padding-left: 0.18rem;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 272:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(244);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(149)(\"7652551e\", content, true);\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"myInfo\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.saveInfos.avatar_url\n    },\n    on: {\n      \"click\": _vm.pushImg\n    }\n  }), _vm._v(\" \"), _c('form', [_c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorTwo\"\n  }, [_vm._v(\"邮箱\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"fontSizeTwo myInfoEmail\"\n  }, [_vm._v(_vm._s(_vm.backMyInfo.mail))]), _vm._v(\" \"), (_vm.backMyInfo.mail_checked) ? _c('button', {\n    staticClass: \"fontSizeThere emailBtn\"\n  }, [_vm._v(\"已验证\")]) : _c('button', {\n    staticClass: \"fontSizeThere emailBtn\"\n  }, [_vm._v(\"验证\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"昵称\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (this.saveInfos.name),\n      expression: \"this.saveInfos.name\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    staticClass: \"fontSizeTwo myInfoName\",\n    attrs: {\n      \"type\": \"text\"\n    },\n    domProps: {\n      \"value\": (this.saveInfos.name)\n    },\n    on: {\n      \"change\": function($event) {\n        this.saveInfos.name = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"性别\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"one\",\n      \"value\": \"男\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked1\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(1)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo myInfoSex\",\n    attrs: {\n      \"for\": \"one\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"Two\",\n      \"value\": \"女\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked2\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(2)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo myInfoSex\",\n    attrs: {\n      \"for\": \"Two\"\n    }\n  }, [_vm._v(\"女\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"There\",\n      \"value\": \"不想透露\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked3\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(3)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo\",\n    attrs: {\n      \"for\": \"There\"\n    }\n  }, [_vm._v(\"不想透露\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"生日\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"datas\",\n    on: {\n      \"click\": _vm.handleClick\n    }\n  }, [_c('span', [_vm._v(_vm._s(_vm.year) + \"年\")]), _c('span', [_vm._v(_vm._s(_vm.mouth) + \"月\")]), _c('span', [_vm._v(_vm._s(_vm.day) + \"日\")])]), _vm._v(\" \"), _c('DatePicker', {\n    attrs: {\n      \"open\": _vm.open,\n      \"value\": _vm.value3,\n      \"confirm\": \"\",\n      \"type\": \"date\",\n      \"placement\": \"top-start\"\n    },\n    on: {\n      \"on-change\": _vm.handleChange,\n      \"on-clear\": _vm.handleClear,\n      \"on-ok\": _vm.handleOk\n    }\n  }, [_c('a', {\n    staticStyle: {\n      \"opacity\": \"0\"\n    },\n    attrs: {\n      \"href\": \"javascript:void(0)\"\n    },\n    on: {\n      \"click\": _vm.handleClick\n    }\n  }, [(_vm.value3 === '') ? [_vm._v(\"选择日期\")] : [_vm._v(_vm._s(_vm.value3))]], 2)])], 1)]), _vm._v(\" \"), _c('button', {\n    staticClass: \"fontSizeTwo\",\n    on: {\n      \"click\": _vm.saveInfo\n    }\n  }, [_vm._v(\"保存\")])])\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/9.5ec7535f3d927ab9fda5.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-21dda544\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./myInfo.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./myInfo.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-21dda544\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./myInfo.vue\"),\n  /* scopeId */\n  \"data-v-21dda544\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/myInfo.vue\n// module id = 174\n// module chunks = 9","import axios from 'axios'\r\nimport util from '../util'\r\nimport store from '../vuex/store'\r\nimport fetchWuan from './fetchWuan'\r\n\r\nexport function getQiniuToken () {\r\n  return fetchWuan({\r\n    url: `/qiniu/token`,\r\n    method: 'get'\r\n  })\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/fetch/qiniu.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Qiniu\"] = factory();\n\telse\n\t\troot[\"Qiniu\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Log = function () {\n    function Log() {\n        _classCallCheck(this, Log);\n    }\n\n    _createClass(Log, null, [{\n        key: \"d\",\n        value: function d(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.debug(object);\n        }\n    }, {\n        key: \"l\",\n        value: function l(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.log(object);\n        }\n    }, {\n        key: \"e\",\n        value: function e(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.error(object);\n        }\n    }, {\n        key: \"w\",\n        value: function w(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.warn(object);\n        }\n    }, {\n        key: \"i\",\n        value: function i(object) {\n            if (!Log._enable) {\n                return;\n            }\n            console.info(object);\n        }\n    }, {\n        key: \"enable\",\n        get: function get() {\n            return this._enable;\n        },\n        set: function set(value) {\n            this._enable = value;\n        }\n    }]);\n\n    return Log;\n}();\n\nLog._enable = false;\nexports.default = Log;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _DirectTask = __webpack_require__(10);\n\nvar _DirectTask2 = _interopRequireDefault(_DirectTask);\n\nvar _ChunkTask = __webpack_require__(9);\n\nvar _UUID = __webpack_require__(11);\n\nvar _UUID2 = _interopRequireDefault(_UUID);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nvar _SimpleUploadListener = __webpack_require__(5);\n\nvar _SimpleUploadListener2 = _interopRequireDefault(_SimpleUploadListener);\n\nvar _DirectUploadPattern = __webpack_require__(8);\n\nvar _DirectUploadPattern2 = _interopRequireDefault(_DirectUploadPattern);\n\nvar _ChunkUploadPattern = __webpack_require__(7);\n\nvar _ChunkUploadPattern2 = _interopRequireDefault(_ChunkUploadPattern);\n\n__webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Uploader = function () {\n    function Uploader(builder) {\n        var _this2 = this;\n\n        _classCallCheck(this, Uploader);\n\n        this.FILE_INPUT_EL_ID = 'qiniu4js-input';\n        this._taskQueue = []; //任务队列\n        this._tasking = false; //任务执行中\n        this._scale = []; //缩放大小,限定高度等比缩放[h:200,w:0],限定宽度等比缩放[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        /**\n         * 处理文件\n         */\n        this.handleFiles = function () {\n            //如果没有选中文件就返回\n            if (_this2.fileInput.files.length == 0) {\n                return;\n            }\n            //生成task\n            _this2.generateTask();\n            //是否中断任务\n            var isInterrupt = false;\n            var interceptedTasks = [];\n            //任务拦截器过滤\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this2.taskQueue[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var task = _step.value;\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = _this2.interceptors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var interceptor = _step3.value;\n\n                            //拦截生效\n                            if (interceptor.onIntercept(task, _this2.taskQueue)) {\n                                interceptedTasks.push(task);\n                                _Log2.default.d(\"任务拦截器拦截了任务:\");\n                                _Log2.default.d(task);\n                            }\n                            //打断生效\n                            if (interceptor.onInterrupt(task, _this2.taskQueue)) {\n                                //将打断标志位设为true\n                                isInterrupt = true;\n                                break;\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (isInterrupt) {\n                _Log2.default.w(\"任务拦截器中断了任务队列\");\n                return;\n            }\n            //从任务队列中去除任务\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = interceptedTasks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _task = _step2.value;\n\n                    var index = _this2.taskQueue.indexOf(_task);\n                    if (index != -1) {\n                        _this2.taskQueue.splice(index, 1);\n                    }\n                }\n                //回调函数函数\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            _this2.listener.onReady(_this2.taskQueue);\n            //处理图片\n            _this2.handleImages().then(function () {\n                //自动上传\n                if (_this2.auto) {\n                    _Log2.default.d(\"开始自动上传\");\n                    _this2.start();\n                }\n            });\n        };\n        this.resolveUUID = function (s) {\n            var re = /\\$\\(uuid\\)/;\n            if (re.test(s)) {\n                return s.replace(re, _UUID2.default.uuid());\n            }\n            return s;\n        };\n        this.resolveImageInfo = function (blob, s) {\n            var widthRe = /\\$\\(imageInfo\\.width\\)/;\n            var heightRe = /\\$\\(imageInfo\\.height\\)/;\n            if (!widthRe.test(s) && !heightRe.test(s)) {\n                return Promise.resolve(s);\n            }\n            return new Promise(function (resolve) {\n                var img = new Image();\n                img.src = URL.createObjectURL(blob);\n                img.onload = function () {\n                    s = s.replace(widthRe, img.width.toString());\n                    s = s.replace(heightRe, img.height.toString());\n                    resolve(s);\n                };\n            });\n        };\n        this.onSaveKeyResolved = function (saveKey) {\n            _this2._tokenShare = _this2._tokenShare && _this2._saveKey == saveKey;\n            return saveKey;\n        };\n        this._retry = builder.getRetry;\n        this._size = builder.getSize;\n        this._chunk = builder.getChunk;\n        this._auto = builder.getAuto;\n        this._multiple = builder.getMultiple;\n        this._accept = builder.getAccept;\n        this._button = builder.getButton;\n        this._buttonEventName = builder.getButtonEventName;\n        this._compress = builder.getCompress;\n        this._scale = builder.getScale;\n        this._saveKey = builder.getSaveKey;\n        this._tokenFunc = builder.getTokenFunc;\n        this._tokenShare = builder.getTokenShare;\n        this._listener = Object.assign(new _SimpleUploadListener2.default(), builder.getListener);\n        this._interceptors = builder.getInterceptors;\n        this._domain = builder.getDomain;\n        this._fileInputId = this.FILE_INPUT_EL_ID + \"_\" + new Date().getTime();\n        _Log2.default.enable = builder.getIsDebug;\n        this.validateOptions();\n        this.init();\n    }\n    /**\n     * 初始化操作\n     */\n\n\n    _createClass(Uploader, [{\n        key: \"init\",\n        value: function init() {\n            this.initFileInputEl();\n        }\n        /**\n         * 初始化file input element\n         */\n\n    }, {\n        key: \"initFileInputEl\",\n        value: function initFileInputEl() {\n            //查询已经存在的file input\n            var exist = document.getElementById(this._fileInputId);\n            //创建input元素\n            this._fileInput = exist ? exist : document.createElement('input');\n            this.fileInput.type = 'file'; //type file\n            this.fileInput.id = this._fileInputId; //id 方便后面查找\n            this.fileInput.style.display = 'none'; //隐藏file input\n            //多文件\n            if (this.multiple) {\n                //多文件\n                this.fileInput.multiple = true;\n            }\n            //文件类型\n            if (this.accept && this.accept.length != 0) {\n                var acceptValue = '';\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                    for (var _iterator4 = this.accept[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                        var value = _step4.value;\n\n                        acceptValue += value;\n                        acceptValue += ',';\n                    }\n                } catch (err) {\n                    _didIteratorError4 = true;\n                    _iteratorError4 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                            _iterator4.return();\n                        }\n                    } finally {\n                        if (_didIteratorError4) {\n                            throw _iteratorError4;\n                        }\n                    }\n                }\n\n                if (acceptValue.endsWith(',')) {\n                    acceptValue = acceptValue.substring(0, acceptValue.length - 1);\n                }\n                this.fileInput.accept = acceptValue;\n                _Log2.default.d(\"accept\\u7C7B\\u578B \" + acceptValue);\n            }\n            //将input元素添加到body子节点的末尾\n            document.body.appendChild(this.fileInput);\n            //选择文件监听器\n            this.fileInput.addEventListener('change', this.handleFiles, false);\n            if (this._button != undefined) {\n                var button = document.getElementById(this._button);\n                button.addEventListener(this._buttonEventName, this.chooseFile.bind(this));\n            }\n        }\n        /**\n         * 上传完成或者失败后,对本次上传任务进行清扫\n         */\n\n    }, {\n        key: \"resetUploader\",\n        value: function resetUploader() {\n            _Log2.default.d(\"开始重置 uploader\");\n            this.taskQueue.length = 0;\n            _Log2.default.d(\"任务队列已清空\");\n            this._token = null;\n            _Log2.default.d(\"token已清空\");\n            _Log2.default.d(\"uploader 重置完毕\");\n        }\n        /**\n         * 是否是分块任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"generateTask\",\n\n        /**\n         * 生成task\n         */\n        value: function generateTask() {\n            this.resetUploader();\n            var files = this.fileInput.files;\n            //遍历files 创建上传任务\n            for (var i = 0; i < this.fileInput.files.length; i++) {\n                var file = files[i];\n                var task = void 0;\n                //只有在开启分块上传，并且文件大小大于4mb的时候才进行分块上传\n                if (this.chunk && file.size > _UploaderBuilder2.default.BLOCK_SIZE) {\n                    task = new _ChunkTask.ChunkTask(file, _UploaderBuilder2.default.BLOCK_SIZE, this.size);\n                } else {\n                    task = new _DirectTask2.default(file);\n                }\n                if (this._saveKey == false) {\n                    task.key = this.listener.onTaskGetKey(task);\n                }\n                this.taskQueue.push(task);\n            }\n        }\n        /**\n         * 处理图片-缩放-质量压缩\n         */\n\n    }, {\n        key: \"handleImages\",\n        value: function handleImages() {\n            var _this3 = this;\n\n            var promises = [];\n            if (this.compress != 1 || this.scale[0] != 0 || this.scale[1] != 0) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    var _loop = function _loop() {\n                        var task = _step5.value;\n\n                        if (!task.file.type.match('image.*')) {\n                            return \"continue\";\n                        }\n                        _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u524D\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + task.file.size / 1024 + \" kb\");\n                        var canvas = document.createElement('canvas');\n                        var img = new Image();\n                        var ctx = canvas.getContext('2d');\n                        img.src = URL.createObjectURL(task.file);\n                        var _this = _this3;\n                        promises.push(new Promise(function (resolve) {\n                            return img.onload = function () {\n                                var imgW = img.width;\n                                var imgH = img.height;\n                                var scaleW = _this.scale[0];\n                                var scaleH = _this.scale[1];\n                                if (scaleW == 0 && scaleH > 0) {\n                                    canvas.width = imgW / imgH * scaleH;\n                                    canvas.height = scaleH;\n                                } else if (scaleH == 0 && scaleW > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = imgH / imgW * scaleW;\n                                } else if (scaleW > 0 && scaleH > 0) {\n                                    canvas.width = scaleW;\n                                    canvas.height = scaleH;\n                                } else {\n                                    canvas.width = img.width;\n                                    canvas.height = img.height;\n                                }\n                                //这里的长宽是绘制到画布上的图片的长宽\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                console.log(canvas);\n                                console.log(canvas.toBlob);\n                                //0.95是最接近原图大小，如果质量为1的话会导致比原图大几倍。\n                                canvas.toBlob(function (blob) {\n                                    resolve(blob);\n                                    _Log2.default.d(task.file.name + \" \\u5904\\u7406\\u540E\\u7684\\u56FE\\u7247\\u5927\\u5C0F:\" + blob.size / 1024 + \" kb\");\n                                }, \"image/jpeg\", _this.compress * 0.95);\n                            };\n                        }).then(function (blob) {\n                            blob.name = task.file.name;\n                            task.file = blob;\n                            if (Uploader.isChunkTask(task)) {\n                                task.spliceFile2Block();\n                            }\n                        }));\n                    };\n\n                    for (var _iterator5 = this.taskQueue[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _ret = _loop();\n\n                        if (_ret === \"continue\") continue;\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n            return Promise.all(promises);\n        }\n        /**\n         * 检验选项合法性\n         */\n\n    }, {\n        key: \"validateOptions\",\n        value: function validateOptions() {\n            _Log2.default.d(\"开始检查构建参数合法性\");\n            if (!this._tokenFunc) {\n                throw new Error('你必须提供一个获取Token的回调函数');\n            }\n            if (!this.scale || !(this.scale instanceof Array) || this.scale.length != 2 || this.scale[0] < 0 || this.scale[1] < 0) {\n                throw new Error('scale必须是长度为2的number类型的数组,scale[0]为宽度，scale[1]为长度,必须大于等于0');\n            }\n            _Log2.default.d(\"构建参数检查完毕\");\n        }\n        /**\n         * 开始上传\n         */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u904D\\u5386\\u5F00\\u59CB\");\n            if (this.fileInput.files.length == 0) {\n                throw new Error('没有选中的文件，无法开始上传');\n            }\n            if (this.tasking) {\n                throw new Error('任务执行中，请不要重复上传');\n            }\n            this.listener.onStart(this.taskQueue);\n            //遍历任务队列\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = this.taskQueue[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var _task2 = _step6.value;\n\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u540D\\uFF1A\" + _task2.file.name);\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\" + _task2.file.size + \"\\u5B57\\u8282\\uFF0C\" + _task2.file.size / 1024 + \" kb\\uFF0C\" + _task2.file.size / 1024 / 1024 + \" mb\");\n                    //根据任务的类型调用不同的上传模式进行上传\n                    if (Uploader.isDirectTask(_task2)) {\n                        _Log2.default.d('该上传任务为直传任务');\n                        //直传\n                        new _DirectUploadPattern2.default(this).upload(_task2);\n                    } else if (Uploader.isChunkTask(_task2)) {\n                        _Log2.default.d('该上传任务为分片任务');\n                        //分块上传\n                        new _ChunkUploadPattern2.default(this).upload(_task2);\n                    } else {\n                        throw new Error('非法的task类型');\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        }\n        /**\n         * 所有任务是否完成\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isTaskQueueFinish\",\n        value: function isTaskQueueFinish() {\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this.taskQueue[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var _task3 = _step7.value;\n\n                    if (!_task3.isFinish) {\n                        return false;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return true;\n        }\n        /**\n         * 选择文件\n         */\n\n    }, {\n        key: \"chooseFile\",\n        value: function chooseFile() {\n            this.fileInput.click();\n        }\n    }, {\n        key: \"getToken\",\n        value: function getToken(task) {\n            var _this4 = this;\n\n            if (this._tokenShare && this._token != undefined) {\n                return Promise.resolve(this._token);\n            }\n            _Log2.default.d(\"\\u5F00\\u59CB\\u83B7\\u53D6\\u4E0A\\u4F20token\");\n            return Promise.resolve(this._tokenFunc(this, task)).then(function (token) {\n                _Log2.default.d(\"\\u4E0A\\u4F20token\\u83B7\\u53D6\\u6210\\u529F: \" + token);\n                _this4._token = token;\n                return token;\n            });\n        }\n    }, {\n        key: \"requestTaskToken\",\n        value: function requestTaskToken(task, url) {\n            var _this5 = this;\n\n            return this.resolveSaveKey(task).then(function (saveKey) {\n                return _this5.requestToken(url, saveKey);\n            });\n        }\n    }, {\n        key: \"requestToken\",\n        value: function requestToken(url, saveKey) {\n            return new Promise(function (resolve, reject) {\n                if (typeof saveKey == \"string\") {\n                    url += (/\\?/.test(url) ? \"&\" : \"?\") + \"saveKey=\" + encodeURIComponent(saveKey);\n                }\n                url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime();\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState != XMLHttpRequest.DONE) {\n                        return;\n                    }\n                    if (xhr.status == 200) {\n                        resolve(xhr.response.uptoken);\n                        return;\n                    }\n                    reject(xhr.response);\n                };\n                xhr.onabort = function () {\n                    reject('aborted');\n                };\n                xhr.responseType = 'json';\n                xhr.send();\n            });\n        }\n    }, {\n        key: \"resolveSaveKey\",\n        value: function resolveSaveKey(task) {\n            var _this6 = this;\n\n            var saveKey = this._saveKey;\n            if (typeof saveKey != \"string\") {\n                return Promise.resolve(undefined);\n            }\n            return Promise.resolve(saveKey).then(this.resolveUUID).then(function (saveKey) {\n                return _this6.resolveImageInfo(task.file, saveKey);\n            }).then(this.onSaveKeyResolved);\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"size\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"auto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"multiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"accept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"compress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"scale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"listener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"fileInput\",\n        get: function get() {\n            return this._fileInput;\n        }\n    }, {\n        key: \"chunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"taskQueue\",\n        get: function get() {\n            return this._taskQueue;\n        }\n    }, {\n        key: \"tasking\",\n        get: function get() {\n            return this._tasking;\n        },\n        set: function set(value) {\n            this._tasking = value;\n        }\n    }, {\n        key: \"interceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"domain\",\n        get: function get() {\n            return this._domain;\n        }\n    }], [{\n        key: \"isChunkTask\",\n        value: function isChunkTask(task) {\n            return task.constructor.name === _ChunkTask.ChunkTask.name && task instanceof _ChunkTask.ChunkTask;\n        }\n        /**\n         * 是否是直传任务\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isDirectTask\",\n        value: function isDirectTask(task) {\n            return task.constructor.name === _DirectTask2.default.name && task instanceof _DirectTask2.default;\n        }\n    }]);\n\n    return Uploader;\n}();\n\nexports.default = Uploader;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _SimpleUploadInterceptor = __webpack_require__(6);\n\nvar _SimpleUploadInterceptor2 = _interopRequireDefault(_SimpleUploadInterceptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * UploaderBuilder\n *\n */\nvar UploaderBuilder = function () {\n    function UploaderBuilder() {\n        _classCallCheck(this, UploaderBuilder);\n\n        this._retry = 0; //最大重试次数\n        this._domain = UploaderBuilder.UPLOAD_DOMAIN; //上传域名\n        this._scheme = null; //上传域名的 scheme\n        this._size = 1024 * 1024; //分片大小,单位字节,上限4m,不能为0\n        this._chunk = true; //分块上传\n        this._auto = true; //自动上传,每次选择文件后\n        this._multiple = true; //是否支持多文件\n        this._accept = []; //接受的文件类型\n        this._compress = 1; //图片压缩质量\n        this._scale = [0, 0]; //缩放大小,限定高度等比[h:200,w:0],限定宽度等比[h:0,w:100],限定长宽[h:200,w:100]\n        this._saveKey = false;\n        this._tokenShare = true; //分享token,如果为false,每一次HTTP请求都需要新获取Token\n        this._interceptors = []; //任务拦截器\n        this._isDebug = false; //\n    }\n    /**\n     * 设置上传的域名,默认是 {http: 'http://upload.qiniu.com', https: 'https://up.qbox.me'}\n     * @param domain\n     * @returns {UploaderBuilder}\n     */\n\n\n    _createClass(UploaderBuilder, [{\n        key: \"domain\",\n        value: function domain(_domain) {\n            this._domain = _domain;\n            return this;\n        }\n        /**\n         * 设置上传域名的协议类型，默认从 window.location.protocol 读取\n         * @param scheme\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"scheme\",\n        value: function scheme(_scheme) {\n            this._scheme = _scheme;\n            return this;\n        }\n        /**\n         * 添加一个拦截器\n         * @param interceptor\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"interceptor\",\n        value: function interceptor(_interceptor) {\n            this._interceptors.push(Object.assign(new _SimpleUploadInterceptor2.default(), _interceptor));\n            return this;\n        }\n        /**\n         * 上传失败后的重传尝试次数\n         * @param retry 默认0次，不尝试次重传\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"retry\",\n        value: function retry(_retry) {\n            this._retry = _retry;\n            return this;\n        }\n        /**\n         * 设置分片大小\n         * @param size 分块大小,单位字节,默认4*1024*1024字节(4mb)\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"size\",\n        value: function size(_size) {\n            this._size = Math.min(Math.max(_size, 1), UploaderBuilder.MAX_CHUNK_SIZE);\n            return this;\n        }\n        /**\n         * 选择文件后,是否自动上传\n         * @param auto 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"auto\",\n        value: function auto(_auto) {\n            this._auto = _auto;\n            return this;\n        }\n        /**\n         * 是否支持多文件选择\n         * @param multiple 默认true\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"multiple\",\n        value: function multiple(_multiple) {\n            this._multiple = _multiple;\n            return this;\n        }\n        /**\n         * 接受上传的文件类型\n         * @param accept 数组形式例如:['.png','video/*']\n         *\n         * 详细配置见http://www.w3schools.com/tags/att_input_accept.asp\n         *\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"accept\",\n        value: function accept(_accept) {\n            this._accept = _accept;\n            return this;\n        }\n        /**\n         * 设置上传按钮\n         * @param button 上传按钮ID\n         * @param eventName 上传按钮的监听事件名称，默认为 \"click\" 。\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"button\",\n        value: function button(_button) {\n            var eventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"click\";\n\n            this._button = _button;\n            this._buttonEventName = eventName;\n            return this;\n        }\n        /**\n         * 图片质量压缩,只在上传的文件是图片的时候有效\n         * @param compress 0-1,默认1,不压缩\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"compress\",\n        value: function compress(_compress) {\n            this._compress = Math.max(Math.min(_compress, 1), 0);\n            return this;\n        }\n        /**\n         * 图片缩放\n         * @returns {UploaderBuilder}\n         * @param scale\n         */\n\n    }, {\n        key: \"scale\",\n        value: function scale(_scale) {\n            this._scale = _scale;\n            return this;\n        }\n        /**\n         * 设置 saveKey\n         * @param saveKey\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"saveKey\",\n        value: function saveKey(_saveKey) {\n            this._saveKey = _saveKey;\n            return this;\n        }\n        /**\n         * 获取Token的地址\n         * @param tokenUrl\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenUrl\",\n        value: function tokenUrl(_tokenUrl) {\n            this._tokenFunc = function (uploader, task) {\n                return uploader.requestTaskToken(task, _tokenUrl);\n            };\n            return this;\n        }\n        /**\n         * 获取Token的函数\n         * @param tokenFunc\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenFunc\",\n        value: function tokenFunc(_tokenFunc) {\n            this._tokenFunc = function (uploader, task) {\n                return new Promise(function (resolve) {\n                    _tokenFunc(resolve, task);\n                });\n            };\n            return this;\n        }\n        /**\n         * 上传生命周期钩子\n         * @param listener\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"listener\",\n        value: function listener(_listener) {\n            this._listener = _listener;\n            return this;\n        }\n        /**\n         * 是否分享token,如果为false每上传一个文件都需要请求一次Token。\n         * @param tokenShare\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"tokenShare\",\n        value: function tokenShare(_tokenShare) {\n            this._tokenShare = _tokenShare;\n            return this;\n        }\n        /**\n         * 是否分块上传\n         * @param chunk 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"chunk\",\n        value: function chunk(_chunk) {\n            this._chunk = _chunk;\n            return this;\n        }\n        /**\n         * 是否开启debug模式\n         * @param debug 默认false\n         * @returns {UploaderBuilder}\n         */\n\n    }, {\n        key: \"debug\",\n        value: function debug(_debug) {\n            this._isDebug = _debug;\n            return this;\n        }\n    }, {\n        key: \"build\",\n        value: function build() {\n            return new _Uploader2.default(this);\n        }\n    }, {\n        key: \"getRetry\",\n        get: function get() {\n            return this._retry;\n        }\n    }, {\n        key: \"getSize\",\n        get: function get() {\n            return this._size;\n        }\n    }, {\n        key: \"getAuto\",\n        get: function get() {\n            return this._auto;\n        }\n    }, {\n        key: \"getMultiple\",\n        get: function get() {\n            return this._multiple;\n        }\n    }, {\n        key: \"getAccept\",\n        get: function get() {\n            return this._accept;\n        }\n    }, {\n        key: \"getButton\",\n        get: function get() {\n            return this._button;\n        }\n    }, {\n        key: \"getButtonEventName\",\n        get: function get() {\n            return this._buttonEventName;\n        }\n    }, {\n        key: \"getCompress\",\n        get: function get() {\n            return this._compress;\n        }\n    }, {\n        key: \"getScale\",\n        get: function get() {\n            return this._scale;\n        }\n    }, {\n        key: \"getListener\",\n        get: function get() {\n            return this._listener;\n        }\n    }, {\n        key: \"getSaveKey\",\n        get: function get() {\n            return this._saveKey;\n        }\n    }, {\n        key: \"getTokenFunc\",\n        get: function get() {\n            return this._tokenFunc;\n        }\n    }, {\n        key: \"getTokenShare\",\n        get: function get() {\n            return this._tokenShare;\n        }\n    }, {\n        key: \"getChunk\",\n        get: function get() {\n            return this._chunk;\n        }\n    }, {\n        key: \"getIsDebug\",\n        get: function get() {\n            return this._isDebug;\n        }\n    }, {\n        key: \"getInterceptors\",\n        get: function get() {\n            return this._interceptors;\n        }\n    }, {\n        key: \"getDomain\",\n        get: function get() {\n            var domain = this._domain;\n            if (!domain) {\n                domain = UploaderBuilder.UPLOAD_DOMAIN;\n            }\n            if (typeof domain != \"string\") {\n                var scheme = this._scheme;\n                if (typeof scheme != \"string\") {\n                    var protocol = window.location.protocol;\n                    scheme = protocol.substring(0, protocol.length - 1);\n                }\n                domain = domain[scheme];\n            }\n            return domain.endsWith('/') ? domain.substring(0, domain.length - 1) : domain;\n        }\n    }]);\n\n    return UploaderBuilder;\n}();\n\nUploaderBuilder.MAX_CHUNK_SIZE = 4 * 1024 * 1024; //分片最大值\nUploaderBuilder.BLOCK_SIZE = UploaderBuilder.MAX_CHUNK_SIZE; //分块大小，只有大于这个数才需要分块\nUploaderBuilder.UPLOAD_DOMAIN = { http: 'http://upload.qiniu.com', https: 'https://up.qbox.me' };\nexports.default = UploaderBuilder;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 上传任务\n */\nvar BaseTask = function () {\n    function BaseTask(file) {\n        _classCallCheck(this, BaseTask);\n\n        this._retry = 0; //已重试次数\n        this._progress = 0; //任务进度,最大100\n        this._isSuccess = false; //是否上传成功\n        this._isFinish = false; //是否结束\n        this._file = file;\n        this._createDate = new Date();\n    }\n\n    _createClass(BaseTask, [{\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        },\n        set: function set(file) {\n            this._file = file;\n        }\n    }, {\n        key: \"retry\",\n        get: function get() {\n            return this._retry;\n        },\n        set: function set(value) {\n            this._retry = value;\n        }\n    }, {\n        key: \"createDate\",\n        get: function get() {\n            return this._createDate;\n        },\n        set: function set(value) {\n            this._createDate = value;\n        }\n    }, {\n        key: \"startDate\",\n        get: function get() {\n            return this._startDate;\n        },\n        set: function set(value) {\n            this._startDate = value;\n        }\n    }, {\n        key: \"endDate\",\n        get: function get() {\n            return this._endDate;\n        },\n        set: function set(value) {\n            this._endDate = value;\n        }\n    }, {\n        key: \"isSuccess\",\n        get: function get() {\n            return this._isSuccess;\n        },\n        set: function set(value) {\n            this._isSuccess = value;\n        }\n    }, {\n        key: \"progress\",\n        get: function get() {\n            return this._progress;\n        },\n        set: function set(value) {\n            this._progress = Math.min(Math.max(0, value), 100);\n        }\n    }, {\n        key: \"result\",\n        get: function get() {\n            return this._result;\n        },\n        set: function set(value) {\n            this._result = value;\n        }\n    }, {\n        key: \"error\",\n        get: function get() {\n            return this._error;\n        },\n        set: function set(value) {\n            this._error = value;\n        }\n    }, {\n        key: \"key\",\n        get: function get() {\n            return this._key;\n        },\n        set: function set(value) {\n            this._key = value;\n        }\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }]);\n\n    return BaseTask;\n}();\n\nexports.default = BaseTask;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UploaderBuilder = exports.Uploader = undefined;\n\nvar _Uploader = __webpack_require__(1);\n\nvar _Uploader2 = _interopRequireDefault(_Uploader);\n\nvar _UploaderBuilder = __webpack_require__(2);\n\nvar _UploaderBuilder2 = _interopRequireDefault(_UploaderBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Uploader = _Uploader2.default;\nexports.UploaderBuilder = _UploaderBuilder2.default;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadListener = function () {\n    function SimpleUploadListener() {\n        _classCallCheck(this, SimpleUploadListener);\n    }\n\n    _createClass(SimpleUploadListener, [{\n        key: \"onReady\",\n        value: function onReady(taskQueue) {}\n    }, {\n        key: \"onStart\",\n        value: function onStart(taskQueue) {}\n    }, {\n        key: \"onTaskProgress\",\n        value: function onTaskProgress(task) {}\n    }, {\n        key: \"onTaskGetKey\",\n        value: function onTaskGetKey(task) {\n            return null;\n        }\n    }, {\n        key: \"onTaskFail\",\n        value: function onTaskFail(task) {}\n    }, {\n        key: \"onTaskSuccess\",\n        value: function onTaskSuccess(task) {}\n    }, {\n        key: \"onTaskRetry\",\n        value: function onTaskRetry(task) {}\n    }, {\n        key: \"onFinish\",\n        value: function onFinish(taskQueue) {}\n    }]);\n\n    return SimpleUploadListener;\n}();\n\nexports.default = SimpleUploadListener;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SimpleUploadInterceptor = function () {\n    function SimpleUploadInterceptor() {\n        _classCallCheck(this, SimpleUploadInterceptor);\n    }\n\n    _createClass(SimpleUploadInterceptor, [{\n        key: \"onIntercept\",\n        value: function onIntercept(task) {\n            return false;\n        }\n    }, {\n        key: \"onInterrupt\",\n        value: function onInterrupt(task) {\n            return false;\n        }\n    }]);\n\n    return SimpleUploadInterceptor;\n}();\n\nexports.default = SimpleUploadInterceptor;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 分块上传\n */\nvar ChunkUploadPattern = function () {\n    function ChunkUploadPattern(uploader) {\n        _classCallCheck(this, ChunkUploadPattern);\n\n        this.uploader = uploader;\n    }\n\n    _createClass(ChunkUploadPattern, [{\n        key: \"init\",\n        value: function init(uploader) {\n            this.uploader = uploader;\n        }\n    }, {\n        key: \"upload\",\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadBlock(token);\n            });\n        }\n    }, {\n        key: \"uploadBlock\",\n        value: function uploadBlock(token) {\n            var _this2 = this;\n\n            _Log2.default.d(\"\\u51C6\\u5907\\u5F00\\u59CB\\u4E0A\\u4F20\\u5757\");\n            var chain = Promise.resolve();\n            _Log2.default.d(\"\\u5171\" + this.task.blocks.length + \"\\u5757\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            _Log2.default.d(\"\\u5171\" + this.task.totalChunkCount + \"\\u5206\\u7247\\u7B49\\u5F85\\u4E0A\\u4F20\");\n            this.task.blocks.forEach(function (block, blockIndex) {\n                block.chunks.forEach(function (chunk, chunkIndex) {\n                    chain = chain.then(function () {\n                        _Log2.default.d(\"\\u5F00\\u59CB\\u4E0A\\u4F20\\u7B2C\" + (blockIndex + 1) + \"\\u5757,\\u7B2C\" + (chunkIndex + 1) + \"\\u7247\");\n                        return _this2.uploadChunk(chunk, token);\n                    });\n                });\n            });\n            chain.then(function () {\n                return _this2.concatChunks(token);\n            }).then(function () {\n                //所有任务都结束了\n                if (_this2.uploader.isTaskQueueFinish()) {\n                    _Log2.default.d(\"\\u4E0A\\u4F20\\u4EFB\\u52A1\\u961F\\u5217\\u5DF2\\u7ED3\\u675F\");\n                    //更改任务执行中标志\n                    _this2.uploader.tasking = false;\n                    //监听器调用\n                    _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                }\n            }).catch(function (response) {\n                _Log2.default.w(_this2.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25\");\n                _this2.task.error = response;\n                _this2.task.isSuccess = false;\n                _this2.task.isFinish = true;\n                _this2.task.endDate = new Date();\n                _this2.uploader.listener.onTaskFail(_this2.task);\n            });\n        }\n    }, {\n        key: \"uploadChunk\",\n        value: function uploadChunk(chunk, token) {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                var isFirstChunkInBlock = chunk.block.chunks.indexOf(chunk) == 0;\n                var chunkIndex = chunk.block.chunks.indexOf(chunk);\n                //前一个chunk,如果存在的话\n                var prevChunk = isFirstChunkInBlock ? null : chunk.block.chunks[chunkIndex - 1];\n                var url = isFirstChunkInBlock ? _this3.getUploadBlockUrl(chunk.block.data.size) : _this3.getUploadChunkUrl(chunk.start, prevChunk ? prevChunk.ctx : null, prevChunk ? prevChunk.host : null);\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'application/octet-stream'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                //分片上传中\n                xhr.upload.onprogress = function (e) {\n                    if (e.lengthComputable) {\n                        var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + e.loaded) / _this3.task.file.size * 100);\n                        if (_this3.task.progress < progress) {\n                            _this3.task.progress = progress;\n                            _this3.uploader.listener.onTaskProgress(_this3.task);\n                        }\n                    }\n                };\n                //分片上传完成\n                xhr.upload.onload = function () {\n                    var progress = Math.round((_this3.task.finishedBlocksSize + chunk.start + chunk.data.size) / _this3.task.file.size * 100);\n                    if (_this3.task.progress < progress) {\n                        _this3.task.progress = progress;\n                        _this3.uploader.listener.onTaskProgress(_this3.task);\n                    }\n                };\n                //响应返回\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            chunk.isFinish = true;\n                            chunk.processing = false;\n                            chunk.ctx = result.ctx;\n                            chunk.host = result.host;\n                            var _chunkIndex = chunk.block.chunks.indexOf(chunk);\n                            var hasNextChunkInThisBlock = _chunkIndex != chunk.block.chunks.length - 1;\n                            if (!hasNextChunkInThisBlock) {\n                                chunk.block.isFinish = true;\n                                chunk.block.processing = false;\n                            }\n                            resolve();\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(chunk.data);\n            });\n        }\n    }, {\n        key: \"concatChunks\",\n        value: function concatChunks(token) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                var encodedKey = _this4.task.key ? btoa(_this4.task.key) : null;\n                // 安全字符串 参考：https://developer.qiniu.com/kodo/api/mkfile\n                if (encodedKey) {\n                    encodedKey = encodedKey.replace(/\\+/g, '-');\n                    encodedKey = encodedKey.replace(/\\//g, '_');\n                }\n                var url = _this4.getMakeFileUrl(_this4.task.file.size, encodedKey);\n                //构建所有数据块最后一个数据片上传后得到的<ctx>的组合成的列表字符串\n                var ctxListString = '';\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = _this4.task.blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var block = _step.value;\n\n                        var lastChunk = block.chunks[block.chunks.length - 1];\n                        ctxListString += lastChunk.ctx + ',';\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n\n                if (ctxListString.endsWith(',')) {\n                    ctxListString = ctxListString.substring(0, ctxListString.length - 1);\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', url += (/\\?/.test(url) ? \"&\" : \"?\") + new Date().getTime(), true);\n                xhr.setRequestHeader('Content-Type', 'text/plain'); //设置contentType\n                xhr.setRequestHeader('Authorization', \"UpToken \" + token); //添加token验证头\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState == XMLHttpRequest.DONE) {\n                        _this4.task.isFinish = true;\n                        if (xhr.status == 200 && xhr.responseText != '') {\n                            var result = JSON.parse(xhr.responseText);\n                            _this4.task.isSuccess = true;\n                            _this4.task.result = result;\n                            _this4.task.endDate = new Date();\n                            _this4.uploader.listener.onTaskSuccess(_this4.task);\n                            resolve();\n                        } else if (_this4.retryTask(_this4.task)) {\n                            _Log2.default.w(_this4.task.file.name + \"\\u5206\\u5757\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20\");\n                            _this4.uploader.listener.onTaskRetry(_this4.task);\n                        } else {\n                            reject(xhr.response);\n                        }\n                    }\n                };\n                xhr.send(ctxListString);\n            });\n        }\n        /**\n         * 获取块上传的url\n         * @param blockSize\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getUploadBlockUrl\",\n        value: function getUploadBlockUrl(blockSize) {\n            return this.uploader.domain + \"/mkblk/\" + blockSize;\n        }\n        /**\n         * 获取片上传的url\n         * @param start 片的在块中的起始位置\n         * @param ctx 前一次上传返回的块级上传控制信息。\n         * @param host 指定host\n         */\n\n    }, {\n        key: \"getUploadChunkUrl\",\n        value: function getUploadChunkUrl(start, ctx, host) {\n            return (host ? host : this.uploader.domain) + \"/bput/\" + ctx + \"/\" + start + \"/\";\n        }\n        /**\n         * 获取合并块为文件的url\n         * @param fileSize 文件大小\n         * @param encodedKey base64UrlEncode后的资源名称,若未指定，则使用saveKey；若未指定saveKey，则使用资源内容的SHA1值作为资源名。\n         * @returns {string}\n         */\n\n    }, {\n        key: \"getMakeFileUrl\",\n        value: function getMakeFileUrl(fileSize, encodedKey) {\n            if (encodedKey) {\n                return this.uploader.domain + \"/mkfile/\" + fileSize + \"/key/\" + encodedKey;\n            } else {\n                return this.uploader.domain + \"/mkfile/\" + fileSize;\n            }\n        }\n    }, {\n        key: \"retryTask\",\n        value: function retryTask(task) {\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + \"\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650\" + this.uploader.retry + \",\\u505C\\u6B62\\u91CD\\u4F20\");\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + \"\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570\" + task.retry);\n            // this.upload(task);\n            //todo\n            return true;\n        }\n    }]);\n\n    return ChunkUploadPattern;\n}();\n\nexports.default = ChunkUploadPattern;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Log = __webpack_require__(0);\n\nvar _Log2 = _interopRequireDefault(_Log);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * 直接上传\n */\nvar DirectUploadPattern = function () {\n    function DirectUploadPattern(uploader) {\n        _classCallCheck(this, DirectUploadPattern);\n\n        this.uploader = uploader;\n    }\n    /**\n     * 实现接口的上传方法\n     * @param task\n     */\n\n\n    _createClass(DirectUploadPattern, [{\n        key: 'upload',\n        value: function upload(task) {\n            var _this = this;\n\n            this.task = task;\n            this.uploader.getToken(task).then(function (token) {\n                task.startDate = new Date();\n                _this.uploadFile(token);\n            });\n        }\n        /**\n         * 创建表单\n         * @param token\n         * @returns {FormData}\n         */\n\n    }, {\n        key: 'createFormData',\n        value: function createFormData(token) {\n            var task = this.task;\n            var formData = new FormData();\n            //key存在，添加到formData中，若不设置，七牛服务器会自动生成hash key\n            if (task.key !== null && task.key !== undefined) {\n                formData.append('key', task.key);\n            }\n            formData.append('token', token);\n            formData.append('file', task.file);\n            _Log2.default.d('\\u521B\\u5EFAformData\\u5BF9\\u8C61');\n            return formData;\n        }\n        /**\n         * 上传文件\n         * @param token\n         */\n\n    }, {\n        key: 'uploadFile',\n        value: function uploadFile(token) {\n            var _this2 = this;\n\n            var task = this.task;\n            var xhr = new XMLHttpRequest();\n            //上传中\n            xhr.upload.onprogress = function (e) {\n                if (e.lengthComputable) {\n                    var progress = Math.round(e.loaded * 100 / e.total);\n                    if (task.progress < progress) {\n                        task.progress = progress;\n                        _this2.uploader.listener.onTaskProgress(task);\n                    }\n                }\n            };\n            //上传完成\n            xhr.upload.onload = function () {\n                if (task.progress < 100) {\n                    task.progress = 100;\n                    _this2.uploader.listener.onTaskProgress(task);\n                }\n            };\n            var url = this.uploader.domain;\n            //避免浏览器缓存http请求\n            url += (/\\?/.test(this.uploader.domain) ? \"&\" : \"?\") + new Date().getTime();\n            xhr.open('POST', url, true);\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == XMLHttpRequest.DONE) {\n                    if (xhr.status == 200 && xhr.responseText != '') {\n                        task.result = JSON.parse(xhr.responseText);\n                        task.isSuccess = true;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskSuccess(task);\n                    } else if (_this2.retryTask(task)) {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25,\\u51C6\\u5907\\u5F00\\u59CB\\u91CD\\u4F20');\n                        _this2.uploader.listener.onTaskRetry(task);\n                    } else {\n                        _Log2.default.w(task.file.name + '\\u4E0A\\u4F20\\u5931\\u8D25');\n                        task.error = xhr.response;\n                        task.isSuccess = false;\n                        task.isFinish = true;\n                        task.endDate = new Date();\n                        _this2.uploader.listener.onTaskFail(task);\n                    }\n                    //所有任务都结束了\n                    if (_this2.uploader.isTaskQueueFinish()) {\n                        _Log2.default.d('上传队列结束');\n                        //更改任务执行中标志\n                        _this2.uploader.tasking = false;\n                        //onFinish callback\n                        _this2.uploader.listener.onFinish(_this2.uploader.taskQueue);\n                    }\n                }\n            };\n            var formData = this.createFormData(token);\n            xhr.send(formData);\n            _Log2.default.d('发送ajax post 请求');\n        }\n        /**\n         * 重传\n         * @param task\n         * @returns {boolean}\n         */\n\n    }, {\n        key: 'retryTask',\n        value: function retryTask(task) {\n            _Log2.default.d(\"开始尝试重传\");\n            //达到重试次数\n            if (task.retry >= this.uploader.retry) {\n                _Log2.default.w(task.file.name + '\\u8FBE\\u5230\\u91CD\\u4F20\\u6B21\\u6570\\u4E0A\\u9650' + this.uploader.retry + ',\\u505C\\u6B62\\u91CD\\u4F20');\n                return false;\n            }\n            task.retry++;\n            _Log2.default.w(task.file.name + '\\u5F00\\u59CB\\u91CD\\u4F20,\\u5F53\\u524D\\u91CD\\u4F20\\u6B21\\u6570' + task.retry);\n            this.upload(task);\n            return true;\n        }\n    }]);\n\n    return DirectUploadPattern;\n}();\n\nexports.default = DirectUploadPattern;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chunk = exports.Block = exports.ChunkTask = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 分块任务\n */\nvar ChunkTask = function (_BaseTask) {\n    _inherits(ChunkTask, _BaseTask);\n\n    /**\n     * 构造函数\n     * @param file\n     * @param blockSize 块大小\n     * @param chunkSize 片大小\n     */\n    function ChunkTask(file, blockSize, chunkSize) {\n        _classCallCheck(this, ChunkTask);\n\n        //分块\n        var _this = _possibleConstructorReturn(this, (ChunkTask.__proto__ || Object.getPrototypeOf(ChunkTask)).call(this, file));\n\n        _this._blocks = [];\n        _this._blockSize = 0;\n        _this._chunkSize = 0;\n        _this._blockSize = blockSize;\n        _this._chunkSize = chunkSize;\n        _this.spliceFile2Block();\n        return _this;\n    }\n    /**\n     * 将文件分块\n     */\n\n\n    _createClass(ChunkTask, [{\n        key: \"spliceFile2Block\",\n        value: function spliceFile2Block() {\n            this._blocks = [];\n            var fileSize = this._file.size;\n            var file = this._file;\n            //总块数\n            var blockCount = Math.ceil(fileSize / this._blockSize);\n            for (var i = 0; i < blockCount; i++) {\n                var start = i * this._blockSize; //起始位置\n                var end = start + this._blockSize; //结束位置\n                //构造一个块实例\n                var block = new Block(start, end, file.slice(start, end), this._chunkSize, file);\n                //添加到数组中\n                this._blocks.push(block);\n            }\n        }\n        /**\n         * 获取所有的block\n         * @returns {Block[]}\n         */\n\n    }, {\n        key: \"blocks\",\n        get: function get() {\n            return this._blocks;\n        }\n        /**\n         * 获取正在处理的block\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingBlock\",\n        get: function get() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this._blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var block = _step.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    return block;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Block\");\n        }\n    }, {\n        key: \"finishedBlocksSize\",\n        get: function get() {\n            var size = 0;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this._blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var block = _step2.value;\n\n                    size += block.isFinish ? block.data.size : 0;\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return size;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            var array = [];\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this._blocks[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var block = _step3.value;\n                    var _iteratorNormalCompletion4 = true;\n                    var _didIteratorError4 = false;\n                    var _iteratorError4 = undefined;\n\n                    try {\n                        for (var _iterator4 = block.chunks[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                            var chunk = _step4.value;\n\n                            array.push(chunk);\n                        }\n                    } catch (err) {\n                        _didIteratorError4 = true;\n                        _iteratorError4 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                                _iterator4.return();\n                            }\n                        } finally {\n                            if (_didIteratorError4) {\n                                throw _iteratorError4;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            return array;\n        }\n        /**\n         * 获取正在处理的chunk\n         * @returns {Block}\n         */\n\n    }, {\n        key: \"processingChunk\",\n        get: function get() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this._blocks[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var block = _step5.value;\n\n                    if (!block.processing) {\n                        continue;\n                    }\n                    var _iteratorNormalCompletion6 = true;\n                    var _didIteratorError6 = false;\n                    var _iteratorError6 = undefined;\n\n                    try {\n                        for (var _iterator6 = block.chunks[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                            var chunk = _step6.value;\n\n                            if (!chunk.processing) {\n                                continue;\n                            }\n                            return chunk;\n                        }\n                    } catch (err) {\n                        _didIteratorError6 = true;\n                        _iteratorError6 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                _iterator6.return();\n                            }\n                        } finally {\n                            if (_didIteratorError6) {\n                                throw _iteratorError6;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            throw Error(\"找不到正在处理的Chunk\");\n        }\n        /**\n         * 总共分片数量(所有分块的分片数量总和)\n         * @returns {number}\n         */\n\n    }, {\n        key: \"totalChunkCount\",\n        get: function get() {\n            var count = 0;\n            var _iteratorNormalCompletion7 = true;\n            var _didIteratorError7 = false;\n            var _iteratorError7 = undefined;\n\n            try {\n                for (var _iterator7 = this._blocks[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                    var block = _step7.value;\n\n                    count += block.chunks.length;\n                }\n            } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                        _iterator7.return();\n                    }\n                } finally {\n                    if (_didIteratorError7) {\n                        throw _iteratorError7;\n                    }\n                }\n            }\n\n            return count;\n        }\n    }]);\n\n    return ChunkTask;\n}(_BaseTask3.default);\n/**\n * 分块，分块大小七牛固定是4M\n */\n\n\nvar Block = function () {\n    /**\n     *\n     * @param start 起始位置\n     * @param end 结束位置\n     * @param data 块数据\n     * @param chunkSize 分片数据的最大大小\n     * @param file 分块所属文件\n     */\n    function Block(start, end, data, chunkSize, file) {\n        _classCallCheck(this, Block);\n\n        this._chunks = [];\n        this._isFinish = false; //是否上传完成\n        this._processing = false; //是否正在上传\n        this._data = data;\n        this._start = start;\n        this._end = end;\n        this._file = file;\n        this.spliceBlock2Chunk(chunkSize);\n    }\n    /**\n     * 将块分片\n     */\n\n\n    _createClass(Block, [{\n        key: \"spliceBlock2Chunk\",\n        value: function spliceBlock2Chunk(chunkSize) {\n            var blockSize = this._data.size;\n            var data = this._data;\n            //总片数\n            var chunkCount = Math.ceil(blockSize / chunkSize);\n            for (var i = 0; i < chunkCount; i++) {\n                var start = i * chunkSize; //起始位置\n                var end = start + chunkSize; //结束位置\n                //构造一个片实例\n                var chunk = new Chunk(start, end, data.slice(start, end), this);\n                //添加到数组中\n                this._chunks.push(chunk);\n            }\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 分块所属的文件\n         * @returns {File}\n         */\n\n    }, {\n        key: \"file\",\n        get: function get() {\n            return this._file;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n        /**\n         * 返回分块数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n    }, {\n        key: \"chunks\",\n        get: function get() {\n            return this._chunks;\n        }\n    }]);\n\n    return Block;\n}();\n/**\n * 分片，分片大小可以自定义，至少1字节\n */\n\n\nvar Chunk = function () {\n    /**\n     *\n     * @param start 字节起始位置\n     * @param end 字节结束位置\n     * @param data 分片数据\n     * @param block 分块对象\n     */\n    function Chunk(start, end, data, block) {\n        _classCallCheck(this, Chunk);\n\n        this._processing = false; //是否正在上传\n        this._isFinish = false; //是否上传完成\n        this._start = start;\n        this._end = end;\n        this._data = data;\n        this._block = block;\n    }\n    /**\n     * 返回chunk所属的Block对象\n     * @returns {Block}\n     */\n\n\n    _createClass(Chunk, [{\n        key: \"block\",\n        get: function get() {\n            return this._block;\n        }\n        /**\n         * 返回字节起始位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"start\",\n        get: function get() {\n            return this._start;\n        }\n        /**\n         * 返回字节结束位置\n         * @returns {number}\n         */\n\n    }, {\n        key: \"end\",\n        get: function get() {\n            return this._end;\n        }\n        /**\n         * 返回分片数据\n         * @returns {Blob}\n         */\n\n    }, {\n        key: \"data\",\n        get: function get() {\n            return this._data;\n        }\n        /**\n         * 是否已经结束\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"isFinish\",\n        get: function get() {\n            return this._isFinish;\n        },\n        set: function set(value) {\n            this._isFinish = value;\n        }\n    }, {\n        key: \"host\",\n        get: function get() {\n            return this._host;\n        },\n        set: function set(value) {\n            this._host = value;\n        }\n        /**\n         * 是否上传中\n         * @returns {boolean}\n         */\n\n    }, {\n        key: \"processing\",\n        get: function get() {\n            return this._processing;\n        },\n        set: function set(value) {\n            this._processing = value;\n        }\n        /**\n         * 返回上传控制信息(七牛服务器返回前一次上传返回的分片上传控制信息,用于下一次上传,第一个chunk此值为空)\n         * @returns {string}\n         */\n\n    }, {\n        key: \"ctx\",\n        get: function get() {\n            return this._ctx;\n        },\n        set: function set(value) {\n            this._ctx = value;\n        }\n    }]);\n\n    return Chunk;\n}();\n\nexports.ChunkTask = ChunkTask;\nexports.Block = Block;\nexports.Chunk = Chunk;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseTask2 = __webpack_require__(3);\n\nvar _BaseTask3 = _interopRequireDefault(_BaseTask2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * 直传任务\n */\nvar DirectTask = function (_BaseTask) {\n  _inherits(DirectTask, _BaseTask);\n\n  function DirectTask() {\n    _classCallCheck(this, DirectTask);\n\n    return _possibleConstructorReturn(this, (DirectTask.__proto__ || Object.getPrototypeOf(DirectTask)).apply(this, arguments));\n  }\n\n  return DirectTask;\n}(_BaseTask3.default);\n\nexports.default = DirectTask;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UUID = function () {\n    function UUID() {\n        _classCallCheck(this, UUID);\n    }\n\n    _createClass(UUID, null, [{\n        key: 'uuid',\n        value: function uuid() {\n            var d = new Date().getTime();\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n            });\n        }\n    }]);\n\n    return UUID;\n}();\n\nexports.default = UUID;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Object.assign polyfill\n */\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n/**\n * canvas.toBlob polyfill\n */\nif (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function value(callback, type, quality) {\n            var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n                len = binStr.length,\n                arr = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = binStr.charCodeAt(i);\n            }\n            callback(new Blob([arr], { type: type || 'image/png' }));\n        }\n    });\n}\n/**\n * endsWith polyfill\n */\nif (!String.prototype.endsWith) {\n    var _toString = {}.toString;\n    var endsWith = function endsWith(search) {\n        if (this == null) {\n            throw TypeError();\n        }\n        var string = String(this);\n        if (search && _toString.call(search) == '[object RegExp]') {\n            throw TypeError();\n        }\n        var stringLength = string.length;\n        var searchString = String(search);\n        var searchLength = searchString.length;\n        var pos = stringLength;\n        if (arguments.length > 1) {\n            var position = arguments[1];\n            if (position !== undefined) {\n                // `ToInteger`\n                pos = position ? Number(position) : 0;\n                if (pos != pos) {\n                    pos = 0;\n                }\n            }\n        }\n        var end = Math.min(Math.max(pos, 0), stringLength);\n        var start = end - searchLength;\n        if (start < 0) {\n            return false;\n        }\n        var index = -1;\n        while (++index < searchLength) {\n            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    if (Object.defineProperty) {\n        Object.defineProperty(String.prototype, 'endsWith', {\n            'value': endsWith,\n            'configurable': true,\n            'writable': true\n        });\n    } else {\n        String.prototype.endsWith = endsWith;\n    }\n}\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=qiniu4js.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qiniu4js/qiniu4js.js\n// module id = 207\n// module chunks = 7 8 9","<template>\r\n<div class=\"myInfo\">\n  <img :src=\"saveInfos.avatar_url\" @click=\"pushImg\"/>\r\n  <form>\r\n    <div class=\"myInfoFormList\">\n      <label class=\"fontSizeOne textColorTwo\">邮箱</label>\r\n      <span class=\"fontSizeTwo myInfoEmail\">{{ backMyInfo.mail }}</span>\r\n      <button v-if=\"backMyInfo.mail_checked\" class=\"fontSizeThere emailBtn\">已验证</button>\r\n      <button v-else class=\"fontSizeThere emailBtn\">验证</button>\n    </div>\r\n    <div class=\"myInfoFormList\">\n      <label class=\"fontSizeOne textColorOne\">昵称</label>\r\n      <input type=\"text\" v-model.lazy=\"this.saveInfos.name\" class=\"fontSizeTwo myInfoName\" />\n    </div>\r\n    <div class=\"myInfoFormList\">\n      <label class=\"fontSizeOne textColorOne\">性别</label>\r\n      <input @click=\"sexF(1)\" class=\"myInfoSexF\" type=\"radio\" id=\"one\" value=\"男\" v-bind:checked=\"isChecked1\">\r\n      <label class=\"fontSizeTwo myInfoSex\" for=\"one\">男</label>\r\n      <input @click=\"sexF(2)\" class=\"myInfoSexF\" type=\"radio\" id=\"Two\" value=\"女\" v-bind:checked=\"isChecked2\">\r\n      <label class=\"fontSizeTwo myInfoSex\" for=\"Two\">女</label>\r\n      <input @click=\"sexF(3)\" class=\"myInfoSexF\" type=\"radio\" id=\"There\" value=\"不想透露\" v-bind:checked=\"isChecked3\">\r\n      <label class=\"fontSizeTwo\" for=\"There\">不想透露</label>\n    </div>\r\n    <div class=\"myInfoFormList\">\r\n      <label class=\"fontSizeOne textColorOne\">生日</label>\r\n      <div class=\"datas\" @click=\"handleClick\">\r\n        <span>{{ year }}年</span><span>{{ mouth }}月</span><span>{{ day }}日</span>\r\n      </div>\r\n      <DatePicker\r\n        :open=\"open\"\r\n        :value=\"value3\"\r\n        confirm\r\n        type=\"date\"\r\n        placement=\"top-start\"\r\n        @on-change=\"handleChange\"\r\n        @on-clear=\"handleClear\"\r\n        @on-ok=\"handleOk\">\r\n        <a href=\"javascript:void(0)\" @click=\"handleClick\" style=\"opacity: 0;\">\r\n            <template v-if=\"value3 === ''\">选择日期</template>\r\n            <template v-else>{{ value3 }}</template>\r\n        </a>\r\n      </DatePicker>\r\n    </div>\r\n  </form>\r\n  <button class=\"fontSizeTwo\" @click=\"saveInfo\">保存</button>\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { getSingleUser, changeUserInfo } from '../fetch/users'\r\nimport store from '../vuex/store'\r\nimport { UploaderBuilder, Uploader } from 'qiniu4js'\r\nimport { getQiniuToken } from '../fetch/qiniu'\r\n\r\n// qiniu4js uploader object\r\n  var urlkey='';\r\n  var issuccess= false;\r\n  var uploader = new UploaderBuilder()\r\n    .debug(false)//开启debug，默认false\r\n    .domain({http: \"http://upload.qiniu.com\", https: \"https://up.qbox.me\"})\r\n    .retry(2)//设置重传次数，默认0，不重传\r\n    .compress(0.5)//默认为1,范围0-1\r\n    .scale([200,0])  //第一个参数是宽度，第二个是高度,[200,0],限定高度，宽度等比缩放.[0,100]限定宽度,高度等比缩放.[200,100]固定长宽\r\n    .size(1024*1024)\r\n    .chunk(true)\r\n    .auto(true)\r\n    .multiple(false)\r\n    .accept(['.gif','.png','.jpg'])//过滤文件，默认无，详细配置见http://www.w3schools.com/tags/\r\n    .tokenShare(true)\r\n    .tokenFunc(function (setToken,task) {\r\n      getQiniuToken().then(res => {\r\n        setToken(res.uploadToken);\r\n      })\r\n    })\r\n    //任务拦截器\r\n    .interceptor({\r\n        //拦截任务,返回true，任务将会从任务队列中剔除，不会被上传\r\n      onIntercept: function (task) {\r\n        return task.file.size > 4 * 1024 * 1024;\r\n      },\r\n      //中断任务，返回true，任务队列将会在这里中断，不会执行上传操作。\r\n      onInterrupt: function (task) {\r\n        if (this.onIntercept(task)) {\r\n          this.$Message.warning('请上传小于4m的文件');\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }\r\n    }) \r\n    .listener({\r\n      onReady(tasks) {\r\n          //该回调函数在图片处理前执行,也就是说task.file中的图片都是没有处理过的\r\n        //选择上传文件确定后,该生命周期函数会被回调。\r\n        \r\n      },onStart(tasks){\r\n          //所有内部图片任务处理后执行\r\n        //开始上传\r\n        console.log('upload start')\r\n        \r\n      },onTaskGetKey(task){\r\n        \r\n      },onTaskProgress: function (task) {\r\n          //每一个任务的上传进度,通过`task.progress`获取\r\n        console.log(task.progress);\r\n        \r\n      },onTaskSuccess(task){\r\n        //一个任务上传成功后回调\r\n        console.log(task.result.key);//文件的key\r\n        urlkey=task.result.key;\r\n        issuccess = true;\r\n        document.getElementsByTagName(\"img\")[0].src = \"http://7xlx4u.com1.z0.glb.clouddn.com/\"+urlkey;\r\n      },onTaskFail(task) {\r\n        //一个任务在经历重传后依然失败后回调此函数\r\n        \r\n      },onTaskRetry(task) {\r\n        //开始重传\r\n        \r\n      },onFinish(tasks){\r\n          //所有任务结束后回调，注意，结束不等于都成功，该函数会在所有HTTP上传请求响应后回调(包括重传请求)。\r\n              \r\n      }\r\n    }).build();\r\n\r\nexport default {\r\n  name: 'myInfo',\r\n  data () {\r\n    return {\r\n      backMyInfo: {},\r\n      open: false,\r\n      value3: '',\r\n      year: '',\r\n      mouth: '',\r\n      day: '',\r\n      saveInfos: {\r\n        name: '',\r\n        avatar_url: '',\r\n        sex: '',\r\n        birthday: ''\r\n      },\r\n      isChecked1: false,\r\n      isChecked2: false,\r\n      isChecked3: false,\r\n    }\r\n  },\r\n  mounted () {\r\n    let id = JSON.parse(localStorage.getItem(\"user\")).id || store.state.userInfo.id\r\n    getSingleUser(id).then(response => {\r\n      this.backMyInfo = response\r\n      this.saveInfos.name = response.name\r\n      this.saveInfos.avatar_url = response.avatar_url\r\n      this.saveInfos.sex = response.sex\r\n      this.saveInfos.birthday = response.birthday\r\n      this.year = response.birthday.slice(0, 4)\r\n      this.mouth = response.birthday.slice(5, 7)\r\n      this.day = response.birthday.slice(8, 10)\r\n      this.setSexF(response.sex)\r\n    }).catch(error => {\r\n      this.$Message.error(error)\r\n    })\r\n  },\r\n  methods: {\r\n    sexF: function (n) {\r\n      this.isChecked1 = false\r\n      this.isChecked2 = false\r\n      this.isChecked3 = false\r\n      switch (n){\r\n        case 1:\r\n          this.saveInfos.sex = \"man\"\r\n          this.isChecked1 = true\r\n          break;\r\n        case 2:\r\n          this.saveInfos.sex = \"woman\"\r\n          this.isChecked2 = true\r\n          break;\r\n        case 3:\r\n          this.saveInfos.sex = \"secret\"\r\n          this.isChecked3 = true\r\n          break;\r\n        default:\r\n          this.saveInfos.sex = \"man\"\r\n          this.isChecked1 = true\r\n          break;\r\n      }\r\n    },\r\n    setSexF (isSex) {\r\n      this.isChecked1 = false\r\n      this.isChecked2 = false\r\n      this.isChecked3 = false\r\n      switch (isSex){\r\n        case \"man\":\r\n          this.isChecked1 = true\r\n          break;\r\n        case \"woman\":\r\n          this.isChecked2 = true\r\n          break;\r\n        case \"secret\":\r\n          this.isChecked3 = true\r\n          break;\r\n        default:\r\n          this.isChecked1 = true\r\n          break;\r\n      }\r\n    },\r\n    handleClick () {\r\n      this.open = !this.open;\r\n    },\r\n    handleChange (date) {\r\n      this.value3 = date;\r\n    },\r\n    handleClear () {\r\n      this.open = false;\r\n    },\r\n    handleOk () {\r\n      this.open = false;\r\n      this.year = this.value3.slice(0, 4)\r\n      this.mouth = this.value3.slice(5, 7)\r\n      this.day = this.value3.slice(8)\r\n      this.saveInfos.birthday = this.value3\r\n    },\r\n    saveInfo () {\r\n      let id = JSON.parse(localStorage.getItem(\"user\")).id || store.state.userInfo.id\r\n      if (issuccess) {\n        this.saveInfos.avatar_url = \"http://7xlx4u.com1.z0.glb.clouddn.com/\"+urlkey\n      }\r\n      console.log(this.saveInfos)\r\n      changeUserInfo(id, this.saveInfos).then(response => {\r\n        this.$Message.success(response.success)\r\n      }).catch(error => {\r\n        console.log(error)\r\n        this.$Message.error('保存失败'+ error)\r\n      })\r\n    },\r\n    pushImg (event) {\r\n      var self = this;\r\n      this.imgShow = false;\r\n      uploader.chooseFile();\r\n      event.stopPropagation();\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  button, input, select{\r\n    outline: none;\r\n  }\r\n  .myInfo{\r\n    img{\r\n      width: 70px;\r\n      height: 70px;\r\n      border-radius: 100%;\r\n      margin-top: 26px;\r\n      margin-bottom: 21.5px;\r\n    }\r\n    form{\r\n      .myInfoFormList{\r\n        width: 304px;\r\n        margin: 0 auto;\r\n        margin-bottom: 21px;\r\n        padding-left: 17.5px;\r\n        box-sizing: border-box;\r\n        text-align: left;\r\n        > div.datas{\r\n          width: 100%;\r\n          border: none;\r\n          margin-left: -16.5px;\r\n          > span{\r\n            font-size: 16px;\r\n            line-height: 22.5px;\r\n            height: 22.5px;\r\n            display: inline-block;\r\n            color: #212121;\r\n            border-bottom: 1px solid rgba(86,119,252,0.87);\r\n            padding: 0 16.5px;\r\n            margin-right: 15px;\r\n          }\r\n        }\r\n        .fontSizeOne{\r\n          display: block;\r\n        }\r\n        .myInfoEmail{\r\n          color: rgba(0,0,0,0.56);\r\n        }\r\n        > button.emailBtn{\r\n          width: 63px;\r\n          height: 25px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          background: #5677FC;\r\n          color: #FFFFFF;\r\n          float: right;\r\n        }\r\n        .myInfoName{\r\n          color: rgba(0,0,0,0.87);\r\n          border: none;\r\n        }\r\n        input.myInfoSexF{\r\n          width: 10px;\r\n          height: 10px;\r\n          box-sizing: border-box;\r\n          appearance: none;\r\n          position: relative;\r\n          border: 2px solid #9a9a9a;\r\n          border-radius: 100%;\r\n          &:checked{\r\n            border: 3.5px solid #6c89fc;\r\n            border-radius: 100%;\r\n          }\r\n        }\r\n        .myInfoSex{\r\n          display: inline-block;\r\n          margin-right: 40.5px;\r\n        }\r\n      }\r\n      div:nth-child(2){\r\n        border-bottom: 1px solid rgba(86,119,252,0.87);\r\n      }\r\n    }\r\n    > button {\r\n      width: 304px;\r\n      border: none;\r\n      background-color: #5677FC;\r\n      font-size: 16px;\r\n      line-height: 22.5px;\r\n      color: rgba(255,255,255,0.87);\r\n      padding: 11px 136px;\r\n      box-sizing: border-box;\r\n      border-radius: 4px;\r\n      box-shadow: 0 0 1px 0 rgba(0,0,0,0.12), 0 1px 1px 0 rgba(0,0,0,0.24);\r\n      margin-top: 44px;\r\n    }\r\n  }\r\n  .fontSizeOne, .fontSizeThere{\r\n    font-size: 12px;\r\n    line-height: 16.5px;\r\n  }\r\n  .fontSizeOne{\r\n    margin-bottom: 6px;\r\n  }\r\n  .fontSizeTwo{\r\n    font-size: 16px;\r\n    line-height: 27.5px;\r\n  }\r\n  .textColorOne{\r\n    color: rgba(86,119,252,0.87);\r\n  }\r\n  .textColorTwo{\r\n    color: rgba(0,0,0,0.38);\r\n  }\r\n  select{\r\n    border: none;\r\n    border-bottom: 1px solid rgba(86,119,252,0.87);\r\n    -webkit-appearance:none;\r\n    appearance:none;\r\n    margin-right: 15px;\r\n  }\r\n  select:nth-of-type(1){\r\n    width: 90px;\r\n    box-sizing: border-box;\r\n    padding-left: 16.5px;\r\n    margin-left: -16.5px;\r\n  }\r\n  select:nth-of-type(2), select:nth-of-type(3){\r\n    width: 60px;\r\n    box-sizing: border-box;\r\n    padding-left: 13.5px;\r\n  }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// myInfo.vue?32310584","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"button[data-v-21dda544],input[data-v-21dda544],select[data-v-21dda544]{outline:none}.myInfo img[data-v-21dda544]{width:.933333rem;height:.933333rem;border-radius:100%;margin-top:.346667rem;margin-bottom:.286667rem}.myInfo form .myInfoFormList[data-v-21dda544]{width:4.053333rem;margin:0 auto;margin-bottom:.28rem;padding-left:.233333rem;box-sizing:border-box;text-align:left}.myInfo form .myInfoFormList>div.datas[data-v-21dda544]{width:100%;border:none;margin-left:-.22rem}.myInfo form .myInfoFormList>div.datas>span[data-v-21dda544]{font-size:.213333rem;line-height:.3rem;height:.3rem;display:inline-block;color:#212121;border-bottom:.013333rem solid rgba(86,119,252,.87);padding:0 .22rem;margin-right:.2rem}.myInfo form .myInfoFormList .fontSizeOne[data-v-21dda544]{display:block}.myInfo form .myInfoFormList .myInfoEmail[data-v-21dda544]{color:rgba(0,0,0,.56)}.myInfo form .myInfoFormList>button.emailBtn[data-v-21dda544]{width:.84rem;height:.333333rem;border:none;border-radius:.053333rem;background:#5677fc;color:#fff;float:right}.myInfo form .myInfoFormList .myInfoName[data-v-21dda544]{color:rgba(0,0,0,.87);border:none}.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]{width:.133333rem;height:.133333rem;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;position:relative;border:.026667rem solid #9a9a9a;border-radius:100%}.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]:checked{border:.046667rem solid #6c89fc;border-radius:100%}.myInfo form .myInfoFormList .myInfoSex[data-v-21dda544]{display:inline-block;margin-right:.54rem}.myInfo form div[data-v-21dda544]:nth-child(2){border-bottom:.013333rem solid rgba(86,119,252,.87)}.myInfo>button[data-v-21dda544]{width:4.053333rem;border:none;background-color:#5677fc;font-size:.213333rem;line-height:.3rem;color:hsla(0,0%,100%,.87);padding:.146667rem 1.813333rem;box-sizing:border-box;border-radius:.053333rem;box-shadow:0 0 .013333rem 0 rgba(0,0,0,.12),0 .013333rem .013333rem 0 rgba(0,0,0,.24);margin-top:.586667rem}.fontSizeOne[data-v-21dda544],.fontSizeThere[data-v-21dda544]{font-size:.16rem;line-height:.22rem}.fontSizeOne[data-v-21dda544]{margin-bottom:.08rem}.fontSizeTwo[data-v-21dda544]{font-size:.213333rem;line-height:.366667rem}.textColorOne[data-v-21dda544]{color:rgba(86,119,252,.87)}.textColorTwo[data-v-21dda544]{color:rgba(0,0,0,.38)}select[data-v-21dda544]{border:none;border-bottom:.013333rem solid rgba(86,119,252,.87);-webkit-appearance:none;-moz-appearance:none;appearance:none;margin-right:.2rem}select[data-v-21dda544]:first-of-type{width:1.2rem;box-sizing:border-box;padding-left:.22rem;margin-left:-.22rem}select[data-v-21dda544]:nth-of-type(2),select[data-v-21dda544]:nth-of-type(3){width:.8rem;box-sizing:border-box;padding-left:.18rem}\", \"\", {\"version\":3,\"sources\":[\"D:/wuan_webapp1/wuanlife_webapp/src/views/myInfo.vue\"],\"names\":[],\"mappings\":\"AAAA,uEAGE,YAAc,CACf,AAED,6BACE,iBAAmB,AACnB,kBAAoB,AACpB,mBAAoB,AACpB,sBAAwB,AACxB,wBAA2B,CAC5B,AAED,8CACE,kBAAmB,AACnB,cAAe,AACf,qBAAuB,AACvB,wBAA0B,AAC1B,sBAAuB,AACvB,eAAiB,CAClB,AAED,wDACE,WAAY,AACZ,YAAa,AACb,mBAAsB,CACvB,AAED,6DACE,qBAAuB,AACvB,kBAAoB,AACpB,aAAe,AACf,qBAAsB,AACtB,cAAe,AACf,oDAA0D,AAC1D,iBAAmB,AACnB,kBAAqB,CACtB,AAED,2DACE,aAAe,CAChB,AAED,2DACE,qBAA2B,CAC5B,AAED,8DACE,aAAe,AACf,kBAAoB,AACpB,YAAa,AACb,yBAA2B,AAC3B,mBAAoB,AACpB,WAAe,AACf,WAAa,CACd,AAED,0DACE,sBAA2B,AAC3B,WAAa,CACd,AAED,+DACE,iBAAmB,AACnB,kBAAoB,AACpB,sBAAuB,AACvB,wBAAyB,AACtB,qBAAsB,AACjB,gBAAiB,AACzB,kBAAmB,AACnB,gCAAkC,AAClC,kBAAoB,CACrB,AAED,uEACE,gCAAkC,AAClC,kBAAoB,CACrB,AAED,yDACE,qBAAsB,AACtB,mBAAsB,CACvB,AAED,+CACE,mDAA0D,CAC3D,AAED,gCACE,kBAAmB,AACnB,YAAa,AACb,yBAA0B,AAC1B,qBAAuB,AACvB,kBAAoB,AACpB,0BAAiC,AACjC,+BAAiC,AACjC,sBAAuB,AACvB,yBAA2B,AAC3B,sFAAmG,AACnG,qBAAwB,CACzB,AAED,8DAEE,iBAAmB,AACnB,kBAAqB,CACtB,AAED,8BACE,oBAAuB,CACxB,AAED,8BACE,qBAAuB,AACvB,sBAAyB,CAC1B,AAED,+BACE,0BAAgC,CACjC,AAED,+BACE,qBAA2B,CAC5B,AAED,wBACE,YAAa,AACb,oDAA0D,AAC1D,wBAAyB,AACzB,qBAAsB,AACjB,gBAAiB,AACtB,kBAAqB,CACtB,AAED,sCACE,aAAc,AACd,sBAAuB,AACvB,oBAAsB,AACtB,mBAAsB,CACvB,AAED,8EAEE,YAAc,AACd,sBAAuB,AACvB,mBAAsB,CACvB\",\"file\":\"myInfo.vue\",\"sourcesContent\":[\"button[data-v-21dda544],\\ninput[data-v-21dda544],\\nselect[data-v-21dda544] {\\n  outline: none;\\n}\\n\\n.myInfo img[data-v-21dda544] {\\n  width: 0.933333rem;\\n  height: 0.933333rem;\\n  border-radius: 100%;\\n  margin-top: 0.346667rem;\\n  margin-bottom: 0.286667rem;\\n}\\n\\n.myInfo form .myInfoFormList[data-v-21dda544] {\\n  width: 4.053333rem;\\n  margin: 0 auto;\\n  margin-bottom: 0.28rem;\\n  padding-left: 0.233333rem;\\n  box-sizing: border-box;\\n  text-align: left;\\n}\\n\\n.myInfo form .myInfoFormList > div.datas[data-v-21dda544] {\\n  width: 100%;\\n  border: none;\\n  margin-left: -0.22rem;\\n}\\n\\n.myInfo form .myInfoFormList > div.datas > span[data-v-21dda544] {\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  height: 0.3rem;\\n  display: inline-block;\\n  color: #212121;\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n  padding: 0 0.22rem;\\n  margin-right: 0.2rem;\\n}\\n\\n.myInfo form .myInfoFormList .fontSizeOne[data-v-21dda544] {\\n  display: block;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoEmail[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.56);\\n}\\n\\n.myInfo form .myInfoFormList > button.emailBtn[data-v-21dda544] {\\n  width: 0.84rem;\\n  height: 0.333333rem;\\n  border: none;\\n  border-radius: 0.053333rem;\\n  background: #5677FC;\\n  color: #FFFFFF;\\n  float: right;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoName[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.87);\\n  border: none;\\n}\\n\\n.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544] {\\n  width: 0.133333rem;\\n  height: 0.133333rem;\\n  box-sizing: border-box;\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  position: relative;\\n  border: 0.026667rem solid #9a9a9a;\\n  border-radius: 100%;\\n}\\n\\n.myInfo form .myInfoFormList input.myInfoSexF[data-v-21dda544]:checked {\\n  border: 0.046667rem solid #6c89fc;\\n  border-radius: 100%;\\n}\\n\\n.myInfo form .myInfoFormList .myInfoSex[data-v-21dda544] {\\n  display: inline-block;\\n  margin-right: 0.54rem;\\n}\\n\\n.myInfo form div[data-v-21dda544]:nth-child(2) {\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n}\\n\\n.myInfo > button[data-v-21dda544] {\\n  width: 4.053333rem;\\n  border: none;\\n  background-color: #5677FC;\\n  font-size: 0.213333rem;\\n  line-height: 0.3rem;\\n  color: rgba(255, 255, 255, 0.87);\\n  padding: 0.146667rem 1.813333rem;\\n  box-sizing: border-box;\\n  border-radius: 0.053333rem;\\n  box-shadow: 0 0 0.013333rem 0 rgba(0, 0, 0, 0.12), 0 0.013333rem 0.013333rem 0 rgba(0, 0, 0, 0.24);\\n  margin-top: 0.586667rem;\\n}\\n\\n.fontSizeOne[data-v-21dda544],\\n.fontSizeThere[data-v-21dda544] {\\n  font-size: 0.16rem;\\n  line-height: 0.22rem;\\n}\\n\\n.fontSizeOne[data-v-21dda544] {\\n  margin-bottom: 0.08rem;\\n}\\n\\n.fontSizeTwo[data-v-21dda544] {\\n  font-size: 0.213333rem;\\n  line-height: 0.366667rem;\\n}\\n\\n.textColorOne[data-v-21dda544] {\\n  color: rgba(86, 119, 252, 0.87);\\n}\\n\\n.textColorTwo[data-v-21dda544] {\\n  color: rgba(0, 0, 0, 0.38);\\n}\\n\\nselect[data-v-21dda544] {\\n  border: none;\\n  border-bottom: 0.013333rem solid rgba(86, 119, 252, 0.87);\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n       appearance: none;\\n  margin-right: 0.2rem;\\n}\\n\\nselect[data-v-21dda544]:nth-of-type(1) {\\n  width: 1.2rem;\\n  box-sizing: border-box;\\n  padding-left: 0.22rem;\\n  margin-left: -0.22rem;\\n}\\n\\nselect[data-v-21dda544]:nth-of-type(2),\\nselect[data-v-21dda544]:nth-of-type(3) {\\n  width: 0.8rem;\\n  box-sizing: border-box;\\n  padding-left: 0.18rem;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-21dda544\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/myInfo.vue\n// module id = 244\n// module chunks = 9","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-21dda544\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./myInfo.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7652551e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-21dda544\",\"scoped\":true,\"hasInlineConfig\":true}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/myInfo.vue\n// module id = 272\n// module chunks = 9","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"myInfo\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.saveInfos.avatar_url\n    },\n    on: {\n      \"click\": _vm.pushImg\n    }\n  }), _vm._v(\" \"), _c('form', [_c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorTwo\"\n  }, [_vm._v(\"邮箱\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"fontSizeTwo myInfoEmail\"\n  }, [_vm._v(_vm._s(_vm.backMyInfo.mail))]), _vm._v(\" \"), (_vm.backMyInfo.mail_checked) ? _c('button', {\n    staticClass: \"fontSizeThere emailBtn\"\n  }, [_vm._v(\"已验证\")]) : _c('button', {\n    staticClass: \"fontSizeThere emailBtn\"\n  }, [_vm._v(\"验证\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"昵称\")]), _vm._v(\" \"), _c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.lazy\",\n      value: (this.saveInfos.name),\n      expression: \"this.saveInfos.name\",\n      modifiers: {\n        \"lazy\": true\n      }\n    }],\n    staticClass: \"fontSizeTwo myInfoName\",\n    attrs: {\n      \"type\": \"text\"\n    },\n    domProps: {\n      \"value\": (this.saveInfos.name)\n    },\n    on: {\n      \"change\": function($event) {\n        this.saveInfos.name = $event.target.value\n      }\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"性别\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"one\",\n      \"value\": \"男\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked1\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(1)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo myInfoSex\",\n    attrs: {\n      \"for\": \"one\"\n    }\n  }, [_vm._v(\"男\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"Two\",\n      \"value\": \"女\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked2\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(2)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo myInfoSex\",\n    attrs: {\n      \"for\": \"Two\"\n    }\n  }, [_vm._v(\"女\")]), _vm._v(\" \"), _c('input', {\n    staticClass: \"myInfoSexF\",\n    attrs: {\n      \"type\": \"radio\",\n      \"id\": \"There\",\n      \"value\": \"不想透露\"\n    },\n    domProps: {\n      \"checked\": _vm.isChecked3\n    },\n    on: {\n      \"click\": function($event) {\n        _vm.sexF(3)\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"fontSizeTwo\",\n    attrs: {\n      \"for\": \"There\"\n    }\n  }, [_vm._v(\"不想透露\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"myInfoFormList\"\n  }, [_c('label', {\n    staticClass: \"fontSizeOne textColorOne\"\n  }, [_vm._v(\"生日\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"datas\",\n    on: {\n      \"click\": _vm.handleClick\n    }\n  }, [_c('span', [_vm._v(_vm._s(_vm.year) + \"年\")]), _c('span', [_vm._v(_vm._s(_vm.mouth) + \"月\")]), _c('span', [_vm._v(_vm._s(_vm.day) + \"日\")])]), _vm._v(\" \"), _c('DatePicker', {\n    attrs: {\n      \"open\": _vm.open,\n      \"value\": _vm.value3,\n      \"confirm\": \"\",\n      \"type\": \"date\",\n      \"placement\": \"top-start\"\n    },\n    on: {\n      \"on-change\": _vm.handleChange,\n      \"on-clear\": _vm.handleClear,\n      \"on-ok\": _vm.handleOk\n    }\n  }, [_c('a', {\n    staticStyle: {\n      \"opacity\": \"0\"\n    },\n    attrs: {\n      \"href\": \"javascript:void(0)\"\n    },\n    on: {\n      \"click\": _vm.handleClick\n    }\n  }, [(_vm.value3 === '') ? [_vm._v(\"选择日期\")] : [_vm._v(_vm._s(_vm.value3))]], 2)])], 1)]), _vm._v(\" \"), _c('button', {\n    staticClass: \"fontSizeTwo\",\n    on: {\n      \"click\": _vm.saveInfo\n    }\n  }, [_vm._v(\"保存\")])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-21dda544\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/myInfo.vue\n// module id = 300\n// module chunks = 9"],"sourceRoot":""}